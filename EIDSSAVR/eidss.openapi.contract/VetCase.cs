using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace eidss.openapi.contract
{
    /// <summary>Full description of Vet Case</summary>
    public class VetCase 
    {
        /// <summary>
        /// A unique number of the record
        /// </summary>
        public long RecordID { get; set; }

        /// <summary>
        /// A number that is assigned to the individual case and automatically generated by EIDSS. The number appears when the case information is saved first time. 
        /// </summary>
        public string CaseID { get; set; }

        /// <summary>
        /// Diagnosis<br/>
        /// Reference number: 19000019<br/>
        /// Reference type: Diagnosis
        /// </summary>
        public Diagnosis Diagnosis { get; set; }

        /// <summary>
        /// Final Diagnosis<br/>
        /// Reference number: 19000019<br/>
        /// Reference type: Diagnosis
        /// </summary>
        public Diagnosis FinalDiagnosis { get; set; }

        /// <summary>
        /// Tentative Diagnosis 1<br/>
        /// Reference number: 19000019<br/>
        /// Reference type: Diagnosis
        /// </summary>
        public Diagnosis TentativeDiagnosis1 { get; set; }

        /// <summary>
        /// Tentative Diagnosis 2<br/>
        /// Reference number: 19000019<br/>
        /// Reference type: Diagnosis
        /// </summary>
        public Diagnosis TentativeDiagnosis2 { get; set; }

        /// <summary>
        /// Tentative Diagnosis 3<br/>
        /// Reference number: 19000019<br/>
        /// Reference type: Diagnosis
        /// </summary>
        public Diagnosis TentativeDiagnosis3 { get; set; }

        /// <summary>
        /// User assigns classification based on case definition for disease. <br/>
        /// Reference number: 19000011<br/>
        /// Reference type: Case Classification
        /// </summary>
        public Reference CaseClassification { get; set; }

        /// <summary>
        /// In process and Closed are the user options to indicate that the investigation is continuing (In process) or has concluded (closed).  Once closed, other fields in the record become read only.<br/>
        /// Reference number: 19000111<br/>
        /// Reference type: Case Status
        /// </summary>
        public Reference CaseStatus { get; set; }

        /// <summary>
        /// System assigns report as either Livestock or Avian based on form used for data entry.<br/>
        /// Reference number: 19000012<br/>
        /// Reference type: Case Type
        /// </summary>
        public Reference CaseType { get; set; }

        /// <summary>
        /// Identifies the method by which the report became known.  Cases identified through a surveillance program will be labled as "Active" in AVR while regular case entries will be labled "Passive."<br/>
        /// Reference number: 19000144<br/>
        /// Reference type: Case Report Type
        /// </summary>
        public Reference ReportType { get; set; }

        /// <summary>
        /// Identifies the person performing the data entry based on application log in entries.<br/>
        /// Reference type: Person Reference
        /// </summary>
        public PersonReference EnteredByOfficer { get; set; }

        /// <summary>
        /// The name of the person who investigated the reported case of disease.<br/>
        /// Reference type: Person Reference
        /// </summary>
        public PersonReference InvestigatorName { get; set; }

        /// <summary>
        /// Officer reporting the information.<br/>
        /// Reference type: Person Reference
        /// </summary>
        public PersonReference ReportedByOfficer { get; set; }

        /// <summary>
        /// Date that a case investigation began. 
        /// </summary>
        public DateTime? InvestigationDate { get; set; }

        /// <summary>
        /// Date that the case was assigned to the investigator.
        /// </summary>
        public DateTime? AssignedDate { get; set; }

        /// <summary>
        /// This value is auto populated to reflect the date when the record was first created.
        /// </summary>
        public DateTime? EnteredDate { get; set; }

        /// <summary>
        /// The application auto populates this field with the system date.  
        /// </summary>
        public DateTime? FinalDiagnosisDate { get; set; }

        /// <summary>
        /// Date the case was first reported by the Officer identified in the Reported By field.
        /// </summary>
        public DateTime? InitialReportDate { get; set; }

        /// <summary>
        /// Tentative Diagnosis 1 Date
        /// </summary>
        public DateTime? TentativeDiagnosis1Date { get; set; }

        /// <summary>
        /// Tentative Diagnosis 2 Date
        /// </summary>
        public DateTime? TentativeDiagnosis2Date { get; set; }

        /// <summary>
        /// Tentative Diagnosis 3 Date
        /// </summary>
        public DateTime? TentativeDiagnosis3Date { get; set; }

        /// <summary>
        /// User may enter a local reference number to identify the record.
        /// </summary>
        public string FieldAccessionID { get; set; }

        /// <summary>
        /// A number that uniquely identifies an outbreak incidence. 
        /// </summary>
        public string OutbreakID { get; set; }

        /// <summary>
        /// Farm
        /// </summary>
        public Farm Farm { get; set; }

        /// <summary>
        /// List of Samples
        /// </summary>
        public List<Sample> Samples { get; set; }

        /// <summary>
        /// List of Tests
        /// </summary>
        public List<Test> Tests { get; set; }

        /// <summary>
        /// List of TestInterpretations
        /// </summary>
        public List<TestInterpretation> TestInterpretations { get; set; }

        /// <summary>
        /// List of Penside Tests
        /// </summary>
        public List<PensideTest> PensideTests { get; set; }

        /// <summary>
        /// List of Herds
        /// </summary>
        public List<Herd> Herds { get; set; }

        /// <summary>
        /// List of Species
        /// </summary>
        public List<Species> Species { get; set; }

        /// <summary>
        /// List of Animals
        /// </summary>
        public List<Animal> Animals { get; set; }

    }
}