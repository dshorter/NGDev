using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace eidss.openapi.contract
{
    /// <summary>Full description of Human Case</summary>
    public class HumanCase 
    {
        /// <summary>
        /// A unique number of the record
        /// </summary>
        public long RecordID { get; set; }

        /// <summary>
        /// A number that is assigned to the individual case and automatically generated by EIDSS. The number appears when the case information is saved first time. 
        /// </summary>
        public string CaseID { get; set; }

        /// <summary>
        /// An unique identification number, determined by each country, used to identify the patient.
        /// </summary>
        public string LocalID { get; set; }

        /// <summary>
        /// Other location (besides hospital or home) that the patient is at the time of notification.
        /// </summary>
        public string OtherLocationAtTimeOfNotification { get; set; }

        /// <summary>
        /// Hospital name where patient was at time of the notification
        /// </summary>
        public string HospitalAtTimeOfNotification { get; set; }

        /// <summary>
        /// Name of the facility where patient was hospitalized for notified condition.
        /// </summary>
        public string PlaceOfHospitalization { get; set; }

        /// <summary>
        /// The name of the facility where patient first sought care for the symptoms of his/her illness. 
        /// </summary>
        public string FacilityWherePatientFirstSoughtCare { get; set; }

        /// <summary>
        /// Additinoal information and comments to the case
        /// </summary>
        public string AdditionalInformationComments { get; set; }

        /// <summary>
        /// The type of information (clinical) based on which the final diagnosis was made 
        /// </summary>
        public bool? BasisOfDiagnosisClinical { get; set; }

        /// <summary>
        /// The type of information (laboratory) based on which the final diagnosis was made 
        /// </summary>
        public bool? BasisOfDiagnosisLaboratoryTest { get; set; }

        /// <summary>
        /// The type of information (epidemiological links) based on which the final diagnosis was made 
        /// </summary>
        public bool? BasisOfDiagnosisEpidemiologicalLinks { get; set; }

        /// <summary>
        /// An updated condition or disease assigned to the patient that replaces the initial diagnosis. <br/>
        /// Reference number: 19000019<br/>
        /// Reference type: Diagnosis
        /// </summary>
        public Diagnosis ChangedDiagnosis { get; set; }

        /// <summary>
        /// The initial condition or disease assigned to the case; initial diagnosis that was given when case was notified to the public health agency.<br/>
        /// Reference number: 19000019<br/>
        /// Reference type: Diagnosis
        /// </summary>
        public Diagnosis Diagnosis { get; set; }

        /// <summary>
        /// Status of case information entry into the system. There are two options for this field: In process and Closed. "In process" is the default option. Status should be changed to "Closed", after laboratory and epidemiological investigation is completed and final diagnosis made, thus making all the data fields "read-only".<br/>
        /// Reference number: 19000111<br/>
        /// Reference type: Case Status
        /// </summary>
        public Reference CaseStatus { get; set; }

        /// <summary>
        /// Classification of the case according to surveillance case definitions based on the initial diagnosis. <br/>
        /// Reference number: 19000011<br/>
        /// Reference type: Case Classification
        /// </summary>
        public Reference InitialCaseClassification { get; set; }

        /// <summary>
        /// Classification of the case according to surveillance case definitions developed based on the final diagnosis, laboratory tests results and epidemiological information. <br/>
        /// Reference number: 19000011<br/>
        /// Reference type: Case Classification
        /// </summary>
        public Reference FinalCaseClassification { get; set; }

        /// <summary>
        /// A physical status of the patient at the time of notification. <br/>
        /// Reference number: 19000035<br/>
        /// Reference type: Patient State
        /// </summary>
        public Reference PatientStatusAtNotificationTime { get; set; }

        /// <summary>
        /// Antibiotic or antiviral therapy administered prior to specimen collection The antibiotic/antiviral could be self administered by the patient, or prescribed by a physician.<br/>
        /// Reference number: 19000100<br/>
        /// Reference type: Yes/No Value List
        /// </summary>
        public Reference AntibioticsAdministrated { get; set; }

        /// <summary>
        /// Hospitalization of the patient for notified condition <br/>
        /// Reference number: 19000100<br/>
        /// Reference type: Yes/No Value List
        /// </summary>
        public Reference Hospitalization { get; set; }

        /// <summary>
        /// User enters if a sample was or was not collected from the patient. <br/>
        /// Reference number: 19000100<br/>
        /// Reference type: Yes/No Value List
        /// </summary>
        public Reference SamplesCollected { get; set; }

        /// <summary>
        /// Checked when particular case is related to the particular outbreak<br/>
        /// Reference number: 19000100<br/>
        /// Reference type: Yes/No Value List
        /// </summary>
        public Reference RelationToOutbreak { get; set; }

        /// <summary>
        /// This fields indicates where tests have been conducted<br/>
        /// Reference number: 19000100<br/>
        /// Reference type: Yes/No Value List
        /// </summary>
        public Reference TestsConducted { get; set; }

        /// <summary>
        /// The outcome of the patients at the time of the discharge from the hospital or final diagnosis made.<br/>
        /// Reference number: 19000064<br/>
        /// Reference type: Case Outcome List
        /// </summary>
        public Reference Outcome { get; set; }

        /// <summary>
        /// Any non-notifiable diagnosis that was given to the patient when he/she first sought care after symptom onset.<br/>
        /// Reference number: 19000149<br/>
        /// Reference type: Non-Notifiable Diagnosis
        /// </summary>
        public Reference NonNotifiableDiagnosis { get; set; }

        /// <summary>
        /// Occupation of the patient at the time of notification. <br/>
        /// Reference number: 19000061<br/>
        /// Reference type: Occupation Type
        /// </summary>
        public Reference Occupation { get; set; }

        /// <summary>
        /// The reason why the sample was not collected from the patient should be entered.<br/>
        /// Reference number: 19000150<br/>
        /// Reference type: Not Collected Reason
        /// </summary>
        public Reference ReasonForNotCollectingSamples { get; set; }

        /// <summary>
        /// Location of the patient at the time of notification.<br/>
        /// Reference number: 19000041<br/>
        /// Reference type: Patient Location Type
        /// </summary>
        public Reference LocationAtTimeOfNotification { get; set; }

        /// <summary>
        /// The name of facility that received the notification.<br/>
        /// Reference type: Organization Reference
        /// </summary>
        public OrganizationReference NotificationReceivedByFacility { get; set; }

        /// <summary>
        /// The name of facility that submitted notification to the public health agency.<br/>
        /// Reference type: Organization Reference
        /// </summary>
        public OrganizationReference NotificationSentByFacility { get; set; }

        /// <summary>
        /// The name of Organization that conducting the case investigation.<br/>
        /// Reference type: Organization Reference
        /// </summary>
        public OrganizationReference OrganizationConductingInvestigation { get; set; }

        /// <summary>
        /// The First, Last and Patronymic name of the person that sent the notification of the occurrence of a disease.<br/>
        /// Reference type: Person Reference
        /// </summary>
        public PersonReference NotificationSentByOfficer { get; set; }

        /// <summary>
        /// The First , Patronymic and Last name of the person that received the notification of the occurrence of a disease.<br/>
        /// Reference type: Person Reference
        /// </summary>
        public PersonReference NotificationReceivedByOfficer { get; set; }

        /// <summary>
        /// The name of the epidemiologist that investigated the case.<br/>
        /// Reference type: Person Reference
        /// </summary>
        public PersonReference EpidemiologistName { get; set; }


        /// <summary>
        /// The date when an initial diagnosis was made.
        /// </summary>
        public DateTime? DiagnosisDate { get; set; }

        /// <summary>
        /// The date on which a diagnosis of a disease or condition was changed.
        /// </summary>
        public DateTime? DateOfChangedDiagnosis { get; set; }

        /// <summary>
        /// Date on which a clinic, hospital, office, etc. notifies public health agency about the occurrence of a disease in a subject.
        /// </summary>
        public DateTime? NotificationDate { get; set; }

        /// <summary>
        /// The date the paper case investigation form was completed
        /// </summary>
        public DateTime? DateOfCompletionOfPaperForm { get; set; }

        /// <summary>
        /// Date when patient first sought care after onset of symptoms of his/her illness.
        /// </summary>
        public DateTime? DatePatientFirstSoughtCare { get; set; }

        /// <summary>
        /// Date when patient was hospitalized for current diagnosis or condition.
        /// </summary>
        public DateTime? DateOfHospitalization { get; set; }

        /// <summary>
        /// Date when patient was last present at work or school if patient is a student.
        /// </summary>
        public DateTime? DateOfLastPatientPresenceAtWork { get; set; }

        /// <summary>
        /// Date of the fist exposure of the patient to the risk factor(s).
        /// </summary>
        public DateTime? DateOfExposure { get; set; }

        /// <summary>
        /// Date that patient was discharged from the hospital if patient did not die.
        /// </summary>
        public DateTime? DateOfDischarge { get; set; }

        /// <summary>
        /// The date of first clinical symptom(s) manifestation in patient,  as recalled by the patient.  
        /// </summary>
        public DateTime? DateOfSymptomOnset { get; set; }

        /// <summary>
        /// Date when the case investigation started.
        /// </summary>
        public DateTime? StartingDateOfInvestigation { get; set; }

        /// <summary>
        /// The date the case information was first entered into EIDSS. The date is auto populated prior to case information being saved. 
        /// </summary>
        public DateTime? DateEntered { get; set; }

        /// <summary>
        /// The date the case information was last saved in EIDSS. This date updates each time the case information is saved.
        /// </summary>
        public DateTime? DateLastSaved { get; set; }

        /// <summary>
        /// A number that uniquely identifies an outbreak incidence. 
        /// </summary>
        public string OutbreakID { get; set; }

        /// <summary>
        /// Location of Exposure
        /// </summary>
        public Address LocationOfExposure { get; set; }

        /// <summary>
        /// Patient
        /// </summary>
        public Patient Patient { get; set; }

        /// <summary>
        /// List of Samples
        /// </summary>
        public List<Sample> Samples { get; set; }

        /// <summary>
        /// List of Tests
        /// </summary>
        public List<Test> Tests { get; set; }

        /// <summary>
        /// List of TestInterpretations
        /// </summary>
        public List<TestInterpretation> TestInterpretations { get; set; }
    }
}