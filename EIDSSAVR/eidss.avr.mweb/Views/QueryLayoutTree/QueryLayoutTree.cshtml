@model List<eidss.model.Avr.Tree.AvrTreeElement>
@using eidss.avr.mweb.Utils
@using eidss.model.Resources
@using eidss.web.common.Utils
@using bv.common.Configuration

@{
    ViewBag.Title = @Translator.GetMessageString("titleAVR");
    Layout = "../Shared/_Layout.cshtml";
    var canInsert = eidss.model.Core.AvrPermissions.InsertPermission ? "True" : "False";
}

@Html.IncludeVersionedJs("~/Scripts/EIDSS/TreeList.js")       

<script type="text/javascript">
    $(document).ready(function () {
        queryTreeList.showEditNodes();
        queryTreeList.initTreeList('@canInsert');
    });
    
    
        
</script>
<style>
    .dxWeb_edtCheckBoxUnchecked_DevEx{
        background-image: url('@Url.Content("~/Content/Images/sprite.png")');
        background-position: 0 -46px;
    }
    .dxWeb_edtCheckBoxChecked_DevEx
    {
        background-image: url('@Url.Content("~/Content/Images/sprite.png")');
        background-position: -15px -46px;
    }    
    .dxWeb_edtCheckBoxUnchecked_Office2010Blue{
        background-image: url('@Url.Content("~/Content/Images/sprite.png")');
        background-position: 0 -46px;
    }
    .dxWeb_edtCheckBoxChecked_Office2010Blue
    {
        background-image: url('@Url.Content("~/Content/Images/sprite.png")');
        background-position: -15px -46px;
    }    
</style>

@if (BaseSettings.TranslationMode)
{
    <input type='hidden' id='aspclassname' value='@GetType().FullName' />
}

@using (Html.BeginForm())
{
    @Html.Hidden("hSelectedNodeId",Model.Count>0?Model[0].ID:0);
    <div>
        <div class="topButtonPanel">
            
            <table class="actionPanel">
                <tbody>
                    <tr>
                        <td class="reportButtons one">
                            @Html.DevExpress().Menu(
                                settings =>
                                    {
                                        settings.Name = "avrMainMenu";
                                        settings.AllowSelectItem = true;
                                        settings.EnableClientSideAPI = true;
                                        settings.EnableHotTrack = true;
                                        settings.EnableAnimation = true;
                                        settings.AppearAfter = 300;
                                        settings.DisappearAfter = 500;
                                        settings.MaximumDisplayLevels = 0;
                                        settings.ShowPopOutImages = DefaultBoolean.True;
                                        //settings.Style.Value = "";
                                        //TODO вставить стили
                                        //settings.Styles.Node.CssClass = "treeClass";
                                        settings.Items.Add(item => {
                                                                       item.Text = EidssMenu.Instance.GetString("MenuExport");
                                                                       item.Name = "mnuExport";
                                                                       item.Items.Add(EidssMenu.Instance.GetString("MenuExport1"), "mnuExportToXlsx");//.NavigateUrl = DevExpressHelper.GetUrl(new { Controller = "Menu", Action = "QueryLine" });
                                                                       item.Items.Add(EidssMenu.Instance.GetString("MenuExport2"), "mnuExportToXls");
                                                                       item.Items.Add(EidssMenu.Instance.GetString("MenuExport3"), "mnuExportToMdb");
                                        });

                                        settings.ClientSideEvents.ItemClick = "queryTreeList.onExport";
                                        settings.RightToLeft = Cultures.IsRtl ? DefaultBoolean.True : DefaultBoolean.False;
                        
                                    }).GetHtml()
                        </td>
                        <td class="actionButtons">
                            <input id="btnOpenView" class="button" type="button" value='@Translator.GetMessageString("LayoutView")' disabled="disabled" onclick="queryTreeList.showView('');"/>
                            <input id="btnOpenPivot" class="button" type="button" value='@Translator.GetMessageString("PivotGrid")' disabled="disabled" onclick="queryTreeList.showPivot('', true);"/>
                            <input id="btnCopy" class="button" type="button" value='@Translator.GetMessageString("CopyLayout")' disabled="disabled" onclick="queryTreeList.copy();"/>
                            <input id="btnAddFolder" class="button" type="button" value='@Translator.GetMessageString("NewFolder")' disabled="disabled" onclick="queryTreeList.addFolder();"/>
                            <input id="btnAddLayout" class="button" type="button" value='@Translator.GetMessageString("NewLayout")' disabled="disabled" onclick="queryTreeList.addLayout();"/>
                            <input id="btnRefreshData" class="button" type="button"  value='@Translator.GetMessageString("RefreshData")' disabled="disabled" onclick="queryTreeList.refreshData();"/>
                    @if (BaseSettings.TranslationMode)
                    {
                            <input id="btnTranslationTool" class="button" type="button" value='@Translator.GetMessageString("btTranslationTool")' onclick="avrTranslation.OpenTranslationWindow();" />
                    }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        @Html.Partial("QueryLayoutTreePartial", Model)
    </div>
}