//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eidss.openapi.test.OpenApiService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string externalSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string languageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string organizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string externalSystem {
            get {
                return this.externalSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.externalSystemField, value) != true)) {
                    this.externalSystemField = value;
                    this.RaisePropertyChanged("externalSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string language {
            get {
                return this.languageField;
            }
            set {
                if ((object.ReferenceEquals(this.languageField, value) != true)) {
                    this.languageField = value;
                    this.RaisePropertyChanged("language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string organization {
            get {
                return this.organizationField;
            }
            set {
                if ((object.ReferenceEquals(this.organizationField, value) != true)) {
                    this.organizationField = value;
                    this.RaisePropertyChanged("organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HumanCase", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class HumanCase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInformationCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference AntibioticsAdministratedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BasisOfDiagnosisClinicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BasisOfDiagnosisEpidemiologicalLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BasisOfDiagnosisLaboratoryTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis ChangedDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEnteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateLastSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfChangedDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfCompletionOfPaperFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfDischargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfExposureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfHospitalizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfLastPatientPresenceAtWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfSymptomOnsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatePatientFirstSoughtCareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DiagnosisDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference EpidemiologistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityWherePatientFirstSoughtCareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference FinalCaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalAtTimeOfNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference HospitalizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference InitialCaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference LocationAtTimeOfNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Address LocationOfExposureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference NonNotifiableDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NotificationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.OrganizationReference NotificationReceivedByFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference NotificationReceivedByOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.OrganizationReference NotificationSentByFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference NotificationSentByOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.OrganizationReference OrganizationConductingInvestigationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherLocationAtTimeOfNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutbreakIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference OutcomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Patient PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference PatientStatusAtNotificationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceOfHospitalizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference ReasonForNotCollectingSamplesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference RelationToOutbreakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Sample> SamplesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference SamplesCollectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartingDateOfInvestigationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.TestInterpretation> TestInterpretationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Test> TestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference TestsConductedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInformationComments {
            get {
                return this.AdditionalInformationCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInformationCommentsField, value) != true)) {
                    this.AdditionalInformationCommentsField = value;
                    this.RaisePropertyChanged("AdditionalInformationComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference AntibioticsAdministrated {
            get {
                return this.AntibioticsAdministratedField;
            }
            set {
                if ((object.ReferenceEquals(this.AntibioticsAdministratedField, value) != true)) {
                    this.AntibioticsAdministratedField = value;
                    this.RaisePropertyChanged("AntibioticsAdministrated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BasisOfDiagnosisClinical {
            get {
                return this.BasisOfDiagnosisClinicalField;
            }
            set {
                if ((this.BasisOfDiagnosisClinicalField.Equals(value) != true)) {
                    this.BasisOfDiagnosisClinicalField = value;
                    this.RaisePropertyChanged("BasisOfDiagnosisClinical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BasisOfDiagnosisEpidemiologicalLinks {
            get {
                return this.BasisOfDiagnosisEpidemiologicalLinksField;
            }
            set {
                if ((this.BasisOfDiagnosisEpidemiologicalLinksField.Equals(value) != true)) {
                    this.BasisOfDiagnosisEpidemiologicalLinksField = value;
                    this.RaisePropertyChanged("BasisOfDiagnosisEpidemiologicalLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BasisOfDiagnosisLaboratoryTest {
            get {
                return this.BasisOfDiagnosisLaboratoryTestField;
            }
            set {
                if ((this.BasisOfDiagnosisLaboratoryTestField.Equals(value) != true)) {
                    this.BasisOfDiagnosisLaboratoryTestField = value;
                    this.RaisePropertyChanged("BasisOfDiagnosisLaboratoryTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseStatus {
            get {
                return this.CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusField, value) != true)) {
                    this.CaseStatusField = value;
                    this.RaisePropertyChanged("CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis ChangedDiagnosis {
            get {
                return this.ChangedDiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedDiagnosisField, value) != true)) {
                    this.ChangedDiagnosisField = value;
                    this.RaisePropertyChanged("ChangedDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateEntered {
            get {
                return this.DateEnteredField;
            }
            set {
                if ((this.DateEnteredField.Equals(value) != true)) {
                    this.DateEnteredField = value;
                    this.RaisePropertyChanged("DateEntered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateLastSaved {
            get {
                return this.DateLastSavedField;
            }
            set {
                if ((this.DateLastSavedField.Equals(value) != true)) {
                    this.DateLastSavedField = value;
                    this.RaisePropertyChanged("DateLastSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfChangedDiagnosis {
            get {
                return this.DateOfChangedDiagnosisField;
            }
            set {
                if ((this.DateOfChangedDiagnosisField.Equals(value) != true)) {
                    this.DateOfChangedDiagnosisField = value;
                    this.RaisePropertyChanged("DateOfChangedDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfCompletionOfPaperForm {
            get {
                return this.DateOfCompletionOfPaperFormField;
            }
            set {
                if ((this.DateOfCompletionOfPaperFormField.Equals(value) != true)) {
                    this.DateOfCompletionOfPaperFormField = value;
                    this.RaisePropertyChanged("DateOfCompletionOfPaperForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfDischarge {
            get {
                return this.DateOfDischargeField;
            }
            set {
                if ((this.DateOfDischargeField.Equals(value) != true)) {
                    this.DateOfDischargeField = value;
                    this.RaisePropertyChanged("DateOfDischarge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfExposure {
            get {
                return this.DateOfExposureField;
            }
            set {
                if ((this.DateOfExposureField.Equals(value) != true)) {
                    this.DateOfExposureField = value;
                    this.RaisePropertyChanged("DateOfExposure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfHospitalization {
            get {
                return this.DateOfHospitalizationField;
            }
            set {
                if ((this.DateOfHospitalizationField.Equals(value) != true)) {
                    this.DateOfHospitalizationField = value;
                    this.RaisePropertyChanged("DateOfHospitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfLastPatientPresenceAtWork {
            get {
                return this.DateOfLastPatientPresenceAtWorkField;
            }
            set {
                if ((this.DateOfLastPatientPresenceAtWorkField.Equals(value) != true)) {
                    this.DateOfLastPatientPresenceAtWorkField = value;
                    this.RaisePropertyChanged("DateOfLastPatientPresenceAtWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfSymptomOnset {
            get {
                return this.DateOfSymptomOnsetField;
            }
            set {
                if ((this.DateOfSymptomOnsetField.Equals(value) != true)) {
                    this.DateOfSymptomOnsetField = value;
                    this.RaisePropertyChanged("DateOfSymptomOnset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatePatientFirstSoughtCare {
            get {
                return this.DatePatientFirstSoughtCareField;
            }
            set {
                if ((this.DatePatientFirstSoughtCareField.Equals(value) != true)) {
                    this.DatePatientFirstSoughtCareField = value;
                    this.RaisePropertyChanged("DatePatientFirstSoughtCare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DiagnosisDate {
            get {
                return this.DiagnosisDateField;
            }
            set {
                if ((this.DiagnosisDateField.Equals(value) != true)) {
                    this.DiagnosisDateField = value;
                    this.RaisePropertyChanged("DiagnosisDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference EpidemiologistName {
            get {
                return this.EpidemiologistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EpidemiologistNameField, value) != true)) {
                    this.EpidemiologistNameField = value;
                    this.RaisePropertyChanged("EpidemiologistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityWherePatientFirstSoughtCare {
            get {
                return this.FacilityWherePatientFirstSoughtCareField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityWherePatientFirstSoughtCareField, value) != true)) {
                    this.FacilityWherePatientFirstSoughtCareField = value;
                    this.RaisePropertyChanged("FacilityWherePatientFirstSoughtCare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference FinalCaseClassification {
            get {
                return this.FinalCaseClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalCaseClassificationField, value) != true)) {
                    this.FinalCaseClassificationField = value;
                    this.RaisePropertyChanged("FinalCaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalAtTimeOfNotification {
            get {
                return this.HospitalAtTimeOfNotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalAtTimeOfNotificationField, value) != true)) {
                    this.HospitalAtTimeOfNotificationField = value;
                    this.RaisePropertyChanged("HospitalAtTimeOfNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Hospitalization {
            get {
                return this.HospitalizationField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalizationField, value) != true)) {
                    this.HospitalizationField = value;
                    this.RaisePropertyChanged("Hospitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference InitialCaseClassification {
            get {
                return this.InitialCaseClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialCaseClassificationField, value) != true)) {
                    this.InitialCaseClassificationField = value;
                    this.RaisePropertyChanged("InitialCaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference LocationAtTimeOfNotification {
            get {
                return this.LocationAtTimeOfNotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationAtTimeOfNotificationField, value) != true)) {
                    this.LocationAtTimeOfNotificationField = value;
                    this.RaisePropertyChanged("LocationAtTimeOfNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Address LocationOfExposure {
            get {
                return this.LocationOfExposureField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationOfExposureField, value) != true)) {
                    this.LocationOfExposureField = value;
                    this.RaisePropertyChanged("LocationOfExposure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference NonNotifiableDiagnosis {
            get {
                return this.NonNotifiableDiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.NonNotifiableDiagnosisField, value) != true)) {
                    this.NonNotifiableDiagnosisField = value;
                    this.RaisePropertyChanged("NonNotifiableDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NotificationDate {
            get {
                return this.NotificationDateField;
            }
            set {
                if ((this.NotificationDateField.Equals(value) != true)) {
                    this.NotificationDateField = value;
                    this.RaisePropertyChanged("NotificationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.OrganizationReference NotificationReceivedByFacility {
            get {
                return this.NotificationReceivedByFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationReceivedByFacilityField, value) != true)) {
                    this.NotificationReceivedByFacilityField = value;
                    this.RaisePropertyChanged("NotificationReceivedByFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference NotificationReceivedByOfficer {
            get {
                return this.NotificationReceivedByOfficerField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationReceivedByOfficerField, value) != true)) {
                    this.NotificationReceivedByOfficerField = value;
                    this.RaisePropertyChanged("NotificationReceivedByOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.OrganizationReference NotificationSentByFacility {
            get {
                return this.NotificationSentByFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSentByFacilityField, value) != true)) {
                    this.NotificationSentByFacilityField = value;
                    this.RaisePropertyChanged("NotificationSentByFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference NotificationSentByOfficer {
            get {
                return this.NotificationSentByOfficerField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSentByOfficerField, value) != true)) {
                    this.NotificationSentByOfficerField = value;
                    this.RaisePropertyChanged("NotificationSentByOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationField, value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.OrganizationReference OrganizationConductingInvestigation {
            get {
                return this.OrganizationConductingInvestigationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationConductingInvestigationField, value) != true)) {
                    this.OrganizationConductingInvestigationField = value;
                    this.RaisePropertyChanged("OrganizationConductingInvestigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherLocationAtTimeOfNotification {
            get {
                return this.OtherLocationAtTimeOfNotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherLocationAtTimeOfNotificationField, value) != true)) {
                    this.OtherLocationAtTimeOfNotificationField = value;
                    this.RaisePropertyChanged("OtherLocationAtTimeOfNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutbreakID {
            get {
                return this.OutbreakIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OutbreakIDField, value) != true)) {
                    this.OutbreakIDField = value;
                    this.RaisePropertyChanged("OutbreakID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Outcome {
            get {
                return this.OutcomeField;
            }
            set {
                if ((object.ReferenceEquals(this.OutcomeField, value) != true)) {
                    this.OutcomeField = value;
                    this.RaisePropertyChanged("Outcome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Patient Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference PatientStatusAtNotificationTime {
            get {
                return this.PatientStatusAtNotificationTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientStatusAtNotificationTimeField, value) != true)) {
                    this.PatientStatusAtNotificationTimeField = value;
                    this.RaisePropertyChanged("PatientStatusAtNotificationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaceOfHospitalization {
            get {
                return this.PlaceOfHospitalizationField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceOfHospitalizationField, value) != true)) {
                    this.PlaceOfHospitalizationField = value;
                    this.RaisePropertyChanged("PlaceOfHospitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference ReasonForNotCollectingSamples {
            get {
                return this.ReasonForNotCollectingSamplesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonForNotCollectingSamplesField, value) != true)) {
                    this.ReasonForNotCollectingSamplesField = value;
                    this.RaisePropertyChanged("ReasonForNotCollectingSamples");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference RelationToOutbreak {
            get {
                return this.RelationToOutbreakField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationToOutbreakField, value) != true)) {
                    this.RelationToOutbreakField = value;
                    this.RaisePropertyChanged("RelationToOutbreak");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Sample> Samples {
            get {
                return this.SamplesField;
            }
            set {
                if ((object.ReferenceEquals(this.SamplesField, value) != true)) {
                    this.SamplesField = value;
                    this.RaisePropertyChanged("Samples");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference SamplesCollected {
            get {
                return this.SamplesCollectedField;
            }
            set {
                if ((object.ReferenceEquals(this.SamplesCollectedField, value) != true)) {
                    this.SamplesCollectedField = value;
                    this.RaisePropertyChanged("SamplesCollected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartingDateOfInvestigation {
            get {
                return this.StartingDateOfInvestigationField;
            }
            set {
                if ((this.StartingDateOfInvestigationField.Equals(value) != true)) {
                    this.StartingDateOfInvestigationField = value;
                    this.RaisePropertyChanged("StartingDateOfInvestigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.TestInterpretation> TestInterpretations {
            get {
                return this.TestInterpretationsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestInterpretationsField, value) != true)) {
                    this.TestInterpretationsField = value;
                    this.RaisePropertyChanged("TestInterpretations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Test> Tests {
            get {
                return this.TestsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestsField, value) != true)) {
                    this.TestsField = value;
                    this.RaisePropertyChanged("Tests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference TestsConducted {
            get {
                return this.TestsConductedField;
            }
            set {
                if ((object.ReferenceEquals(this.TestsConductedField, value) != true)) {
                    this.TestsConductedField = value;
                    this.RaisePropertyChanged("TestsConducted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reference", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Reference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Diagnosis", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Diagnosis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AggregateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiagnosisNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDC10CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessoryCode {
            get {
                return this.AccessoryCodeField;
            }
            set {
                if ((this.AccessoryCodeField.Equals(value) != true)) {
                    this.AccessoryCodeField = value;
                    this.RaisePropertyChanged("AccessoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Aggregate {
            get {
                return this.AggregateField;
            }
            set {
                if ((this.AggregateField.Equals(value) != true)) {
                    this.AggregateField = value;
                    this.RaisePropertyChanged("Aggregate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiagnosisName {
            get {
                return this.DiagnosisNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisNameField, value) != true)) {
                    this.DiagnosisNameField = value;
                    this.RaisePropertyChanged("DiagnosisName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDC10Code {
            get {
                return this.IDC10CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IDC10CodeField, value) != true)) {
                    this.IDC10CodeField = value;
                    this.RaisePropertyChanged("IDC10Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonReference", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class PersonReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrganizationRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrganizationRecordID {
            get {
                return this.OrganizationRecordIDField;
            }
            set {
                if ((this.OrganizationRecordIDField.Equals(value) != true)) {
                    this.OrganizationRecordIDField = value;
                    this.RaisePropertyChanged("OrganizationRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForeignAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference RayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference SettlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apartment {
            get {
                return this.ApartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ApartmentField, value) != true)) {
                    this.ApartmentField = value;
                    this.RaisePropertyChanged("Apartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Building {
            get {
                return this.BuildingField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingField, value) != true)) {
                    this.BuildingField = value;
                    this.RaisePropertyChanged("Building");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForeignAddress {
            get {
                return this.ForeignAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ForeignAddressField, value) != true)) {
                    this.ForeignAddressField = value;
                    this.RaisePropertyChanged("ForeignAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string House {
            get {
                return this.HouseField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseField, value) != true)) {
                    this.HouseField = value;
                    this.RaisePropertyChanged("House");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Rayon {
            get {
                return this.RayonField;
            }
            set {
                if ((object.ReferenceEquals(this.RayonField, value) != true)) {
                    this.RayonField = value;
                    this.RaisePropertyChanged("Rayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Settlement {
            get {
                return this.SettlementField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlementField, value) != true)) {
                    this.SettlementField = value;
                    this.RaisePropertyChanged("Settlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationReference", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class OrganizationReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference AgeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfDeathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference NationalityCitizenshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Address PatientCurrentResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Address PatientEmployerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference PatientPersonalIDTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Address PermanentResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentResidencePhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RootRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference AgeType {
            get {
                return this.AgeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeTypeField, value) != true)) {
                    this.AgeTypeField = value;
                    this.RaisePropertyChanged("AgeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfDeath {
            get {
                return this.DateOfDeathField;
            }
            set {
                if ((this.DateOfDeathField.Equals(value) != true)) {
                    this.DateOfDeathField = value;
                    this.RaisePropertyChanged("DateOfDeath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployerName {
            get {
                return this.EmployerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerNameField, value) != true)) {
                    this.EmployerNameField = value;
                    this.RaisePropertyChanged("EmployerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployerPhoneNumber {
            get {
                return this.EmployerPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerPhoneNumberField, value) != true)) {
                    this.EmployerPhoneNumberField = value;
                    this.RaisePropertyChanged("EmployerPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference NationalityCitizenship {
            get {
                return this.NationalityCitizenshipField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityCitizenshipField, value) != true)) {
                    this.NationalityCitizenshipField = value;
                    this.RaisePropertyChanged("NationalityCitizenship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Address PatientCurrentResidence {
            get {
                return this.PatientCurrentResidenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientCurrentResidenceField, value) != true)) {
                    this.PatientCurrentResidenceField = value;
                    this.RaisePropertyChanged("PatientCurrentResidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Address PatientEmployer {
            get {
                return this.PatientEmployerField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientEmployerField, value) != true)) {
                    this.PatientEmployerField = value;
                    this.RaisePropertyChanged("PatientEmployer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMiddleName {
            get {
                return this.PatientMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMiddleNameField, value) != true)) {
                    this.PatientMiddleNameField = value;
                    this.RaisePropertyChanged("PatientMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference PatientPersonalIDType {
            get {
                return this.PatientPersonalIDTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientPersonalIDTypeField, value) != true)) {
                    this.PatientPersonalIDTypeField = value;
                    this.RaisePropertyChanged("PatientPersonalIDType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientPhoneNumber {
            get {
                return this.PatientPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientPhoneNumberField, value) != true)) {
                    this.PatientPhoneNumberField = value;
                    this.RaisePropertyChanged("PatientPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Address PermanentResidence {
            get {
                return this.PermanentResidenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentResidenceField, value) != true)) {
                    this.PermanentResidenceField = value;
                    this.RaisePropertyChanged("PermanentResidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentResidencePhoneNumber {
            get {
                return this.PermanentResidencePhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentResidencePhoneNumberField, value) != true)) {
                    this.PermanentResidencePhoneNumberField = value;
                    this.RaisePropertyChanged("PermanentResidencePhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalID {
            get {
                return this.PersonalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalIDField, value) != true)) {
                    this.PersonalIDField = value;
                    this.RaisePropertyChanged("PersonalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RootRecordID {
            get {
                return this.RootRecordIDField;
            }
            set {
                if ((this.RootRecordIDField.Equals(value) != true)) {
                    this.RootRecordIDField = value;
                    this.RaisePropertyChanged("RootRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sample", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Sample : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccessionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AnimalRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.OrganizationReference CollectedByInstitutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference CollectedByOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CollectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference ConditionReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> HumanCaseRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabSampleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalSampleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference SampleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.OrganizationReference SentToOrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SpeciesRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccessionDate {
            get {
                return this.AccessionDateField;
            }
            set {
                if ((this.AccessionDateField.Equals(value) != true)) {
                    this.AccessionDateField = value;
                    this.RaisePropertyChanged("AccessionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AnimalRecordID {
            get {
                return this.AnimalRecordIDField;
            }
            set {
                if ((this.AnimalRecordIDField.Equals(value) != true)) {
                    this.AnimalRecordIDField = value;
                    this.RaisePropertyChanged("AnimalRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.OrganizationReference CollectedByInstitution {
            get {
                return this.CollectedByInstitutionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectedByInstitutionField, value) != true)) {
                    this.CollectedByInstitutionField = value;
                    this.RaisePropertyChanged("CollectedByInstitution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference CollectedByOfficer {
            get {
                return this.CollectedByOfficerField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectedByOfficerField, value) != true)) {
                    this.CollectedByOfficerField = value;
                    this.RaisePropertyChanged("CollectedByOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CollectionDate {
            get {
                return this.CollectionDateField;
            }
            set {
                if ((this.CollectionDateField.Equals(value) != true)) {
                    this.CollectionDateField = value;
                    this.RaisePropertyChanged("CollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference ConditionReceived {
            get {
                return this.ConditionReceivedField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionReceivedField, value) != true)) {
                    this.ConditionReceivedField = value;
                    this.RaisePropertyChanged("ConditionReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> HumanCaseRecordID {
            get {
                return this.HumanCaseRecordIDField;
            }
            set {
                if ((this.HumanCaseRecordIDField.Equals(value) != true)) {
                    this.HumanCaseRecordIDField = value;
                    this.RaisePropertyChanged("HumanCaseRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabSampleID {
            get {
                return this.LabSampleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LabSampleIDField, value) != true)) {
                    this.LabSampleIDField = value;
                    this.RaisePropertyChanged("LabSampleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalSampleID {
            get {
                return this.LocalSampleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalSampleIDField, value) != true)) {
                    this.LocalSampleIDField = value;
                    this.RaisePropertyChanged("LocalSampleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference SampleType {
            get {
                return this.SampleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleTypeField, value) != true)) {
                    this.SampleTypeField = value;
                    this.RaisePropertyChanged("SampleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SentDate {
            get {
                return this.SentDateField;
            }
            set {
                if ((this.SentDateField.Equals(value) != true)) {
                    this.SentDateField = value;
                    this.RaisePropertyChanged("SentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.OrganizationReference SentToOrganization {
            get {
                return this.SentToOrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.SentToOrganizationField, value) != true)) {
                    this.SentToOrganizationField = value;
                    this.RaisePropertyChanged("SentToOrganization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SpeciesRecordID {
            get {
                return this.SpeciesRecordIDField;
            }
            set {
                if ((this.SpeciesRecordIDField.Equals(value) != true)) {
                    this.SpeciesRecordIDField = value;
                    this.RaisePropertyChanged("SpeciesRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestInterpretation", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class TestInterpretation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InterpretationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference InterpretedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference RuleInRuleOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuleInRuleOutCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TestRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference ValidateByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ValidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InterpretationDate {
            get {
                return this.InterpretationDateField;
            }
            set {
                if ((this.InterpretationDateField.Equals(value) != true)) {
                    this.InterpretationDateField = value;
                    this.RaisePropertyChanged("InterpretationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference InterpretedBy {
            get {
                return this.InterpretedByField;
            }
            set {
                if ((object.ReferenceEquals(this.InterpretedByField, value) != true)) {
                    this.InterpretedByField = value;
                    this.RaisePropertyChanged("InterpretedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference RuleInRuleOut {
            get {
                return this.RuleInRuleOutField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleInRuleOutField, value) != true)) {
                    this.RuleInRuleOutField = value;
                    this.RaisePropertyChanged("RuleInRuleOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleInRuleOutComments {
            get {
                return this.RuleInRuleOutCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleInRuleOutCommentsField, value) != true)) {
                    this.RuleInRuleOutCommentsField = value;
                    this.RaisePropertyChanged("RuleInRuleOutComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TestRecordID {
            get {
                return this.TestRecordIDField;
            }
            set {
                if ((this.TestRecordIDField.Equals(value) != true)) {
                    this.TestRecordIDField = value;
                    this.RaisePropertyChanged("TestRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference ValidateBy {
            get {
                return this.ValidateByField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidateByField, value) != true)) {
                    this.ValidateByField = value;
                    this.RaisePropertyChanged("ValidateBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Validated {
            get {
                return this.ValidatedField;
            }
            set {
                if ((this.ValidatedField.Equals(value) != true)) {
                    this.ValidatedField = value;
                    this.RaisePropertyChanged("Validated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationComments {
            get {
                return this.ValidationCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationCommentsField, value) != true)) {
                    this.ValidationCommentsField = value;
                    this.RaisePropertyChanged("ValidationComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidationDate {
            get {
                return this.ValidationDateField;
            }
            set {
                if ((this.ValidationDateField.Equals(value) != true)) {
                    this.ValidationDateField = value;
                    this.RaisePropertyChanged("ValidationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Test", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Test : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResultDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SampleRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference TestCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference TestNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference TestResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestRunIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference TestStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResultDate {
            get {
                return this.ResultDateField;
            }
            set {
                if ((this.ResultDateField.Equals(value) != true)) {
                    this.ResultDateField = value;
                    this.RaisePropertyChanged("ResultDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SampleRecordID {
            get {
                return this.SampleRecordIDField;
            }
            set {
                if ((this.SampleRecordIDField.Equals(value) != true)) {
                    this.SampleRecordIDField = value;
                    this.RaisePropertyChanged("SampleRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference TestCategory {
            get {
                return this.TestCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.TestCategoryField, value) != true)) {
                    this.TestCategoryField = value;
                    this.RaisePropertyChanged("TestCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference TestName {
            get {
                return this.TestNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TestNameField, value) != true)) {
                    this.TestNameField = value;
                    this.RaisePropertyChanged("TestName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference TestResult {
            get {
                return this.TestResultField;
            }
            set {
                if ((object.ReferenceEquals(this.TestResultField, value) != true)) {
                    this.TestResultField = value;
                    this.RaisePropertyChanged("TestResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestRunID {
            get {
                return this.TestRunIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TestRunIDField, value) != true)) {
                    this.TestRunIDField = value;
                    this.RaisePropertyChanged("TestRunID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference TestStatus {
            get {
                return this.TestStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TestStatusField, value) != true)) {
                    this.TestStatusField = value;
                    this.RaisePropertyChanged("TestStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GisReference", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class GisReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HumanCaseListFilter", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class HumanCaseListFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInformationCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AgeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentResidenceCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentResidenceRayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentResidenceRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentResidenceSettlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEnteredFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEnteredToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfCompletionOfPaperFormFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfCompletionOfPaperFormToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfFinalDiagnosisFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfFinalDiagnosisToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfSymptomOnsetFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfSymptomOnsetToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DiagnosisDateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DiagnosisDateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FinalCaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FinalDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> HospitalizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NationalityCitizenshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NotificationDateFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NotificationDateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NotificationReceivedByFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NotificationReceivedByOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NotificationSentByFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NotificationSentByOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OutcomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceOfHospitalizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInformationComments {
            get {
                return this.AdditionalInformationCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInformationCommentsField, value) != true)) {
                    this.AdditionalInformationCommentsField = value;
                    this.RaisePropertyChanged("AdditionalInformationComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AgeFrom {
            get {
                return this.AgeFromField;
            }
            set {
                if ((this.AgeFromField.Equals(value) != true)) {
                    this.AgeFromField = value;
                    this.RaisePropertyChanged("AgeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AgeTo {
            get {
                return this.AgeToField;
            }
            set {
                if ((this.AgeToField.Equals(value) != true)) {
                    this.AgeToField = value;
                    this.RaisePropertyChanged("AgeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AgeType {
            get {
                return this.AgeTypeField;
            }
            set {
                if ((this.AgeTypeField.Equals(value) != true)) {
                    this.AgeTypeField = value;
                    this.RaisePropertyChanged("AgeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CaseStatus {
            get {
                return this.CaseStatusField;
            }
            set {
                if ((this.CaseStatusField.Equals(value) != true)) {
                    this.CaseStatusField = value;
                    this.RaisePropertyChanged("CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentResidenceCountry {
            get {
                return this.CurrentResidenceCountryField;
            }
            set {
                if ((this.CurrentResidenceCountryField.Equals(value) != true)) {
                    this.CurrentResidenceCountryField = value;
                    this.RaisePropertyChanged("CurrentResidenceCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentResidenceRayon {
            get {
                return this.CurrentResidenceRayonField;
            }
            set {
                if ((this.CurrentResidenceRayonField.Equals(value) != true)) {
                    this.CurrentResidenceRayonField = value;
                    this.RaisePropertyChanged("CurrentResidenceRayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentResidenceRegion {
            get {
                return this.CurrentResidenceRegionField;
            }
            set {
                if ((this.CurrentResidenceRegionField.Equals(value) != true)) {
                    this.CurrentResidenceRegionField = value;
                    this.RaisePropertyChanged("CurrentResidenceRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentResidenceSettlement {
            get {
                return this.CurrentResidenceSettlementField;
            }
            set {
                if ((this.CurrentResidenceSettlementField.Equals(value) != true)) {
                    this.CurrentResidenceSettlementField = value;
                    this.RaisePropertyChanged("CurrentResidenceSettlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateEnteredFrom {
            get {
                return this.DateEnteredFromField;
            }
            set {
                if ((this.DateEnteredFromField.Equals(value) != true)) {
                    this.DateEnteredFromField = value;
                    this.RaisePropertyChanged("DateEnteredFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateEnteredTo {
            get {
                return this.DateEnteredToField;
            }
            set {
                if ((this.DateEnteredToField.Equals(value) != true)) {
                    this.DateEnteredToField = value;
                    this.RaisePropertyChanged("DateEnteredTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirthFrom {
            get {
                return this.DateOfBirthFromField;
            }
            set {
                if ((this.DateOfBirthFromField.Equals(value) != true)) {
                    this.DateOfBirthFromField = value;
                    this.RaisePropertyChanged("DateOfBirthFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirthTo {
            get {
                return this.DateOfBirthToField;
            }
            set {
                if ((this.DateOfBirthToField.Equals(value) != true)) {
                    this.DateOfBirthToField = value;
                    this.RaisePropertyChanged("DateOfBirthTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfCompletionOfPaperFormFrom {
            get {
                return this.DateOfCompletionOfPaperFormFromField;
            }
            set {
                if ((this.DateOfCompletionOfPaperFormFromField.Equals(value) != true)) {
                    this.DateOfCompletionOfPaperFormFromField = value;
                    this.RaisePropertyChanged("DateOfCompletionOfPaperFormFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfCompletionOfPaperFormTo {
            get {
                return this.DateOfCompletionOfPaperFormToField;
            }
            set {
                if ((this.DateOfCompletionOfPaperFormToField.Equals(value) != true)) {
                    this.DateOfCompletionOfPaperFormToField = value;
                    this.RaisePropertyChanged("DateOfCompletionOfPaperFormTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfFinalDiagnosisFrom {
            get {
                return this.DateOfFinalDiagnosisFromField;
            }
            set {
                if ((this.DateOfFinalDiagnosisFromField.Equals(value) != true)) {
                    this.DateOfFinalDiagnosisFromField = value;
                    this.RaisePropertyChanged("DateOfFinalDiagnosisFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfFinalDiagnosisTo {
            get {
                return this.DateOfFinalDiagnosisToField;
            }
            set {
                if ((this.DateOfFinalDiagnosisToField.Equals(value) != true)) {
                    this.DateOfFinalDiagnosisToField = value;
                    this.RaisePropertyChanged("DateOfFinalDiagnosisTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfSymptomOnsetForm {
            get {
                return this.DateOfSymptomOnsetFormField;
            }
            set {
                if ((this.DateOfSymptomOnsetFormField.Equals(value) != true)) {
                    this.DateOfSymptomOnsetFormField = value;
                    this.RaisePropertyChanged("DateOfSymptomOnsetForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfSymptomOnsetTo {
            get {
                return this.DateOfSymptomOnsetToField;
            }
            set {
                if ((this.DateOfSymptomOnsetToField.Equals(value) != true)) {
                    this.DateOfSymptomOnsetToField = value;
                    this.RaisePropertyChanged("DateOfSymptomOnsetTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((this.DiagnosisField.Equals(value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DiagnosisDateFrom {
            get {
                return this.DiagnosisDateFromField;
            }
            set {
                if ((this.DiagnosisDateFromField.Equals(value) != true)) {
                    this.DiagnosisDateFromField = value;
                    this.RaisePropertyChanged("DiagnosisDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DiagnosisDateTo {
            get {
                return this.DiagnosisDateToField;
            }
            set {
                if ((this.DiagnosisDateToField.Equals(value) != true)) {
                    this.DiagnosisDateToField = value;
                    this.RaisePropertyChanged("DiagnosisDateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployerName {
            get {
                return this.EmployerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerNameField, value) != true)) {
                    this.EmployerNameField = value;
                    this.RaisePropertyChanged("EmployerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FinalCaseClassification {
            get {
                return this.FinalCaseClassificationField;
            }
            set {
                if ((this.FinalCaseClassificationField.Equals(value) != true)) {
                    this.FinalCaseClassificationField = value;
                    this.RaisePropertyChanged("FinalCaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FinalDiagnosis {
            get {
                return this.FinalDiagnosisField;
            }
            set {
                if ((this.FinalDiagnosisField.Equals(value) != true)) {
                    this.FinalDiagnosisField = value;
                    this.RaisePropertyChanged("FinalDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Hospitalization {
            get {
                return this.HospitalizationField;
            }
            set {
                if ((this.HospitalizationField.Equals(value) != true)) {
                    this.HospitalizationField = value;
                    this.RaisePropertyChanged("Hospitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NationalityCitizenship {
            get {
                return this.NationalityCitizenshipField;
            }
            set {
                if ((this.NationalityCitizenshipField.Equals(value) != true)) {
                    this.NationalityCitizenshipField = value;
                    this.RaisePropertyChanged("NationalityCitizenship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NotificationDateForm {
            get {
                return this.NotificationDateFormField;
            }
            set {
                if ((this.NotificationDateFormField.Equals(value) != true)) {
                    this.NotificationDateFormField = value;
                    this.RaisePropertyChanged("NotificationDateForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NotificationDateTo {
            get {
                return this.NotificationDateToField;
            }
            set {
                if ((this.NotificationDateToField.Equals(value) != true)) {
                    this.NotificationDateToField = value;
                    this.RaisePropertyChanged("NotificationDateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NotificationReceivedByFacility {
            get {
                return this.NotificationReceivedByFacilityField;
            }
            set {
                if ((this.NotificationReceivedByFacilityField.Equals(value) != true)) {
                    this.NotificationReceivedByFacilityField = value;
                    this.RaisePropertyChanged("NotificationReceivedByFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NotificationReceivedByOfficer {
            get {
                return this.NotificationReceivedByOfficerField;
            }
            set {
                if ((this.NotificationReceivedByOfficerField.Equals(value) != true)) {
                    this.NotificationReceivedByOfficerField = value;
                    this.RaisePropertyChanged("NotificationReceivedByOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NotificationSentByFacility {
            get {
                return this.NotificationSentByFacilityField;
            }
            set {
                if ((this.NotificationSentByFacilityField.Equals(value) != true)) {
                    this.NotificationSentByFacilityField = value;
                    this.RaisePropertyChanged("NotificationSentByFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NotificationSentByOfficer {
            get {
                return this.NotificationSentByOfficerField;
            }
            set {
                if ((this.NotificationSentByOfficerField.Equals(value) != true)) {
                    this.NotificationSentByOfficerField = value;
                    this.RaisePropertyChanged("NotificationSentByOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Outcome {
            get {
                return this.OutcomeField;
            }
            set {
                if ((this.OutcomeField.Equals(value) != true)) {
                    this.OutcomeField = value;
                    this.RaisePropertyChanged("Outcome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMiddleName {
            get {
                return this.PatientMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMiddleNameField, value) != true)) {
                    this.PatientMiddleNameField = value;
                    this.RaisePropertyChanged("PatientMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientPhoneNumber {
            get {
                return this.PatientPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientPhoneNumberField, value) != true)) {
                    this.PatientPhoneNumberField = value;
                    this.RaisePropertyChanged("PatientPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaceOfHospitalization {
            get {
                return this.PlaceOfHospitalizationField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceOfHospitalizationField, value) != true)) {
                    this.PlaceOfHospitalizationField = value;
                    this.RaisePropertyChanged("PlaceOfHospitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HumanCaseListItem", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class HumanCaseListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference AgeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CurrentResidenceCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CurrentResidenceSettlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEnteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfCompletionOfPaperFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference FinalCaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis FinalDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference InitialCaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference AgeType {
            get {
                return this.AgeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeTypeField, value) != true)) {
                    this.AgeTypeField = value;
                    this.RaisePropertyChanged("AgeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseStatus {
            get {
                return this.CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusField, value) != true)) {
                    this.CaseStatusField = value;
                    this.RaisePropertyChanged("CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference CurrentResidenceCountry {
            get {
                return this.CurrentResidenceCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentResidenceCountryField, value) != true)) {
                    this.CurrentResidenceCountryField = value;
                    this.RaisePropertyChanged("CurrentResidenceCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRayon {
            get {
                return this.CurrentResidenceRayonField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentResidenceRayonField, value) != true)) {
                    this.CurrentResidenceRayonField = value;
                    this.RaisePropertyChanged("CurrentResidenceRayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRegion {
            get {
                return this.CurrentResidenceRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentResidenceRegionField, value) != true)) {
                    this.CurrentResidenceRegionField = value;
                    this.RaisePropertyChanged("CurrentResidenceRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference CurrentResidenceSettlement {
            get {
                return this.CurrentResidenceSettlementField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentResidenceSettlementField, value) != true)) {
                    this.CurrentResidenceSettlementField = value;
                    this.RaisePropertyChanged("CurrentResidenceSettlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateEntered {
            get {
                return this.DateEnteredField;
            }
            set {
                if ((this.DateEnteredField.Equals(value) != true)) {
                    this.DateEnteredField = value;
                    this.RaisePropertyChanged("DateEntered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfCompletionOfPaperForm {
            get {
                return this.DateOfCompletionOfPaperFormField;
            }
            set {
                if ((this.DateOfCompletionOfPaperFormField.Equals(value) != true)) {
                    this.DateOfCompletionOfPaperFormField = value;
                    this.RaisePropertyChanged("DateOfCompletionOfPaperForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference FinalCaseClassification {
            get {
                return this.FinalCaseClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalCaseClassificationField, value) != true)) {
                    this.FinalCaseClassificationField = value;
                    this.RaisePropertyChanged("FinalCaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis FinalDiagnosis {
            get {
                return this.FinalDiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalDiagnosisField, value) != true)) {
                    this.FinalDiagnosisField = value;
                    this.RaisePropertyChanged("FinalDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference InitialCaseClassification {
            get {
                return this.InitialCaseClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialCaseClassificationField, value) != true)) {
                    this.InitialCaseClassificationField = value;
                    this.RaisePropertyChanged("InitialCaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VetCase", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class VetCase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Animal> AnimalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AssignedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference EnteredByOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EnteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Farm FarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldAccessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis FinalDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinalDiagnosisDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Herd> HerdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InitialReportDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvestigationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference InvestigatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutbreakIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.PensideTest> PensideTestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.PersonReference ReportedByOfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Sample> SamplesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Species> SpeciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TentativeDiagnosis1DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TentativeDiagnosis2DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TentativeDiagnosis3DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.TestInterpretation> TestInterpretationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Test> TestsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Animal> Animals {
            get {
                return this.AnimalsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnimalsField, value) != true)) {
                    this.AnimalsField = value;
                    this.RaisePropertyChanged("Animals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.AssignedDateField;
            }
            set {
                if ((this.AssignedDateField.Equals(value) != true)) {
                    this.AssignedDateField = value;
                    this.RaisePropertyChanged("AssignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseClassification {
            get {
                return this.CaseClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseClassificationField, value) != true)) {
                    this.CaseClassificationField = value;
                    this.RaisePropertyChanged("CaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseStatus {
            get {
                return this.CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusField, value) != true)) {
                    this.CaseStatusField = value;
                    this.RaisePropertyChanged("CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseType {
            get {
                return this.CaseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTypeField, value) != true)) {
                    this.CaseTypeField = value;
                    this.RaisePropertyChanged("CaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference EnteredByOfficer {
            get {
                return this.EnteredByOfficerField;
            }
            set {
                if ((object.ReferenceEquals(this.EnteredByOfficerField, value) != true)) {
                    this.EnteredByOfficerField = value;
                    this.RaisePropertyChanged("EnteredByOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EnteredDate {
            get {
                return this.EnteredDateField;
            }
            set {
                if ((this.EnteredDateField.Equals(value) != true)) {
                    this.EnteredDateField = value;
                    this.RaisePropertyChanged("EnteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Farm Farm {
            get {
                return this.FarmField;
            }
            set {
                if ((object.ReferenceEquals(this.FarmField, value) != true)) {
                    this.FarmField = value;
                    this.RaisePropertyChanged("Farm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldAccessionID {
            get {
                return this.FieldAccessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldAccessionIDField, value) != true)) {
                    this.FieldAccessionIDField = value;
                    this.RaisePropertyChanged("FieldAccessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis FinalDiagnosis {
            get {
                return this.FinalDiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalDiagnosisField, value) != true)) {
                    this.FinalDiagnosisField = value;
                    this.RaisePropertyChanged("FinalDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinalDiagnosisDate {
            get {
                return this.FinalDiagnosisDateField;
            }
            set {
                if ((this.FinalDiagnosisDateField.Equals(value) != true)) {
                    this.FinalDiagnosisDateField = value;
                    this.RaisePropertyChanged("FinalDiagnosisDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Herd> Herds {
            get {
                return this.HerdsField;
            }
            set {
                if ((object.ReferenceEquals(this.HerdsField, value) != true)) {
                    this.HerdsField = value;
                    this.RaisePropertyChanged("Herds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InitialReportDate {
            get {
                return this.InitialReportDateField;
            }
            set {
                if ((this.InitialReportDateField.Equals(value) != true)) {
                    this.InitialReportDateField = value;
                    this.RaisePropertyChanged("InitialReportDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvestigationDate {
            get {
                return this.InvestigationDateField;
            }
            set {
                if ((this.InvestigationDateField.Equals(value) != true)) {
                    this.InvestigationDateField = value;
                    this.RaisePropertyChanged("InvestigationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference InvestigatorName {
            get {
                return this.InvestigatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvestigatorNameField, value) != true)) {
                    this.InvestigatorNameField = value;
                    this.RaisePropertyChanged("InvestigatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutbreakID {
            get {
                return this.OutbreakIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OutbreakIDField, value) != true)) {
                    this.OutbreakIDField = value;
                    this.RaisePropertyChanged("OutbreakID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.PensideTest> PensideTests {
            get {
                return this.PensideTestsField;
            }
            set {
                if ((object.ReferenceEquals(this.PensideTestsField, value) != true)) {
                    this.PensideTestsField = value;
                    this.RaisePropertyChanged("PensideTests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeField, value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.PersonReference ReportedByOfficer {
            get {
                return this.ReportedByOfficerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportedByOfficerField, value) != true)) {
                    this.ReportedByOfficerField = value;
                    this.RaisePropertyChanged("ReportedByOfficer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Sample> Samples {
            get {
                return this.SamplesField;
            }
            set {
                if ((object.ReferenceEquals(this.SamplesField, value) != true)) {
                    this.SamplesField = value;
                    this.RaisePropertyChanged("Samples");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Species> Species {
            get {
                return this.SpeciesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeciesField, value) != true)) {
                    this.SpeciesField = value;
                    this.RaisePropertyChanged("Species");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis1 {
            get {
                return this.TentativeDiagnosis1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TentativeDiagnosis1Field, value) != true)) {
                    this.TentativeDiagnosis1Field = value;
                    this.RaisePropertyChanged("TentativeDiagnosis1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TentativeDiagnosis1Date {
            get {
                return this.TentativeDiagnosis1DateField;
            }
            set {
                if ((this.TentativeDiagnosis1DateField.Equals(value) != true)) {
                    this.TentativeDiagnosis1DateField = value;
                    this.RaisePropertyChanged("TentativeDiagnosis1Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis2 {
            get {
                return this.TentativeDiagnosis2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TentativeDiagnosis2Field, value) != true)) {
                    this.TentativeDiagnosis2Field = value;
                    this.RaisePropertyChanged("TentativeDiagnosis2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TentativeDiagnosis2Date {
            get {
                return this.TentativeDiagnosis2DateField;
            }
            set {
                if ((this.TentativeDiagnosis2DateField.Equals(value) != true)) {
                    this.TentativeDiagnosis2DateField = value;
                    this.RaisePropertyChanged("TentativeDiagnosis2Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis3 {
            get {
                return this.TentativeDiagnosis3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TentativeDiagnosis3Field, value) != true)) {
                    this.TentativeDiagnosis3Field = value;
                    this.RaisePropertyChanged("TentativeDiagnosis3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TentativeDiagnosis3Date {
            get {
                return this.TentativeDiagnosis3DateField;
            }
            set {
                if ((this.TentativeDiagnosis3DateField.Equals(value) != true)) {
                    this.TentativeDiagnosis3DateField = value;
                    this.RaisePropertyChanged("TentativeDiagnosis3Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.TestInterpretation> TestInterpretations {
            get {
                return this.TestInterpretationsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestInterpretationsField, value) != true)) {
                    this.TestInterpretationsField = value;
                    this.RaisePropertyChanged("TestInterpretations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Test> Tests {
            get {
                return this.TestsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestsField, value) != true)) {
                    this.TestsField = value;
                    this.RaisePropertyChanged("Tests");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Farm", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Farm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FarmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RootRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FarmID {
            get {
                return this.FarmIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FarmIDField, value) != true)) {
                    this.FarmIDField = value;
                    this.RaisePropertyChanged("FarmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerFirstName {
            get {
                return this.OwnerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerFirstNameField, value) != true)) {
                    this.OwnerFirstNameField = value;
                    this.RaisePropertyChanged("OwnerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerLastName {
            get {
                return this.OwnerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerLastNameField, value) != true)) {
                    this.OwnerLastNameField = value;
                    this.RaisePropertyChanged("OwnerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerMiddleName {
            get {
                return this.OwnerMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerMiddleNameField, value) != true)) {
                    this.OwnerMiddleNameField = value;
                    this.RaisePropertyChanged("OwnerMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RootRecordID {
            get {
                return this.RootRecordIDField;
            }
            set {
                if ((this.RootRecordIDField.Equals(value) != true)) {
                    this.RootRecordIDField = value;
                    this.RaisePropertyChanged("RootRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Animal", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Animal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SpeciesRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SpeciesRecordID {
            get {
                return this.SpeciesRecordIDField;
            }
            set {
                if ((this.SpeciesRecordIDField.Equals(value) != true)) {
                    this.SpeciesRecordIDField = value;
                    this.RaisePropertyChanged("SpeciesRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Herd", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Herd : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfDeadAnimalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfSickAnimalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalNumberOfAnimalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VetCaseRecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfDeadAnimals {
            get {
                return this.NumberOfDeadAnimalsField;
            }
            set {
                if ((this.NumberOfDeadAnimalsField.Equals(value) != true)) {
                    this.NumberOfDeadAnimalsField = value;
                    this.RaisePropertyChanged("NumberOfDeadAnimals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfSickAnimals {
            get {
                return this.NumberOfSickAnimalsField;
            }
            set {
                if ((this.NumberOfSickAnimalsField.Equals(value) != true)) {
                    this.NumberOfSickAnimalsField = value;
                    this.RaisePropertyChanged("NumberOfSickAnimals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalNumberOfAnimals {
            get {
                return this.TotalNumberOfAnimalsField;
            }
            set {
                if ((this.TotalNumberOfAnimalsField.Equals(value) != true)) {
                    this.TotalNumberOfAnimalsField = value;
                    this.RaisePropertyChanged("TotalNumberOfAnimals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VetCaseRecordID {
            get {
                return this.VetCaseRecordIDField;
            }
            set {
                if ((this.VetCaseRecordIDField.Equals(value) != true)) {
                    this.VetCaseRecordIDField = value;
                    this.RaisePropertyChanged("VetCaseRecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PensideTest", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class PensideTest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AnimalRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldSampleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference PensideTestNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference PensideTestResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SampleRecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AnimalRecordID {
            get {
                return this.AnimalRecordIDField;
            }
            set {
                if ((this.AnimalRecordIDField.Equals(value) != true)) {
                    this.AnimalRecordIDField = value;
                    this.RaisePropertyChanged("AnimalRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldSampleID {
            get {
                return this.FieldSampleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldSampleIDField, value) != true)) {
                    this.FieldSampleIDField = value;
                    this.RaisePropertyChanged("FieldSampleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference PensideTestName {
            get {
                return this.PensideTestNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PensideTestNameField, value) != true)) {
                    this.PensideTestNameField = value;
                    this.RaisePropertyChanged("PensideTestName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference PensideTestResult {
            get {
                return this.PensideTestResultField;
            }
            set {
                if ((object.ReferenceEquals(this.PensideTestResultField, value) != true)) {
                    this.PensideTestResultField = value;
                    this.RaisePropertyChanged("PensideTestResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SampleRecordID {
            get {
                return this.SampleRecordIDField;
            }
            set {
                if ((this.SampleRecordIDField.Equals(value) != true)) {
                    this.SampleRecordIDField = value;
                    this.RaisePropertyChanged("SampleRecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Species", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Species : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference AnimalSpeciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvgAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HerdRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfDeadAnimalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfSickAnimalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartOfSignsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalNumberOfAnimalsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference AnimalSpecies {
            get {
                return this.AnimalSpeciesField;
            }
            set {
                if ((object.ReferenceEquals(this.AnimalSpeciesField, value) != true)) {
                    this.AnimalSpeciesField = value;
                    this.RaisePropertyChanged("AnimalSpecies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvgAge {
            get {
                return this.AvgAgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgAgeField, value) != true)) {
                    this.AvgAgeField = value;
                    this.RaisePropertyChanged("AvgAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HerdRecordID {
            get {
                return this.HerdRecordIDField;
            }
            set {
                if ((this.HerdRecordIDField.Equals(value) != true)) {
                    this.HerdRecordIDField = value;
                    this.RaisePropertyChanged("HerdRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfDeadAnimals {
            get {
                return this.NumberOfDeadAnimalsField;
            }
            set {
                if ((this.NumberOfDeadAnimalsField.Equals(value) != true)) {
                    this.NumberOfDeadAnimalsField = value;
                    this.RaisePropertyChanged("NumberOfDeadAnimals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfSickAnimals {
            get {
                return this.NumberOfSickAnimalsField;
            }
            set {
                if ((this.NumberOfSickAnimalsField.Equals(value) != true)) {
                    this.NumberOfSickAnimalsField = value;
                    this.RaisePropertyChanged("NumberOfSickAnimals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartOfSigns {
            get {
                return this.StartOfSignsField;
            }
            set {
                if ((this.StartOfSignsField.Equals(value) != true)) {
                    this.StartOfSignsField = value;
                    this.RaisePropertyChanged("StartOfSigns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalNumberOfAnimals {
            get {
                return this.TotalNumberOfAnimalsField;
            }
            set {
                if ((this.TotalNumberOfAnimalsField.Equals(value) != true)) {
                    this.TotalNumberOfAnimalsField = value;
                    this.RaisePropertyChanged("TotalNumberOfAnimals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VetCaseListFilter", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class VetCaseListFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EnteredDateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EnteredDateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvestigationDateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvestigationDateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SettlementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CaseClassification {
            get {
                return this.CaseClassificationField;
            }
            set {
                if ((this.CaseClassificationField.Equals(value) != true)) {
                    this.CaseClassificationField = value;
                    this.RaisePropertyChanged("CaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CaseStatus {
            get {
                return this.CaseStatusField;
            }
            set {
                if ((this.CaseStatusField.Equals(value) != true)) {
                    this.CaseStatusField = value;
                    this.RaisePropertyChanged("CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CaseType {
            get {
                return this.CaseTypeField;
            }
            set {
                if ((this.CaseTypeField.Equals(value) != true)) {
                    this.CaseTypeField = value;
                    this.RaisePropertyChanged("CaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((this.DiagnosisField.Equals(value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EnteredDateFrom {
            get {
                return this.EnteredDateFromField;
            }
            set {
                if ((this.EnteredDateFromField.Equals(value) != true)) {
                    this.EnteredDateFromField = value;
                    this.RaisePropertyChanged("EnteredDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EnteredDateTo {
            get {
                return this.EnteredDateToField;
            }
            set {
                if ((this.EnteredDateToField.Equals(value) != true)) {
                    this.EnteredDateToField = value;
                    this.RaisePropertyChanged("EnteredDateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvestigationDateFrom {
            get {
                return this.InvestigationDateFromField;
            }
            set {
                if ((this.InvestigationDateFromField.Equals(value) != true)) {
                    this.InvestigationDateFromField = value;
                    this.RaisePropertyChanged("InvestigationDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvestigationDateTo {
            get {
                return this.InvestigationDateToField;
            }
            set {
                if ((this.InvestigationDateToField.Equals(value) != true)) {
                    this.InvestigationDateToField = value;
                    this.RaisePropertyChanged("InvestigationDateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerFirstName {
            get {
                return this.OwnerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerFirstNameField, value) != true)) {
                    this.OwnerFirstNameField = value;
                    this.RaisePropertyChanged("OwnerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerLastName {
            get {
                return this.OwnerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerLastNameField, value) != true)) {
                    this.OwnerLastNameField = value;
                    this.RaisePropertyChanged("OwnerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Rayon {
            get {
                return this.RayonField;
            }
            set {
                if ((this.RayonField.Equals(value) != true)) {
                    this.RayonField = value;
                    this.RaisePropertyChanged("Rayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Region {
            get {
                return this.RegionField;
            }
            set {
                if ((this.RegionField.Equals(value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Settlement {
            get {
                return this.SettlementField;
            }
            set {
                if ((this.SettlementField.Equals(value) != true)) {
                    this.SettlementField = value;
                    this.RaisePropertyChanged("Settlement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VetCaseListItem", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class VetCaseListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AssignedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference CaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EnteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FarmNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis FinalDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InitialReportDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvestigationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference RayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference SettlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.AssignedDateField;
            }
            set {
                if ((this.AssignedDateField.Equals(value) != true)) {
                    this.AssignedDateField = value;
                    this.RaisePropertyChanged("AssignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseClassification {
            get {
                return this.CaseClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseClassificationField, value) != true)) {
                    this.CaseClassificationField = value;
                    this.RaisePropertyChanged("CaseClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseStatus {
            get {
                return this.CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusField, value) != true)) {
                    this.CaseStatusField = value;
                    this.RaisePropertyChanged("CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference CaseType {
            get {
                return this.CaseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTypeField, value) != true)) {
                    this.CaseTypeField = value;
                    this.RaisePropertyChanged("CaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EnteredDate {
            get {
                return this.EnteredDateField;
            }
            set {
                if ((this.EnteredDateField.Equals(value) != true)) {
                    this.EnteredDateField = value;
                    this.RaisePropertyChanged("EnteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FarmName {
            get {
                return this.FarmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FarmNameField, value) != true)) {
                    this.FarmNameField = value;
                    this.RaisePropertyChanged("FarmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis FinalDiagnosis {
            get {
                return this.FinalDiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalDiagnosisField, value) != true)) {
                    this.FinalDiagnosisField = value;
                    this.RaisePropertyChanged("FinalDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InitialReportDate {
            get {
                return this.InitialReportDateField;
            }
            set {
                if ((this.InitialReportDateField.Equals(value) != true)) {
                    this.InitialReportDateField = value;
                    this.RaisePropertyChanged("InitialReportDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvestigationDate {
            get {
                return this.InvestigationDateField;
            }
            set {
                if ((this.InvestigationDateField.Equals(value) != true)) {
                    this.InvestigationDateField = value;
                    this.RaisePropertyChanged("InvestigationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Rayon {
            get {
                return this.RayonField;
            }
            set {
                if ((object.ReferenceEquals(this.RayonField, value) != true)) {
                    this.RayonField = value;
                    this.RaisePropertyChanged("Rayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeField, value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Settlement {
            get {
                return this.SettlementField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlementField, value) != true)) {
                    this.SettlementField = value;
                    this.RaisePropertyChanged("Settlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis1 {
            get {
                return this.TentativeDiagnosis1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TentativeDiagnosis1Field, value) != true)) {
                    this.TentativeDiagnosis1Field = value;
                    this.RaisePropertyChanged("TentativeDiagnosis1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis2 {
            get {
                return this.TentativeDiagnosis2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TentativeDiagnosis2Field, value) != true)) {
                    this.TentativeDiagnosis2Field = value;
                    this.RaisePropertyChanged("TentativeDiagnosis2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Diagnosis TentativeDiagnosis3 {
            get {
                return this.TentativeDiagnosis3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TentativeDiagnosis3Field, value) != true)) {
                    this.TentativeDiagnosis3Field = value;
                    this.RaisePropertyChanged("TentativeDiagnosis3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FarmListFilter", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class FarmListFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FarmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SettlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FarmID {
            get {
                return this.FarmIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FarmIDField, value) != true)) {
                    this.FarmIDField = value;
                    this.RaisePropertyChanged("FarmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerFirstName {
            get {
                return this.OwnerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerFirstNameField, value) != true)) {
                    this.OwnerFirstNameField = value;
                    this.RaisePropertyChanged("OwnerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerLastName {
            get {
                return this.OwnerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerLastNameField, value) != true)) {
                    this.OwnerLastNameField = value;
                    this.RaisePropertyChanged("OwnerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerMiddleName {
            get {
                return this.OwnerMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerMiddleNameField, value) != true)) {
                    this.OwnerMiddleNameField = value;
                    this.RaisePropertyChanged("OwnerMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Rayon {
            get {
                return this.RayonField;
            }
            set {
                if ((this.RayonField.Equals(value) != true)) {
                    this.RayonField = value;
                    this.RaisePropertyChanged("Rayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Region {
            get {
                return this.RegionField;
            }
            set {
                if ((this.RegionField.Equals(value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Settlement {
            get {
                return this.SettlementField;
            }
            set {
                if ((this.SettlementField.Equals(value) != true)) {
                    this.SettlementField = value;
                    this.RaisePropertyChanged("Settlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FarmListItem", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class FarmListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FarmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference RayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference SettlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FarmID {
            get {
                return this.FarmIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FarmIDField, value) != true)) {
                    this.FarmIDField = value;
                    this.RaisePropertyChanged("FarmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerFirstName {
            get {
                return this.OwnerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerFirstNameField, value) != true)) {
                    this.OwnerFirstNameField = value;
                    this.RaisePropertyChanged("OwnerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerLastName {
            get {
                return this.OwnerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerLastNameField, value) != true)) {
                    this.OwnerLastNameField = value;
                    this.RaisePropertyChanged("OwnerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerMiddleName {
            get {
                return this.OwnerMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerMiddleNameField, value) != true)) {
                    this.OwnerMiddleNameField = value;
                    this.RaisePropertyChanged("OwnerMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Rayon {
            get {
                return this.RayonField;
            }
            set {
                if ((object.ReferenceEquals(this.RayonField, value) != true)) {
                    this.RayonField = value;
                    this.RaisePropertyChanged("Rayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference Settlement {
            get {
                return this.SettlementField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlementField, value) != true)) {
                    this.SettlementField = value;
                    this.RaisePropertyChanged("Settlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Organization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccessoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalAbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalOrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Person> PersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueOrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccessoryCode {
            get {
                return this.AccessoryCodeField;
            }
            set {
                if ((this.AccessoryCodeField.Equals(value) != true)) {
                    this.AccessoryCodeField = value;
                    this.RaisePropertyChanged("AccessoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalAbbreviation {
            get {
                return this.LocalAbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalAbbreviationField, value) != true)) {
                    this.LocalAbbreviationField = value;
                    this.RaisePropertyChanged("LocalAbbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalOrganizationName {
            get {
                return this.LocalOrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalOrganizationNameField, value) != true)) {
                    this.LocalOrganizationNameField = value;
                    this.RaisePropertyChanged("LocalOrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Person> Persons {
            get {
                return this.PersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonsField, value) != true)) {
                    this.PersonsField = value;
                    this.RaisePropertyChanged("Persons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueOrganizationID {
            get {
                return this.UniqueOrganizationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueOrganizationIDField, value) != true)) {
                    this.UniqueOrganizationIDField = value;
                    this.RaisePropertyChanged("UniqueOrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonFirstName {
            get {
                return this.PersonFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFirstNameField, value) != true)) {
                    this.PersonFirstNameField = value;
                    this.RaisePropertyChanged("PersonFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonLastName {
            get {
                return this.PersonLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonLastNameField, value) != true)) {
                    this.PersonLastNameField = value;
                    this.RaisePropertyChanged("PersonLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonMiddleName {
            get {
                return this.PersonMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonMiddleNameField, value) != true)) {
                    this.PersonMiddleNameField = value;
                    this.RaisePropertyChanged("PersonMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationListFilter", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class OrganizationListFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccessoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueOrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccessoryCode {
            get {
                return this.AccessoryCodeField;
            }
            set {
                if ((this.AccessoryCodeField.Equals(value) != true)) {
                    this.AccessoryCodeField = value;
                    this.RaisePropertyChanged("AccessoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueOrganizationID {
            get {
                return this.UniqueOrganizationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueOrganizationIDField, value) != true)) {
                    this.UniqueOrganizationIDField = value;
                    this.RaisePropertyChanged("UniqueOrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationListItem", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class OrganizationListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueOrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessoryCode {
            get {
                return this.AccessoryCodeField;
            }
            set {
                if ((this.AccessoryCodeField.Equals(value) != true)) {
                    this.AccessoryCodeField = value;
                    this.RaisePropertyChanged("AccessoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueOrganizationID {
            get {
                return this.UniqueOrganizationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueOrganizationIDField, value) != true)) {
                    this.UniqueOrganizationIDField = value;
                    this.RaisePropertyChanged("UniqueOrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientListFilter", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class PatientListFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentResidenceCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentResidenceRayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentResidenceRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PatientPersonalIDTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentResidenceCountry {
            get {
                return this.CurrentResidenceCountryField;
            }
            set {
                if ((this.CurrentResidenceCountryField.Equals(value) != true)) {
                    this.CurrentResidenceCountryField = value;
                    this.RaisePropertyChanged("CurrentResidenceCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentResidenceRayon {
            get {
                return this.CurrentResidenceRayonField;
            }
            set {
                if ((this.CurrentResidenceRayonField.Equals(value) != true)) {
                    this.CurrentResidenceRayonField = value;
                    this.RaisePropertyChanged("CurrentResidenceRayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentResidenceRegion {
            get {
                return this.CurrentResidenceRegionField;
            }
            set {
                if ((this.CurrentResidenceRegionField.Equals(value) != true)) {
                    this.CurrentResidenceRegionField = value;
                    this.RaisePropertyChanged("CurrentResidenceRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirthFrom {
            get {
                return this.DateOfBirthFromField;
            }
            set {
                if ((this.DateOfBirthFromField.Equals(value) != true)) {
                    this.DateOfBirthFromField = value;
                    this.RaisePropertyChanged("DateOfBirthFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirthTo {
            get {
                return this.DateOfBirthToField;
            }
            set {
                if ((this.DateOfBirthToField.Equals(value) != true)) {
                    this.DateOfBirthToField = value;
                    this.RaisePropertyChanged("DateOfBirthTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMiddleName {
            get {
                return this.PatientMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMiddleNameField, value) != true)) {
                    this.PatientMiddleNameField = value;
                    this.RaisePropertyChanged("PatientMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PatientPersonalIDType {
            get {
                return this.PatientPersonalIDTypeField;
            }
            set {
                if ((this.PatientPersonalIDTypeField.Equals(value) != true)) {
                    this.PatientPersonalIDTypeField = value;
                    this.RaisePropertyChanged("PatientPersonalIDType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalID {
            get {
                return this.PersonalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalIDField, value) != true)) {
                    this.PersonalIDField = value;
                    this.RaisePropertyChanged("PersonalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientListItem", Namespace="http://schemas.datacontract.org/2004/07/eidss.openapi.contract")]
    [System.SerializableAttribute()]
    public partial class PatientListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CurrentResidenceCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRayonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private eidss.openapi.test.OpenApiService.Reference PatientPersonalIDTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference CurrentResidenceCountry {
            get {
                return this.CurrentResidenceCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentResidenceCountryField, value) != true)) {
                    this.CurrentResidenceCountryField = value;
                    this.RaisePropertyChanged("CurrentResidenceCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRayon {
            get {
                return this.CurrentResidenceRayonField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentResidenceRayonField, value) != true)) {
                    this.CurrentResidenceRayonField = value;
                    this.RaisePropertyChanged("CurrentResidenceRayon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.GisReference CurrentResidenceRegion {
            get {
                return this.CurrentResidenceRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentResidenceRegionField, value) != true)) {
                    this.CurrentResidenceRegionField = value;
                    this.RaisePropertyChanged("CurrentResidenceRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMiddleName {
            get {
                return this.PatientMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMiddleNameField, value) != true)) {
                    this.PatientMiddleNameField = value;
                    this.RaisePropertyChanged("PatientMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eidss.openapi.test.OpenApiService.Reference PatientPersonalIDType {
            get {
                return this.PatientPersonalIDTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientPersonalIDTypeField, value) != true)) {
                    this.PatientPersonalIDTypeField = value;
                    this.RaisePropertyChanged("PatientPersonalIDType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalID {
            get {
                return this.PersonalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalIDField, value) != true)) {
                    this.PersonalIDField = value;
                    this.RaisePropertyChanged("PersonalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OpenApiService.ISoapService")]
    public interface ISoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/Login", ReplyAction="http://tempuri.org/ISoapService/LoginResponse")]
        void Login(eidss.openapi.test.OpenApiService.Login value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/Login", ReplyAction="http://tempuri.org/ISoapService/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync(eidss.openapi.test.OpenApiService.Login value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseCreateResponse")]
        eidss.openapi.test.OpenApiService.HumanCase HumanCaseCreate(eidss.openapi.test.OpenApiService.HumanCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.HumanCase> HumanCaseCreateAsync(eidss.openapi.test.OpenApiService.HumanCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseUpdate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseUpdateResponse")]
        eidss.openapi.test.OpenApiService.HumanCase HumanCaseUpdate(long id, eidss.openapi.test.OpenApiService.HumanCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseUpdate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseUpdateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.HumanCase> HumanCaseUpdateAsync(long id, eidss.openapi.test.OpenApiService.HumanCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseGet", ReplyAction="http://tempuri.org/ISoapService/HumanCaseGetResponse")]
        eidss.openapi.test.OpenApiService.HumanCase HumanCaseGet(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseGet", ReplyAction="http://tempuri.org/ISoapService/HumanCaseGetResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.HumanCase> HumanCaseGetAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseDeleteResponse")]
        void HumanCaseDelete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseDeleteResponse")]
        System.Threading.Tasks.Task HumanCaseDeleteAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseList", ReplyAction="http://tempuri.org/ISoapService/HumanCaseListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.HumanCaseListItem> HumanCaseList(eidss.openapi.test.OpenApiService.HumanCaseListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseList", ReplyAction="http://tempuri.org/ISoapService/HumanCaseListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.HumanCaseListItem>> HumanCaseListAsync(eidss.openapi.test.OpenApiService.HumanCaseListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseSampleCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseSampleCreateResponse")]
        eidss.openapi.test.OpenApiService.Sample HumanCaseSampleCreate(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseSampleCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseSampleCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Sample> HumanCaseSampleCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseSampleDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseSampleDeleteResponse")]
        void HumanCaseSampleDelete(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseSampleDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseSampleDeleteResponse")]
        System.Threading.Tasks.Task HumanCaseSampleDeleteAsync(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestCreateResponse")]
        eidss.openapi.test.OpenApiService.Test HumanCaseTestCreate(long idHumanCase, eidss.openapi.test.OpenApiService.Test value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Test> HumanCaseTestCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.Test value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestDeleteResponse")]
        void HumanCaseTestDelete(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestDeleteResponse")]
        System.Threading.Tasks.Task HumanCaseTestDeleteAsync(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestInterpretationCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestInterpretationCreateResponse")]
        eidss.openapi.test.OpenApiService.TestInterpretation HumanCaseTestInterpretationCreate(long idHumanCase, eidss.openapi.test.OpenApiService.TestInterpretation value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestInterpretationCreate", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestInterpretationCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.TestInterpretation> HumanCaseTestInterpretationCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.TestInterpretation value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestInterpretationDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestInterpretationDeleteResponse")]
        void HumanCaseTestInterpretationDelete(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/HumanCaseTestInterpretationDelete", ReplyAction="http://tempuri.org/ISoapService/HumanCaseTestInterpretationDeleteResponse")]
        System.Threading.Tasks.Task HumanCaseTestInterpretationDeleteAsync(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseCreateResponse")]
        eidss.openapi.test.OpenApiService.VetCase VetCaseCreate(eidss.openapi.test.OpenApiService.VetCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.VetCase> VetCaseCreateAsync(eidss.openapi.test.OpenApiService.VetCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseUpdate", ReplyAction="http://tempuri.org/ISoapService/VetCaseUpdateResponse")]
        eidss.openapi.test.OpenApiService.VetCase VetCaseUpdate(long id, eidss.openapi.test.OpenApiService.VetCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseUpdate", ReplyAction="http://tempuri.org/ISoapService/VetCaseUpdateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.VetCase> VetCaseUpdateAsync(long id, eidss.openapi.test.OpenApiService.VetCase value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseGet", ReplyAction="http://tempuri.org/ISoapService/VetCaseGetResponse")]
        eidss.openapi.test.OpenApiService.VetCase VetCaseGet(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseGet", ReplyAction="http://tempuri.org/ISoapService/VetCaseGetResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.VetCase> VetCaseGetAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseDeleteResponse")]
        void VetCaseDelete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseDeleteResponse")]
        System.Threading.Tasks.Task VetCaseDeleteAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseList", ReplyAction="http://tempuri.org/ISoapService/VetCaseListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.VetCaseListItem> VetCaseList(eidss.openapi.test.OpenApiService.VetCaseListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseList", ReplyAction="http://tempuri.org/ISoapService/VetCaseListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.VetCaseListItem>> VetCaseListAsync(eidss.openapi.test.OpenApiService.VetCaseListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseSampleCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseSampleCreateResponse")]
        eidss.openapi.test.OpenApiService.Sample VetCaseSampleCreate(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseSampleCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseSampleCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Sample> VetCaseSampleCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseSampleDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseSampleDeleteResponse")]
        void VetCaseSampleDelete(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseSampleDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseSampleDeleteResponse")]
        System.Threading.Tasks.Task VetCaseSampleDeleteAsync(long idHumanCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestCreateResponse")]
        eidss.openapi.test.OpenApiService.Test VetCaseTestCreate(long idVetCase, eidss.openapi.test.OpenApiService.Test value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Test> VetCaseTestCreateAsync(long idVetCase, eidss.openapi.test.OpenApiService.Test value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestDeleteResponse")]
        void VetCaseTestDelete(long idVetCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestDeleteResponse")]
        System.Threading.Tasks.Task VetCaseTestDeleteAsync(long idVetCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestInterpretationCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestInterpretationCreateResponse")]
        eidss.openapi.test.OpenApiService.TestInterpretation VetCaseTestInterpretationCreate(long idVetCase, eidss.openapi.test.OpenApiService.TestInterpretation value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestInterpretationCreate", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestInterpretationCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.TestInterpretation> VetCaseTestInterpretationCreateAsync(long idVetCase, eidss.openapi.test.OpenApiService.TestInterpretation value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestInterpretationDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestInterpretationDeleteResponse")]
        void VetCaseTestInterpretationDelete(long idVetCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCaseTestInterpretationDelete", ReplyAction="http://tempuri.org/ISoapService/VetCaseTestInterpretationDeleteResponse")]
        System.Threading.Tasks.Task VetCaseTestInterpretationDeleteAsync(long idVetCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCasePensideTestCreate", ReplyAction="http://tempuri.org/ISoapService/VetCasePensideTestCreateResponse")]
        eidss.openapi.test.OpenApiService.PensideTest VetCasePensideTestCreate(long idVetCase, eidss.openapi.test.OpenApiService.PensideTest value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCasePensideTestCreate", ReplyAction="http://tempuri.org/ISoapService/VetCasePensideTestCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.PensideTest> VetCasePensideTestCreateAsync(long idVetCase, eidss.openapi.test.OpenApiService.PensideTest value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCasePensideTestDelete", ReplyAction="http://tempuri.org/ISoapService/VetCasePensideTestDeleteResponse")]
        void VetCasePensideTestDelete(long idVetCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/VetCasePensideTestDelete", ReplyAction="http://tempuri.org/ISoapService/VetCasePensideTestDeleteResponse")]
        System.Threading.Tasks.Task VetCasePensideTestDeleteAsync(long idVetCase, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/FarmGet", ReplyAction="http://tempuri.org/ISoapService/FarmGetResponse")]
        eidss.openapi.test.OpenApiService.Farm FarmGet(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/FarmGet", ReplyAction="http://tempuri.org/ISoapService/FarmGetResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Farm> FarmGetAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/FarmList", ReplyAction="http://tempuri.org/ISoapService/FarmListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.FarmListItem> FarmList(eidss.openapi.test.OpenApiService.FarmListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/FarmList", ReplyAction="http://tempuri.org/ISoapService/FarmListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.FarmListItem>> FarmListAsync(eidss.openapi.test.OpenApiService.FarmListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationCreate", ReplyAction="http://tempuri.org/ISoapService/OrganizationCreateResponse")]
        eidss.openapi.test.OpenApiService.Organization OrganizationCreate(eidss.openapi.test.OpenApiService.Organization value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationCreate", ReplyAction="http://tempuri.org/ISoapService/OrganizationCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Organization> OrganizationCreateAsync(eidss.openapi.test.OpenApiService.Organization value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationUpdate", ReplyAction="http://tempuri.org/ISoapService/OrganizationUpdateResponse")]
        eidss.openapi.test.OpenApiService.Organization OrganizationUpdate(long id, eidss.openapi.test.OpenApiService.Organization value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationUpdate", ReplyAction="http://tempuri.org/ISoapService/OrganizationUpdateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Organization> OrganizationUpdateAsync(long id, eidss.openapi.test.OpenApiService.Organization value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationGet", ReplyAction="http://tempuri.org/ISoapService/OrganizationGetResponse")]
        eidss.openapi.test.OpenApiService.Organization OrganizationGet(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationGet", ReplyAction="http://tempuri.org/ISoapService/OrganizationGetResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Organization> OrganizationGetAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationDelete", ReplyAction="http://tempuri.org/ISoapService/OrganizationDeleteResponse")]
        void OrganizationDelete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationDelete", ReplyAction="http://tempuri.org/ISoapService/OrganizationDeleteResponse")]
        System.Threading.Tasks.Task OrganizationDeleteAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationList", ReplyAction="http://tempuri.org/ISoapService/OrganizationListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.OrganizationListItem> OrganizationList(eidss.openapi.test.OpenApiService.OrganizationListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationList", ReplyAction="http://tempuri.org/ISoapService/OrganizationListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.OrganizationListItem>> OrganizationListAsync(eidss.openapi.test.OpenApiService.OrganizationListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationPersonCreate", ReplyAction="http://tempuri.org/ISoapService/OrganizationPersonCreateResponse")]
        eidss.openapi.test.OpenApiService.Person OrganizationPersonCreate(long idOrganization, eidss.openapi.test.OpenApiService.Person value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationPersonCreate", ReplyAction="http://tempuri.org/ISoapService/OrganizationPersonCreateResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Person> OrganizationPersonCreateAsync(long idOrganization, eidss.openapi.test.OpenApiService.Person value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationPersonDelete", ReplyAction="http://tempuri.org/ISoapService/OrganizationPersonDeleteResponse")]
        void OrganizationPersonDelete(long idOrganization, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/OrganizationPersonDelete", ReplyAction="http://tempuri.org/ISoapService/OrganizationPersonDeleteResponse")]
        System.Threading.Tasks.Task OrganizationPersonDeleteAsync(long idOrganization, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/PatientGet", ReplyAction="http://tempuri.org/ISoapService/PatientGetResponse")]
        eidss.openapi.test.OpenApiService.Patient PatientGet(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/PatientGet", ReplyAction="http://tempuri.org/ISoapService/PatientGetResponse")]
        System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Patient> PatientGetAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/PatientList", ReplyAction="http://tempuri.org/ISoapService/PatientListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.PatientListItem> PatientList(eidss.openapi.test.OpenApiService.PatientListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/PatientList", ReplyAction="http://tempuri.org/ISoapService/PatientListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.PatientListItem>> PatientListAsync(eidss.openapi.test.OpenApiService.PatientListFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/ReferenceList", ReplyAction="http://tempuri.org/ISoapService/ReferenceListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference> ReferenceList(long type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/ReferenceList", ReplyAction="http://tempuri.org/ISoapService/ReferenceListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference>> ReferenceListAsync(long type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/DiagnosisList", ReplyAction="http://tempuri.org/ISoapService/DiagnosisListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Diagnosis> DiagnosisList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/DiagnosisList", ReplyAction="http://tempuri.org/ISoapService/DiagnosisListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Diagnosis>> DiagnosisListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/SampleTypeForDiagnosisList", ReplyAction="http://tempuri.org/ISoapService/SampleTypeForDiagnosisListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference> SampleTypeForDiagnosisList(int haCode, long diagnosis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/SampleTypeForDiagnosisList", ReplyAction="http://tempuri.org/ISoapService/SampleTypeForDiagnosisListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference>> SampleTypeForDiagnosisListAsync(int haCode, long diagnosis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/CountryList", ReplyAction="http://tempuri.org/ISoapService/CountryListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> CountryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/CountryList", ReplyAction="http://tempuri.org/ISoapService/CountryListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> CountryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/RegionList", ReplyAction="http://tempuri.org/ISoapService/RegionListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> RegionList(long country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/RegionList", ReplyAction="http://tempuri.org/ISoapService/RegionListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> RegionListAsync(long country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/RayonList", ReplyAction="http://tempuri.org/ISoapService/RayonListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> RayonList(long region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/RayonList", ReplyAction="http://tempuri.org/ISoapService/RayonListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> RayonListAsync(long region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/SettlementList", ReplyAction="http://tempuri.org/ISoapService/SettlementListResponse")]
        System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> SettlementList(long rayon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/SettlementList", ReplyAction="http://tempuri.org/ISoapService/SettlementListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> SettlementListAsync(long rayon);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISoapServiceChannel : eidss.openapi.test.OpenApiService.ISoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapServiceClient : System.ServiceModel.ClientBase<eidss.openapi.test.OpenApiService.ISoapService>, eidss.openapi.test.OpenApiService.ISoapService {
        
        public SoapServiceClient() {
        }
        
        public SoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Login(eidss.openapi.test.OpenApiService.Login value) {
            base.Channel.Login(value);
        }
        
        public System.Threading.Tasks.Task LoginAsync(eidss.openapi.test.OpenApiService.Login value) {
            return base.Channel.LoginAsync(value);
        }
        
        public eidss.openapi.test.OpenApiService.HumanCase HumanCaseCreate(eidss.openapi.test.OpenApiService.HumanCase value) {
            return base.Channel.HumanCaseCreate(value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.HumanCase> HumanCaseCreateAsync(eidss.openapi.test.OpenApiService.HumanCase value) {
            return base.Channel.HumanCaseCreateAsync(value);
        }
        
        public eidss.openapi.test.OpenApiService.HumanCase HumanCaseUpdate(long id, eidss.openapi.test.OpenApiService.HumanCase value) {
            return base.Channel.HumanCaseUpdate(id, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.HumanCase> HumanCaseUpdateAsync(long id, eidss.openapi.test.OpenApiService.HumanCase value) {
            return base.Channel.HumanCaseUpdateAsync(id, value);
        }
        
        public eidss.openapi.test.OpenApiService.HumanCase HumanCaseGet(long id) {
            return base.Channel.HumanCaseGet(id);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.HumanCase> HumanCaseGetAsync(long id) {
            return base.Channel.HumanCaseGetAsync(id);
        }
        
        public void HumanCaseDelete(long id) {
            base.Channel.HumanCaseDelete(id);
        }
        
        public System.Threading.Tasks.Task HumanCaseDeleteAsync(long id) {
            return base.Channel.HumanCaseDeleteAsync(id);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.HumanCaseListItem> HumanCaseList(eidss.openapi.test.OpenApiService.HumanCaseListFilter filter) {
            return base.Channel.HumanCaseList(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.HumanCaseListItem>> HumanCaseListAsync(eidss.openapi.test.OpenApiService.HumanCaseListFilter filter) {
            return base.Channel.HumanCaseListAsync(filter);
        }
        
        public eidss.openapi.test.OpenApiService.Sample HumanCaseSampleCreate(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value) {
            return base.Channel.HumanCaseSampleCreate(idHumanCase, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Sample> HumanCaseSampleCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value) {
            return base.Channel.HumanCaseSampleCreateAsync(idHumanCase, value);
        }
        
        public void HumanCaseSampleDelete(long idHumanCase, long id) {
            base.Channel.HumanCaseSampleDelete(idHumanCase, id);
        }
        
        public System.Threading.Tasks.Task HumanCaseSampleDeleteAsync(long idHumanCase, long id) {
            return base.Channel.HumanCaseSampleDeleteAsync(idHumanCase, id);
        }
        
        public eidss.openapi.test.OpenApiService.Test HumanCaseTestCreate(long idHumanCase, eidss.openapi.test.OpenApiService.Test value) {
            return base.Channel.HumanCaseTestCreate(idHumanCase, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Test> HumanCaseTestCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.Test value) {
            return base.Channel.HumanCaseTestCreateAsync(idHumanCase, value);
        }
        
        public void HumanCaseTestDelete(long idHumanCase, long id) {
            base.Channel.HumanCaseTestDelete(idHumanCase, id);
        }
        
        public System.Threading.Tasks.Task HumanCaseTestDeleteAsync(long idHumanCase, long id) {
            return base.Channel.HumanCaseTestDeleteAsync(idHumanCase, id);
        }
        
        public eidss.openapi.test.OpenApiService.TestInterpretation HumanCaseTestInterpretationCreate(long idHumanCase, eidss.openapi.test.OpenApiService.TestInterpretation value) {
            return base.Channel.HumanCaseTestInterpretationCreate(idHumanCase, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.TestInterpretation> HumanCaseTestInterpretationCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.TestInterpretation value) {
            return base.Channel.HumanCaseTestInterpretationCreateAsync(idHumanCase, value);
        }
        
        public void HumanCaseTestInterpretationDelete(long idHumanCase, long id) {
            base.Channel.HumanCaseTestInterpretationDelete(idHumanCase, id);
        }
        
        public System.Threading.Tasks.Task HumanCaseTestInterpretationDeleteAsync(long idHumanCase, long id) {
            return base.Channel.HumanCaseTestInterpretationDeleteAsync(idHumanCase, id);
        }
        
        public eidss.openapi.test.OpenApiService.VetCase VetCaseCreate(eidss.openapi.test.OpenApiService.VetCase value) {
            return base.Channel.VetCaseCreate(value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.VetCase> VetCaseCreateAsync(eidss.openapi.test.OpenApiService.VetCase value) {
            return base.Channel.VetCaseCreateAsync(value);
        }
        
        public eidss.openapi.test.OpenApiService.VetCase VetCaseUpdate(long id, eidss.openapi.test.OpenApiService.VetCase value) {
            return base.Channel.VetCaseUpdate(id, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.VetCase> VetCaseUpdateAsync(long id, eidss.openapi.test.OpenApiService.VetCase value) {
            return base.Channel.VetCaseUpdateAsync(id, value);
        }
        
        public eidss.openapi.test.OpenApiService.VetCase VetCaseGet(long id) {
            return base.Channel.VetCaseGet(id);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.VetCase> VetCaseGetAsync(long id) {
            return base.Channel.VetCaseGetAsync(id);
        }
        
        public void VetCaseDelete(long id) {
            base.Channel.VetCaseDelete(id);
        }
        
        public System.Threading.Tasks.Task VetCaseDeleteAsync(long id) {
            return base.Channel.VetCaseDeleteAsync(id);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.VetCaseListItem> VetCaseList(eidss.openapi.test.OpenApiService.VetCaseListFilter filter) {
            return base.Channel.VetCaseList(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.VetCaseListItem>> VetCaseListAsync(eidss.openapi.test.OpenApiService.VetCaseListFilter filter) {
            return base.Channel.VetCaseListAsync(filter);
        }
        
        public eidss.openapi.test.OpenApiService.Sample VetCaseSampleCreate(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value) {
            return base.Channel.VetCaseSampleCreate(idHumanCase, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Sample> VetCaseSampleCreateAsync(long idHumanCase, eidss.openapi.test.OpenApiService.Sample value) {
            return base.Channel.VetCaseSampleCreateAsync(idHumanCase, value);
        }
        
        public void VetCaseSampleDelete(long idHumanCase, long id) {
            base.Channel.VetCaseSampleDelete(idHumanCase, id);
        }
        
        public System.Threading.Tasks.Task VetCaseSampleDeleteAsync(long idHumanCase, long id) {
            return base.Channel.VetCaseSampleDeleteAsync(idHumanCase, id);
        }
        
        public eidss.openapi.test.OpenApiService.Test VetCaseTestCreate(long idVetCase, eidss.openapi.test.OpenApiService.Test value) {
            return base.Channel.VetCaseTestCreate(idVetCase, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Test> VetCaseTestCreateAsync(long idVetCase, eidss.openapi.test.OpenApiService.Test value) {
            return base.Channel.VetCaseTestCreateAsync(idVetCase, value);
        }
        
        public void VetCaseTestDelete(long idVetCase, long id) {
            base.Channel.VetCaseTestDelete(idVetCase, id);
        }
        
        public System.Threading.Tasks.Task VetCaseTestDeleteAsync(long idVetCase, long id) {
            return base.Channel.VetCaseTestDeleteAsync(idVetCase, id);
        }
        
        public eidss.openapi.test.OpenApiService.TestInterpretation VetCaseTestInterpretationCreate(long idVetCase, eidss.openapi.test.OpenApiService.TestInterpretation value) {
            return base.Channel.VetCaseTestInterpretationCreate(idVetCase, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.TestInterpretation> VetCaseTestInterpretationCreateAsync(long idVetCase, eidss.openapi.test.OpenApiService.TestInterpretation value) {
            return base.Channel.VetCaseTestInterpretationCreateAsync(idVetCase, value);
        }
        
        public void VetCaseTestInterpretationDelete(long idVetCase, long id) {
            base.Channel.VetCaseTestInterpretationDelete(idVetCase, id);
        }
        
        public System.Threading.Tasks.Task VetCaseTestInterpretationDeleteAsync(long idVetCase, long id) {
            return base.Channel.VetCaseTestInterpretationDeleteAsync(idVetCase, id);
        }
        
        public eidss.openapi.test.OpenApiService.PensideTest VetCasePensideTestCreate(long idVetCase, eidss.openapi.test.OpenApiService.PensideTest value) {
            return base.Channel.VetCasePensideTestCreate(idVetCase, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.PensideTest> VetCasePensideTestCreateAsync(long idVetCase, eidss.openapi.test.OpenApiService.PensideTest value) {
            return base.Channel.VetCasePensideTestCreateAsync(idVetCase, value);
        }
        
        public void VetCasePensideTestDelete(long idVetCase, long id) {
            base.Channel.VetCasePensideTestDelete(idVetCase, id);
        }
        
        public System.Threading.Tasks.Task VetCasePensideTestDeleteAsync(long idVetCase, long id) {
            return base.Channel.VetCasePensideTestDeleteAsync(idVetCase, id);
        }
        
        public eidss.openapi.test.OpenApiService.Farm FarmGet(long id) {
            return base.Channel.FarmGet(id);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Farm> FarmGetAsync(long id) {
            return base.Channel.FarmGetAsync(id);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.FarmListItem> FarmList(eidss.openapi.test.OpenApiService.FarmListFilter filter) {
            return base.Channel.FarmList(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.FarmListItem>> FarmListAsync(eidss.openapi.test.OpenApiService.FarmListFilter filter) {
            return base.Channel.FarmListAsync(filter);
        }
        
        public eidss.openapi.test.OpenApiService.Organization OrganizationCreate(eidss.openapi.test.OpenApiService.Organization value) {
            return base.Channel.OrganizationCreate(value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Organization> OrganizationCreateAsync(eidss.openapi.test.OpenApiService.Organization value) {
            return base.Channel.OrganizationCreateAsync(value);
        }
        
        public eidss.openapi.test.OpenApiService.Organization OrganizationUpdate(long id, eidss.openapi.test.OpenApiService.Organization value) {
            return base.Channel.OrganizationUpdate(id, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Organization> OrganizationUpdateAsync(long id, eidss.openapi.test.OpenApiService.Organization value) {
            return base.Channel.OrganizationUpdateAsync(id, value);
        }
        
        public eidss.openapi.test.OpenApiService.Organization OrganizationGet(long id) {
            return base.Channel.OrganizationGet(id);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Organization> OrganizationGetAsync(long id) {
            return base.Channel.OrganizationGetAsync(id);
        }
        
        public void OrganizationDelete(long id) {
            base.Channel.OrganizationDelete(id);
        }
        
        public System.Threading.Tasks.Task OrganizationDeleteAsync(long id) {
            return base.Channel.OrganizationDeleteAsync(id);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.OrganizationListItem> OrganizationList(eidss.openapi.test.OpenApiService.OrganizationListFilter filter) {
            return base.Channel.OrganizationList(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.OrganizationListItem>> OrganizationListAsync(eidss.openapi.test.OpenApiService.OrganizationListFilter filter) {
            return base.Channel.OrganizationListAsync(filter);
        }
        
        public eidss.openapi.test.OpenApiService.Person OrganizationPersonCreate(long idOrganization, eidss.openapi.test.OpenApiService.Person value) {
            return base.Channel.OrganizationPersonCreate(idOrganization, value);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Person> OrganizationPersonCreateAsync(long idOrganization, eidss.openapi.test.OpenApiService.Person value) {
            return base.Channel.OrganizationPersonCreateAsync(idOrganization, value);
        }
        
        public void OrganizationPersonDelete(long idOrganization, long id) {
            base.Channel.OrganizationPersonDelete(idOrganization, id);
        }
        
        public System.Threading.Tasks.Task OrganizationPersonDeleteAsync(long idOrganization, long id) {
            return base.Channel.OrganizationPersonDeleteAsync(idOrganization, id);
        }
        
        public eidss.openapi.test.OpenApiService.Patient PatientGet(long id) {
            return base.Channel.PatientGet(id);
        }
        
        public System.Threading.Tasks.Task<eidss.openapi.test.OpenApiService.Patient> PatientGetAsync(long id) {
            return base.Channel.PatientGetAsync(id);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.PatientListItem> PatientList(eidss.openapi.test.OpenApiService.PatientListFilter filter) {
            return base.Channel.PatientList(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.PatientListItem>> PatientListAsync(eidss.openapi.test.OpenApiService.PatientListFilter filter) {
            return base.Channel.PatientListAsync(filter);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference> ReferenceList(long type) {
            return base.Channel.ReferenceList(type);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference>> ReferenceListAsync(long type) {
            return base.Channel.ReferenceListAsync(type);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Diagnosis> DiagnosisList() {
            return base.Channel.DiagnosisList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Diagnosis>> DiagnosisListAsync() {
            return base.Channel.DiagnosisListAsync();
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference> SampleTypeForDiagnosisList(int haCode, long diagnosis) {
            return base.Channel.SampleTypeForDiagnosisList(haCode, diagnosis);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.Reference>> SampleTypeForDiagnosisListAsync(int haCode, long diagnosis) {
            return base.Channel.SampleTypeForDiagnosisListAsync(haCode, diagnosis);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> CountryList() {
            return base.Channel.CountryList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> CountryListAsync() {
            return base.Channel.CountryListAsync();
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> RegionList(long country) {
            return base.Channel.RegionList(country);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> RegionListAsync(long country) {
            return base.Channel.RegionListAsync(country);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> RayonList(long region) {
            return base.Channel.RayonList(region);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> RayonListAsync(long region) {
            return base.Channel.RayonListAsync(region);
        }
        
        public System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference> SettlementList(long rayon) {
            return base.Channel.SettlementList(rayon);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<eidss.openapi.test.OpenApiService.GisReference>> SettlementListAsync(long rayon) {
            return base.Channel.SettlementListAsync(rayon);
        }
    }
}
