<?xml version="1.0" encoding="utf-8" ?>
<object name="VetAggregateAction"
        connection="EidssConnectionString"
        generator="ObjectGenerator.xslt"
        xmlns="urn:schemas-bv:objectmodel">

	<storage>
		<get name="spAggregateCaseDummy_SelectDetail" />
    <validate name="spVetAggregateAction_Validate" />
  </storage>

	<tables>
		<table name="VetAggregateAction">
      <properties auditObject="daoAggregateVetAction" auditTable="tlbAggrCase" permissionObject="AccessToVetAggregateAction"/>
      <help web="web_vetcaseaggregateactiondetailform" />
      <relations>
        <relation name="Header" table="AggregateCaseHeader" type="link" internal="false" lazy="false" source="idfAggrCase" target="idfAggrCase">
            <params>
                <param name="idfsAggrCaseType" type="long" lambda="c => (long)AggregateCaseType.VetAggregateAction" />
            </params>
        </relation>
        <relation name="DetailedDiagnostic" table="VetAggregateActionDiagnosticDetailed" type="sibling" internal="false" lazy="false" source="idfAggrCase" target="" />
        <relation name="DetailedProphylactic" table="VetAggregateActionProphylacticDetailed" type="sibling" internal="false" lazy="false" source="idfAggrCase" target="" />
        <relation name="DetailedSanitary" table="VetAggregateActionSanitaryDetailed" type="sibling" internal="false" lazy="false" source="idfAggrCase" target="" />
      </relations>
      <!--storage>
        <delete name="spVetAggregateAction_Delete"/>
        <candelete name="spVetAggregateAction_CanDelete"/>
      </storage-->
      <postorder>
          <item name="Header"/>
      </postorder>
      <deleteorder>
          <item name="Header"/>
      </deleteorder>
      <extenders>
          <created>            
            <lambda_extender target="DetailedDiagnostic" type="VetAggregateActionDiagnosticDetailed" lambda="c => DetailedDiagnosticAccessor.SelectByKey(manager, c.idfAggrCase)" />
            <lambda_extender target="DetailedProphylactic" type="VetAggregateActionProphylacticDetailed" lambda="c => DetailedProphylacticAccessor.SelectByKey(manager, c.idfAggrCase)" />
            <lambda_extender target="DetailedSanitary" type="VetAggregateActionSanitaryDetailed" lambda="c => DetailedSanitaryAccessor.SelectByKey(manager, c.idfAggrCase)" />
            <lambda_extender target="Header" type="AggregateCaseHeader" lambda="c => HeaderAccessor.CreateWithParamsManyVersions(manager, c, (long)AggregateCaseType.VetAggregateAction, obj.DetailedDiagnostic != null  ? obj.DetailedDiagnostic.idfVersion : new long?(), obj.DetailedProphylactic != null ? obj.DetailedProphylactic.idfVersion : new long?(), obj.DetailedSanitary != null ? obj.DetailedSanitary.idfVersion : new long?())" />
          </created>
      </extenders>
      <actions>
        <standard>
          <remove type="Create"/>
          <remove type="Delete"/>
        </standard>

        <action name="ReportContextMenu" type="Action">
          <visual panel="Main" alignment="Left">
            <regular caption="strReport_Id" icon="Report" tooltip="strReport_Id"/>
          </visual>
          <run>
            <preUI webType="JScript"/>
          </run>
        </action>

        <action name="VetAggregateActionReport" type="Action">
          <visual panel="ContextMenu" alignment="Left" visiblePredicate="(o1, o2, p, r) => eidss.model.Reports.BaseMenuReportRegistrator.IsPaperFormAllowed(&quot;VetAggregateCaseActions&quot;)"> >
            <regular caption="titleVetAggrActionReport" icon="" tooltip=""/>
          </visual>
          <run>
            <preUI webType="JScript"/>
          </run>
        </action>
      </actions>
  </table>
	</tables>

</object>
