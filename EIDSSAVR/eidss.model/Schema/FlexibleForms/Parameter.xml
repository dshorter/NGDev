<?xml version="1.0" encoding="utf-8" ?>
<object name="Parameter"
        connection="EidssConnectionString"
        generator="ObjectGenerator.xslt"
        xmlns="urn:schemas-bv:objectmodel">
  <storage>
    <!--get name="spFFGetParameters" type="simplelist" /-->    
    <get name="spFFGetParameters" type="lookuplist"  cache="true" />
  </storage>
  <tables>
    <table name="Parameter">
      <fields>
        <storage name="idfsValueDummy" type="long?"/>
        <calculated name="idfsParameterTypeNotNull" type="long" depends="idfsParameterType" lambda="c => c.idfsParameterType.HasValue ? c.idfsParameterType.Value : 0"/>
      </fields>
      <relations>
        <!--relation name="FormType" table="FormType" internal="false" type="link" source="idfsFormType" target="idfsFormType" /-->
        <!--relation name="SelectList" table="ParameterSelect" lazy="false" internal="false" type="child" source="idfsParameterTypeNotNull" target="idfsParameterType" paramsonly="true">
          <params>
            <param name="idfsParameterType" type="Int64" lambda="c => c.idfsParameterTypeNotNull" />
            <param name="idfsFormType" type="Int64" lambda="c => c.idfsFormType" />
            <param name="intHACode" type="Int64?" lambda="c => c.intHACode" />
          </params>
        </relation-->
      </relations>
      <lookups>
        <lookup name="SelectList" table="ParameterSelect" source="idfsValueDummy" target="idfsValue" notaddempty="true" >
          <params>
            <param name="idfsParameterType" type="Int64" lambda="c => c.idfsParameterTypeNotNull" />
            <param name="idfsFormType" type="Int64" lambda="c => c.idfsFormType" />
            <param name="intHACode" type="Int64?" lambda="c => c.intHACode" />
          </params>
        </lookup>
      </lookups>
      <!--actions>
        <action name="SelectDetailList" type="Loadlist" />
      </actions-->
    </table>
  </tables>
</object>
