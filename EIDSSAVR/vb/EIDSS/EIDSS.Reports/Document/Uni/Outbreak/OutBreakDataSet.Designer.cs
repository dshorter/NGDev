//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EIDSS.Reports.Document.Uni.Outbreak {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OutBreakDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OutBreakDataSet : global::System.Data.DataSet {
        
        private OutbreakNotesReportDataTable tableOutbreakNotesReport;
        
        private OutbreakReportDataTable tableOutbreakReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OutBreakDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected OutBreakDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OutbreakNotesReport"] != null)) {
                    base.Tables.Add(new OutbreakNotesReportDataTable(ds.Tables["OutbreakNotesReport"]));
                }
                if ((ds.Tables["OutbreakReport"] != null)) {
                    base.Tables.Add(new OutbreakReportDataTable(ds.Tables["OutbreakReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OutbreakNotesReportDataTable OutbreakNotesReport {
            get {
                return this.tableOutbreakNotesReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OutbreakReportDataTable OutbreakReport {
            get {
                return this.tableOutbreakReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            OutBreakDataSet cln = ((OutBreakDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OutbreakNotesReport"] != null)) {
                    base.Tables.Add(new OutbreakNotesReportDataTable(ds.Tables["OutbreakNotesReport"]));
                }
                if ((ds.Tables["OutbreakReport"] != null)) {
                    base.Tables.Add(new OutbreakReportDataTable(ds.Tables["OutbreakReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableOutbreakNotesReport = ((OutbreakNotesReportDataTable)(base.Tables["OutbreakNotesReport"]));
            if ((initTable == true)) {
                if ((this.tableOutbreakNotesReport != null)) {
                    this.tableOutbreakNotesReport.InitVars();
                }
            }
            this.tableOutbreakReport = ((OutbreakReportDataTable)(base.Tables["OutbreakReport"]));
            if ((initTable == true)) {
                if ((this.tableOutbreakReport != null)) {
                    this.tableOutbreakReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "OutBreakDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OutBreakDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOutbreakNotesReport = new OutbreakNotesReportDataTable();
            base.Tables.Add(this.tableOutbreakNotesReport);
            this.tableOutbreakReport = new OutbreakReportDataTable();
            base.Tables.Add(this.tableOutbreakReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOutbreakNotesReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOutbreakReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OutBreakDataSet ds = new OutBreakDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OutbreakNotesReportRowChangeEventHandler(object sender, OutbreakNotesReportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OutbreakReportRowChangeEventHandler(object sender, OutbreakReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OutbreakNotesReportDataTable : global::System.Data.TypedTableBase<OutbreakNotesReportRow> {
            
            private global::System.Data.DataColumn columnidfOutbreakNote;
            
            private global::System.Data.DataColumn columnidfOutbreak;
            
            private global::System.Data.DataColumn columnstrNote;
            
            private global::System.Data.DataColumn columndatNoteDate;
            
            private global::System.Data.DataColumn columnstrCreatorName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakNotesReportDataTable() {
                this.TableName = "OutbreakNotesReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OutbreakNotesReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OutbreakNotesReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfOutbreakNoteColumn {
                get {
                    return this.columnidfOutbreakNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfOutbreakColumn {
                get {
                    return this.columnidfOutbreak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNoteColumn {
                get {
                    return this.columnstrNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn datNoteDateColumn {
                get {
                    return this.columndatNoteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCreatorNameColumn {
                get {
                    return this.columnstrCreatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakNotesReportRow this[int index] {
                get {
                    return ((OutbreakNotesReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakNotesReportRowChangeEventHandler OutbreakNotesReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakNotesReportRowChangeEventHandler OutbreakNotesReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakNotesReportRowChangeEventHandler OutbreakNotesReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakNotesReportRowChangeEventHandler OutbreakNotesReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOutbreakNotesReportRow(OutbreakNotesReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakNotesReportRow AddOutbreakNotesReportRow(long idfOutbreakNote, long idfOutbreak, string strNote, System.DateTime datNoteDate, string strCreatorName) {
                OutbreakNotesReportRow rowOutbreakNotesReportRow = ((OutbreakNotesReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idfOutbreakNote,
                        idfOutbreak,
                        strNote,
                        datNoteDate,
                        strCreatorName};
                rowOutbreakNotesReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOutbreakNotesReportRow);
                return rowOutbreakNotesReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakNotesReportRow FindByidfOutbreakNote(long idfOutbreakNote) {
                return ((OutbreakNotesReportRow)(this.Rows.Find(new object[] {
                            idfOutbreakNote})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OutbreakNotesReportDataTable cln = ((OutbreakNotesReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OutbreakNotesReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnidfOutbreakNote = base.Columns["idfOutbreakNote"];
                this.columnidfOutbreak = base.Columns["idfOutbreak"];
                this.columnstrNote = base.Columns["strNote"];
                this.columndatNoteDate = base.Columns["datNoteDate"];
                this.columnstrCreatorName = base.Columns["strCreatorName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnidfOutbreakNote = new global::System.Data.DataColumn("idfOutbreakNote", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfOutbreakNote);
                this.columnidfOutbreak = new global::System.Data.DataColumn("idfOutbreak", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfOutbreak);
                this.columnstrNote = new global::System.Data.DataColumn("strNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNote);
                this.columndatNoteDate = new global::System.Data.DataColumn("datNoteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatNoteDate);
                this.columnstrCreatorName = new global::System.Data.DataColumn("strCreatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCreatorName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidfOutbreakNote}, true));
                this.columnidfOutbreakNote.AllowDBNull = false;
                this.columnidfOutbreakNote.Unique = true;
                this.columnidfOutbreak.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakNotesReportRow NewOutbreakNotesReportRow() {
                return ((OutbreakNotesReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OutbreakNotesReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OutbreakNotesReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OutbreakNotesReportRowChanged != null)) {
                    this.OutbreakNotesReportRowChanged(this, new OutbreakNotesReportRowChangeEvent(((OutbreakNotesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OutbreakNotesReportRowChanging != null)) {
                    this.OutbreakNotesReportRowChanging(this, new OutbreakNotesReportRowChangeEvent(((OutbreakNotesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OutbreakNotesReportRowDeleted != null)) {
                    this.OutbreakNotesReportRowDeleted(this, new OutbreakNotesReportRowChangeEvent(((OutbreakNotesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OutbreakNotesReportRowDeleting != null)) {
                    this.OutbreakNotesReportRowDeleting(this, new OutbreakNotesReportRowChangeEvent(((OutbreakNotesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOutbreakNotesReportRow(OutbreakNotesReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OutBreakDataSet ds = new OutBreakDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OutbreakNotesReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OutbreakReportDataTable : global::System.Data.TypedTableBase<OutbreakReportRow> {
            
            private global::System.Data.DataColumn columnidfOutbreak;
            
            private global::System.Data.DataColumn columnstrOutbreakID;
            
            private global::System.Data.DataColumn columndatOutbreakStartDate;
            
            private global::System.Data.DataColumn columndatOutbreakFinishDate;
            
            private global::System.Data.DataColumn columnstrOutbreakDescription;
            
            private global::System.Data.DataColumn columnstrOutbreakLocation;
            
            private global::System.Data.DataColumn columnstrOutbreakDiagnosis;
            
            private global::System.Data.DataColumn columnidfCaseSession;
            
            private global::System.Data.DataColumn columnstrCaseSessionID;
            
            private global::System.Data.DataColumn columnidfsCaseSessionType;
            
            private global::System.Data.DataColumn columnstrCaseSessionType;
            
            private global::System.Data.DataColumn columndatCaseSessionDate;
            
            private global::System.Data.DataColumn columnidfsSourceOfCaseSessionDate;
            
            private global::System.Data.DataColumn columnstrCaseSessionClassification;
            
            private global::System.Data.DataColumn columnblnConfirmed;
            
            private global::System.Data.DataColumn columnstrCaseSessionDiagnosis;
            
            private global::System.Data.DataColumn columnstrCaseSessionLocation;
            
            private global::System.Data.DataColumn columnstrCaseSessionAddress;
            
            private global::System.Data.DataColumn columnstrCaseSessionAddressDenyRightsDetailed;
            
            private global::System.Data.DataColumn columnstrCaseSessionAddressDenyRightsSettlement;
            
            private global::System.Data.DataColumn columnstrPatientFarmOwner;
            
            private global::System.Data.DataColumn columnstrCaseSessionCalculatedAddress;
            
            private global::System.Data.DataColumn columnstrCaseSessionCalculatedSourceOfDate;
            
            private global::System.Data.DataColumn columnstrOutbreakIDBarcode;
            
            private global::System.Data.DataColumn columnstrCaseSessionIDBarcode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakReportDataTable() {
                this.TableName = "OutbreakReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OutbreakReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OutbreakReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfOutbreakColumn {
                get {
                    return this.columnidfOutbreak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOutbreakIDColumn {
                get {
                    return this.columnstrOutbreakID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn datOutbreakStartDateColumn {
                get {
                    return this.columndatOutbreakStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn datOutbreakFinishDateColumn {
                get {
                    return this.columndatOutbreakFinishDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOutbreakDescriptionColumn {
                get {
                    return this.columnstrOutbreakDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOutbreakLocationColumn {
                get {
                    return this.columnstrOutbreakLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOutbreakDiagnosisColumn {
                get {
                    return this.columnstrOutbreakDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfCaseSessionColumn {
                get {
                    return this.columnidfCaseSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionIDColumn {
                get {
                    return this.columnstrCaseSessionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsCaseSessionTypeColumn {
                get {
                    return this.columnidfsCaseSessionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionTypeColumn {
                get {
                    return this.columnstrCaseSessionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn datCaseSessionDateColumn {
                get {
                    return this.columndatCaseSessionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsSourceOfCaseSessionDateColumn {
                get {
                    return this.columnidfsSourceOfCaseSessionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionClassificationColumn {
                get {
                    return this.columnstrCaseSessionClassification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnConfirmedColumn {
                get {
                    return this.columnblnConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionDiagnosisColumn {
                get {
                    return this.columnstrCaseSessionDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionLocationColumn {
                get {
                    return this.columnstrCaseSessionLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionAddressColumn {
                get {
                    return this.columnstrCaseSessionAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionAddressDenyRightsDetailedColumn {
                get {
                    return this.columnstrCaseSessionAddressDenyRightsDetailed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionAddressDenyRightsSettlementColumn {
                get {
                    return this.columnstrCaseSessionAddressDenyRightsSettlement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPatientFarmOwnerColumn {
                get {
                    return this.columnstrPatientFarmOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionCalculatedAddressColumn {
                get {
                    return this.columnstrCaseSessionCalculatedAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionCalculatedSourceOfDateColumn {
                get {
                    return this.columnstrCaseSessionCalculatedSourceOfDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOutbreakIDBarcodeColumn {
                get {
                    return this.columnstrOutbreakIDBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCaseSessionIDBarcodeColumn {
                get {
                    return this.columnstrCaseSessionIDBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakReportRow this[int index] {
                get {
                    return ((OutbreakReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakReportRowChangeEventHandler OutbreakReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakReportRowChangeEventHandler OutbreakReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakReportRowChangeEventHandler OutbreakReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutbreakReportRowChangeEventHandler OutbreakReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOutbreakReportRow(OutbreakReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakReportRow AddOutbreakReportRow(
                        long idfOutbreak, 
                        string strOutbreakID, 
                        System.DateTime datOutbreakStartDate, 
                        System.DateTime datOutbreakFinishDate, 
                        string strOutbreakDescription, 
                        string strOutbreakLocation, 
                        string strOutbreakDiagnosis, 
                        long idfCaseSession, 
                        string strCaseSessionID, 
                        long idfsCaseSessionType, 
                        string strCaseSessionType, 
                        System.DateTime datCaseSessionDate, 
                        int idfsSourceOfCaseSessionDate, 
                        string strCaseSessionClassification, 
                        int blnConfirmed, 
                        string strCaseSessionDiagnosis, 
                        string strCaseSessionLocation, 
                        string strCaseSessionAddress, 
                        string strCaseSessionAddressDenyRightsDetailed, 
                        string strCaseSessionAddressDenyRightsSettlement, 
                        string strPatientFarmOwner, 
                        string strCaseSessionCalculatedAddress, 
                        string strCaseSessionCalculatedSourceOfDate, 
                        string strOutbreakIDBarcode, 
                        string strCaseSessionIDBarcode) {
                OutbreakReportRow rowOutbreakReportRow = ((OutbreakReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idfOutbreak,
                        strOutbreakID,
                        datOutbreakStartDate,
                        datOutbreakFinishDate,
                        strOutbreakDescription,
                        strOutbreakLocation,
                        strOutbreakDiagnosis,
                        idfCaseSession,
                        strCaseSessionID,
                        idfsCaseSessionType,
                        strCaseSessionType,
                        datCaseSessionDate,
                        idfsSourceOfCaseSessionDate,
                        strCaseSessionClassification,
                        blnConfirmed,
                        strCaseSessionDiagnosis,
                        strCaseSessionLocation,
                        strCaseSessionAddress,
                        strCaseSessionAddressDenyRightsDetailed,
                        strCaseSessionAddressDenyRightsSettlement,
                        strPatientFarmOwner,
                        strCaseSessionCalculatedAddress,
                        strCaseSessionCalculatedSourceOfDate,
                        strOutbreakIDBarcode,
                        strCaseSessionIDBarcode};
                rowOutbreakReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOutbreakReportRow);
                return rowOutbreakReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakReportRow FindByidfOutbreak(long idfOutbreak) {
                return ((OutbreakReportRow)(this.Rows.Find(new object[] {
                            idfOutbreak})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OutbreakReportDataTable cln = ((OutbreakReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OutbreakReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnidfOutbreak = base.Columns["idfOutbreak"];
                this.columnstrOutbreakID = base.Columns["strOutbreakID"];
                this.columndatOutbreakStartDate = base.Columns["datOutbreakStartDate"];
                this.columndatOutbreakFinishDate = base.Columns["datOutbreakFinishDate"];
                this.columnstrOutbreakDescription = base.Columns["strOutbreakDescription"];
                this.columnstrOutbreakLocation = base.Columns["strOutbreakLocation"];
                this.columnstrOutbreakDiagnosis = base.Columns["strOutbreakDiagnosis"];
                this.columnidfCaseSession = base.Columns["idfCaseSession"];
                this.columnstrCaseSessionID = base.Columns["strCaseSessionID"];
                this.columnidfsCaseSessionType = base.Columns["idfsCaseSessionType"];
                this.columnstrCaseSessionType = base.Columns["strCaseSessionType"];
                this.columndatCaseSessionDate = base.Columns["datCaseSessionDate"];
                this.columnidfsSourceOfCaseSessionDate = base.Columns["idfsSourceOfCaseSessionDate"];
                this.columnstrCaseSessionClassification = base.Columns["strCaseSessionClassification"];
                this.columnblnConfirmed = base.Columns["blnConfirmed"];
                this.columnstrCaseSessionDiagnosis = base.Columns["strCaseSessionDiagnosis"];
                this.columnstrCaseSessionLocation = base.Columns["strCaseSessionLocation"];
                this.columnstrCaseSessionAddress = base.Columns["strCaseSessionAddress"];
                this.columnstrCaseSessionAddressDenyRightsDetailed = base.Columns["strCaseSessionAddressDenyRightsDetailed"];
                this.columnstrCaseSessionAddressDenyRightsSettlement = base.Columns["strCaseSessionAddressDenyRightsSettlement"];
                this.columnstrPatientFarmOwner = base.Columns["strPatientFarmOwner"];
                this.columnstrCaseSessionCalculatedAddress = base.Columns["strCaseSessionCalculatedAddress"];
                this.columnstrCaseSessionCalculatedSourceOfDate = base.Columns["strCaseSessionCalculatedSourceOfDate"];
                this.columnstrOutbreakIDBarcode = base.Columns["strOutbreakIDBarcode"];
                this.columnstrCaseSessionIDBarcode = base.Columns["strCaseSessionIDBarcode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnidfOutbreak = new global::System.Data.DataColumn("idfOutbreak", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfOutbreak);
                this.columnstrOutbreakID = new global::System.Data.DataColumn("strOutbreakID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOutbreakID);
                this.columndatOutbreakStartDate = new global::System.Data.DataColumn("datOutbreakStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatOutbreakStartDate);
                this.columndatOutbreakFinishDate = new global::System.Data.DataColumn("datOutbreakFinishDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatOutbreakFinishDate);
                this.columnstrOutbreakDescription = new global::System.Data.DataColumn("strOutbreakDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOutbreakDescription);
                this.columnstrOutbreakLocation = new global::System.Data.DataColumn("strOutbreakLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOutbreakLocation);
                this.columnstrOutbreakDiagnosis = new global::System.Data.DataColumn("strOutbreakDiagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOutbreakDiagnosis);
                this.columnidfCaseSession = new global::System.Data.DataColumn("idfCaseSession", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfCaseSession);
                this.columnstrCaseSessionID = new global::System.Data.DataColumn("strCaseSessionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionID);
                this.columnidfsCaseSessionType = new global::System.Data.DataColumn("idfsCaseSessionType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsCaseSessionType);
                this.columnstrCaseSessionType = new global::System.Data.DataColumn("strCaseSessionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionType);
                this.columndatCaseSessionDate = new global::System.Data.DataColumn("datCaseSessionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatCaseSessionDate);
                this.columnidfsSourceOfCaseSessionDate = new global::System.Data.DataColumn("idfsSourceOfCaseSessionDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsSourceOfCaseSessionDate);
                this.columnstrCaseSessionClassification = new global::System.Data.DataColumn("strCaseSessionClassification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionClassification);
                this.columnblnConfirmed = new global::System.Data.DataColumn("blnConfirmed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnConfirmed);
                this.columnstrCaseSessionDiagnosis = new global::System.Data.DataColumn("strCaseSessionDiagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionDiagnosis);
                this.columnstrCaseSessionLocation = new global::System.Data.DataColumn("strCaseSessionLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionLocation);
                this.columnstrCaseSessionAddress = new global::System.Data.DataColumn("strCaseSessionAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionAddress);
                this.columnstrCaseSessionAddressDenyRightsDetailed = new global::System.Data.DataColumn("strCaseSessionAddressDenyRightsDetailed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionAddressDenyRightsDetailed);
                this.columnstrCaseSessionAddressDenyRightsSettlement = new global::System.Data.DataColumn("strCaseSessionAddressDenyRightsSettlement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionAddressDenyRightsSettlement);
                this.columnstrPatientFarmOwner = new global::System.Data.DataColumn("strPatientFarmOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPatientFarmOwner);
                this.columnstrCaseSessionCalculatedAddress = new global::System.Data.DataColumn("strCaseSessionCalculatedAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionCalculatedAddress);
                this.columnstrCaseSessionCalculatedSourceOfDate = new global::System.Data.DataColumn("strCaseSessionCalculatedSourceOfDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionCalculatedSourceOfDate);
                this.columnstrOutbreakIDBarcode = new global::System.Data.DataColumn("strOutbreakIDBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOutbreakIDBarcode);
                this.columnstrCaseSessionIDBarcode = new global::System.Data.DataColumn("strCaseSessionIDBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCaseSessionIDBarcode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidfOutbreak}, true));
                this.columnidfOutbreak.AllowDBNull = false;
                this.columnidfOutbreak.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakReportRow NewOutbreakReportRow() {
                return ((OutbreakReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OutbreakReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OutbreakReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OutbreakReportRowChanged != null)) {
                    this.OutbreakReportRowChanged(this, new OutbreakReportRowChangeEvent(((OutbreakReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OutbreakReportRowChanging != null)) {
                    this.OutbreakReportRowChanging(this, new OutbreakReportRowChangeEvent(((OutbreakReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OutbreakReportRowDeleted != null)) {
                    this.OutbreakReportRowDeleted(this, new OutbreakReportRowChangeEvent(((OutbreakReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OutbreakReportRowDeleting != null)) {
                    this.OutbreakReportRowDeleting(this, new OutbreakReportRowChangeEvent(((OutbreakReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOutbreakReportRow(OutbreakReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OutBreakDataSet ds = new OutBreakDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OutbreakReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OutbreakNotesReportRow : global::System.Data.DataRow {
            
            private OutbreakNotesReportDataTable tableOutbreakNotesReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OutbreakNotesReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOutbreakNotesReport = ((OutbreakNotesReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfOutbreakNote {
                get {
                    return ((long)(this[this.tableOutbreakNotesReport.idfOutbreakNoteColumn]));
                }
                set {
                    this[this.tableOutbreakNotesReport.idfOutbreakNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfOutbreak {
                get {
                    return ((long)(this[this.tableOutbreakNotesReport.idfOutbreakColumn]));
                }
                set {
                    this[this.tableOutbreakNotesReport.idfOutbreakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNote {
                get {
                    if (this.IsstrNoteNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakNotesReport.strNoteColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakNotesReport.strNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime datNoteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutbreakNotesReport.datNoteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datNoteDate\' in table \'OutbreakNotesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakNotesReport.datNoteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCreatorName {
                get {
                    if (this.IsstrCreatorNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakNotesReport.strCreatorNameColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakNotesReport.strCreatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNoteNull() {
                return this.IsNull(this.tableOutbreakNotesReport.strNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNoteNull() {
                this[this.tableOutbreakNotesReport.strNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdatNoteDateNull() {
                return this.IsNull(this.tableOutbreakNotesReport.datNoteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdatNoteDateNull() {
                this[this.tableOutbreakNotesReport.datNoteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCreatorNameNull() {
                return this.IsNull(this.tableOutbreakNotesReport.strCreatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCreatorNameNull() {
                this[this.tableOutbreakNotesReport.strCreatorNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OutbreakReportRow : global::System.Data.DataRow {
            
            private OutbreakReportDataTable tableOutbreakReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OutbreakReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOutbreakReport = ((OutbreakReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfOutbreak {
                get {
                    return ((long)(this[this.tableOutbreakReport.idfOutbreakColumn]));
                }
                set {
                    this[this.tableOutbreakReport.idfOutbreakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOutbreakID {
                get {
                    if (this.IsstrOutbreakIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strOutbreakIDColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strOutbreakIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime datOutbreakStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutbreakReport.datOutbreakStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datOutbreakStartDate\' in table \'OutbreakReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.datOutbreakStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime datOutbreakFinishDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutbreakReport.datOutbreakFinishDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datOutbreakFinishDate\' in table \'OutbreakReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.datOutbreakFinishDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOutbreakDescription {
                get {
                    if (this.IsstrOutbreakDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strOutbreakDescriptionColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strOutbreakDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOutbreakLocation {
                get {
                    if (this.IsstrOutbreakLocationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strOutbreakLocationColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strOutbreakLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOutbreakDiagnosis {
                get {
                    if (this.IsstrOutbreakDiagnosisNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strOutbreakDiagnosisColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strOutbreakDiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfCaseSession {
                get {
                    try {
                        return ((long)(this[this.tableOutbreakReport.idfCaseSessionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfCaseSession\' in table \'OutbreakReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.idfCaseSessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionID {
                get {
                    if (this.IsstrCaseSessionIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionIDColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsCaseSessionType {
                get {
                    try {
                        return ((long)(this[this.tableOutbreakReport.idfsCaseSessionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsCaseSessionType\' in table \'OutbreakReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.idfsCaseSessionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionType {
                get {
                    if (this.IsstrCaseSessionTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionTypeColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime datCaseSessionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutbreakReport.datCaseSessionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datCaseSessionDate\' in table \'OutbreakReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.datCaseSessionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idfsSourceOfCaseSessionDate {
                get {
                    try {
                        return ((int)(this[this.tableOutbreakReport.idfsSourceOfCaseSessionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsSourceOfCaseSessionDate\' in table \'OutbreakReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.idfsSourceOfCaseSessionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionClassification {
                get {
                    if (this.IsstrCaseSessionClassificationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionClassificationColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionClassificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int blnConfirmed {
                get {
                    try {
                        return ((int)(this[this.tableOutbreakReport.blnConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnConfirmed\' in table \'OutbreakReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.blnConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionDiagnosis {
                get {
                    if (this.IsstrCaseSessionDiagnosisNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionDiagnosisColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionDiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionLocation {
                get {
                    if (this.IsstrCaseSessionLocationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionLocationColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionAddress {
                get {
                    if (this.IsstrCaseSessionAddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionAddressColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionAddressDenyRightsDetailed {
                get {
                    if (this.IsstrCaseSessionAddressDenyRightsDetailedNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionAddressDenyRightsDetailedColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionAddressDenyRightsDetailedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionAddressDenyRightsSettlement {
                get {
                    if (this.IsstrCaseSessionAddressDenyRightsSettlementNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionAddressDenyRightsSettlementColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionAddressDenyRightsSettlementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPatientFarmOwner {
                get {
                    if (this.IsstrPatientFarmOwnerNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strPatientFarmOwnerColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strPatientFarmOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionCalculatedAddress {
                get {
                    if (this.IsstrCaseSessionCalculatedAddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionCalculatedAddressColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionCalculatedAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionCalculatedSourceOfDate {
                get {
                    if (this.IsstrCaseSessionCalculatedSourceOfDateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionCalculatedSourceOfDateColumn]));
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionCalculatedSourceOfDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOutbreakIDBarcode {
                get {
                    try {
                        return ((string)(this[this.tableOutbreakReport.strOutbreakIDBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strOutbreakIDBarcode\' in table \'OutbreakReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.strOutbreakIDBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCaseSessionIDBarcode {
                get {
                    try {
                        return ((string)(this[this.tableOutbreakReport.strCaseSessionIDBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCaseSessionIDBarcode\' in table \'OutbreakReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOutbreakReport.strCaseSessionIDBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOutbreakIDNull() {
                return this.IsNull(this.tableOutbreakReport.strOutbreakIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOutbreakIDNull() {
                this[this.tableOutbreakReport.strOutbreakIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdatOutbreakStartDateNull() {
                return this.IsNull(this.tableOutbreakReport.datOutbreakStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdatOutbreakStartDateNull() {
                this[this.tableOutbreakReport.datOutbreakStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdatOutbreakFinishDateNull() {
                return this.IsNull(this.tableOutbreakReport.datOutbreakFinishDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdatOutbreakFinishDateNull() {
                this[this.tableOutbreakReport.datOutbreakFinishDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOutbreakDescriptionNull() {
                return this.IsNull(this.tableOutbreakReport.strOutbreakDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOutbreakDescriptionNull() {
                this[this.tableOutbreakReport.strOutbreakDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOutbreakLocationNull() {
                return this.IsNull(this.tableOutbreakReport.strOutbreakLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOutbreakLocationNull() {
                this[this.tableOutbreakReport.strOutbreakLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOutbreakDiagnosisNull() {
                return this.IsNull(this.tableOutbreakReport.strOutbreakDiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOutbreakDiagnosisNull() {
                this[this.tableOutbreakReport.strOutbreakDiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfCaseSessionNull() {
                return this.IsNull(this.tableOutbreakReport.idfCaseSessionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfCaseSessionNull() {
                this[this.tableOutbreakReport.idfCaseSessionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionIDNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionIDNull() {
                this[this.tableOutbreakReport.strCaseSessionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsCaseSessionTypeNull() {
                return this.IsNull(this.tableOutbreakReport.idfsCaseSessionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsCaseSessionTypeNull() {
                this[this.tableOutbreakReport.idfsCaseSessionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionTypeNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionTypeNull() {
                this[this.tableOutbreakReport.strCaseSessionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdatCaseSessionDateNull() {
                return this.IsNull(this.tableOutbreakReport.datCaseSessionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdatCaseSessionDateNull() {
                this[this.tableOutbreakReport.datCaseSessionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsSourceOfCaseSessionDateNull() {
                return this.IsNull(this.tableOutbreakReport.idfsSourceOfCaseSessionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsSourceOfCaseSessionDateNull() {
                this[this.tableOutbreakReport.idfsSourceOfCaseSessionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionClassificationNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionClassificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionClassificationNull() {
                this[this.tableOutbreakReport.strCaseSessionClassificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnConfirmedNull() {
                return this.IsNull(this.tableOutbreakReport.blnConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnConfirmedNull() {
                this[this.tableOutbreakReport.blnConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionDiagnosisNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionDiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionDiagnosisNull() {
                this[this.tableOutbreakReport.strCaseSessionDiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionLocationNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionLocationNull() {
                this[this.tableOutbreakReport.strCaseSessionLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionAddressNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionAddressNull() {
                this[this.tableOutbreakReport.strCaseSessionAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionAddressDenyRightsDetailedNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionAddressDenyRightsDetailedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionAddressDenyRightsDetailedNull() {
                this[this.tableOutbreakReport.strCaseSessionAddressDenyRightsDetailedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionAddressDenyRightsSettlementNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionAddressDenyRightsSettlementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionAddressDenyRightsSettlementNull() {
                this[this.tableOutbreakReport.strCaseSessionAddressDenyRightsSettlementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPatientFarmOwnerNull() {
                return this.IsNull(this.tableOutbreakReport.strPatientFarmOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPatientFarmOwnerNull() {
                this[this.tableOutbreakReport.strPatientFarmOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionCalculatedAddressNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionCalculatedAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionCalculatedAddressNull() {
                this[this.tableOutbreakReport.strCaseSessionCalculatedAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionCalculatedSourceOfDateNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionCalculatedSourceOfDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionCalculatedSourceOfDateNull() {
                this[this.tableOutbreakReport.strCaseSessionCalculatedSourceOfDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOutbreakIDBarcodeNull() {
                return this.IsNull(this.tableOutbreakReport.strOutbreakIDBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOutbreakIDBarcodeNull() {
                this[this.tableOutbreakReport.strOutbreakIDBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCaseSessionIDBarcodeNull() {
                return this.IsNull(this.tableOutbreakReport.strCaseSessionIDBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCaseSessionIDBarcodeNull() {
                this[this.tableOutbreakReport.strCaseSessionIDBarcodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OutbreakNotesReportRowChangeEvent : global::System.EventArgs {
            
            private OutbreakNotesReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakNotesReportRowChangeEvent(OutbreakNotesReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakNotesReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OutbreakReportRowChangeEvent : global::System.EventArgs {
            
            private OutbreakReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakReportRowChangeEvent(OutbreakReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutbreakReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EIDSS.Reports.Document.Uni.Outbreak.OutBreakDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OutbreakNotesAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OutbreakNotesAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OutbreakNotesReport";
            tableMapping.ColumnMappings.Add("idfOutbreakNote", "idfOutbreakNote");
            tableMapping.ColumnMappings.Add("idfOutbreak", "idfOutbreak");
            tableMapping.ColumnMappings.Add("strNote", "strNote");
            tableMapping.ColumnMappings.Add("datNoteDate", "datNoteDate");
            tableMapping.ColumnMappings.Add("strCreatorName", "strCreatorName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EIDSS.Reports.Properties.Settings.Default.eidss_v6ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRepUniOutbreakNotesReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ObjID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OutBreakDataSet.OutbreakNotesReportDataTable dataTable, string LangID, global::System.Nullable<long> ObjID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((ObjID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(ObjID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OutBreakDataSet.OutbreakNotesReportDataTable GetData(string LangID, global::System.Nullable<long> ObjID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((ObjID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(ObjID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            OutBreakDataSet.OutbreakNotesReportDataTable dataTable = new OutBreakDataSet.OutbreakNotesReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OutbreakAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OutbreakAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OutbreakReport";
            tableMapping.ColumnMappings.Add("idfOutbreak", "idfOutbreak");
            tableMapping.ColumnMappings.Add("strOutbreakID", "strOutbreakID");
            tableMapping.ColumnMappings.Add("datOutbreakStartDate", "datOutbreakStartDate");
            tableMapping.ColumnMappings.Add("datOutbreakFinishDate", "datOutbreakFinishDate");
            tableMapping.ColumnMappings.Add("strOutbreakDescription", "strOutbreakDescription");
            tableMapping.ColumnMappings.Add("strOutbreakLocation", "strOutbreakLocation");
            tableMapping.ColumnMappings.Add("strOutbreakDiagnosis", "strOutbreakDiagnosis");
            tableMapping.ColumnMappings.Add("idfCaseSession", "idfCaseSession");
            tableMapping.ColumnMappings.Add("strCaseSessionID", "strCaseSessionID");
            tableMapping.ColumnMappings.Add("idfsCaseSessionType", "idfsCaseSessionType");
            tableMapping.ColumnMappings.Add("strCaseSessionType", "strCaseSessionType");
            tableMapping.ColumnMappings.Add("datCaseSessionDate", "datCaseSessionDate");
            tableMapping.ColumnMappings.Add("idfsSourceOfCaseSessionDate", "idfsSourceOfCaseSessionDate");
            tableMapping.ColumnMappings.Add("strCaseSessionClassification", "strCaseSessionClassification");
            tableMapping.ColumnMappings.Add("blnConfirmed", "blnConfirmed");
            tableMapping.ColumnMappings.Add("strCaseSessionDiagnosis", "strCaseSessionDiagnosis");
            tableMapping.ColumnMappings.Add("strCaseSessionLocation", "strCaseSessionLocation");
            tableMapping.ColumnMappings.Add("strCaseSessionAddress", "strCaseSessionAddress");
            tableMapping.ColumnMappings.Add("strCaseSessionAddressDenyRightsDetailed", "strCaseSessionAddressDenyRightsDetailed");
            tableMapping.ColumnMappings.Add("strCaseSessionAddressDenyRightsSettlement", "strCaseSessionAddressDenyRightsSettlement");
            tableMapping.ColumnMappings.Add("strPatientFarmOwner", "strPatientFarmOwner");
            tableMapping.ColumnMappings.Add("strOutbreakIDBarcode", "strOutbreakIDBarcode");
            tableMapping.ColumnMappings.Add("strCaseSessionIDBarcode", "strCaseSessionIDBarcode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EIDSS.Reports.Properties.Settings.Default.eidss_v6ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRepUniOutbreakReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ObjID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OutBreakDataSet.OutbreakReportDataTable dataTable, string LangID, global::System.Nullable<long> ObjID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((ObjID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(ObjID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OutBreakDataSet.OutbreakReportDataTable GetData(string LangID, global::System.Nullable<long> ObjID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((ObjID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(ObjID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            OutBreakDataSet.OutbreakReportDataTable dataTable = new OutBreakDataSet.OutbreakReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591