//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EIDSS.Reports.Parameterized.Human.GG.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InfectiousDiseaseDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InfectiousDiseaseDataSet : global::System.Data.DataSet {
        
        private spRepHumAnnualInfectiousDiseaseDataTable tablespRepHumAnnualInfectiousDisease;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InfectiousDiseaseDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected InfectiousDiseaseDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRepHumAnnualInfectiousDisease"] != null)) {
                    base.Tables.Add(new spRepHumAnnualInfectiousDiseaseDataTable(ds.Tables["spRepHumAnnualInfectiousDisease"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRepHumAnnualInfectiousDiseaseDataTable spRepHumAnnualInfectiousDisease {
            get {
                return this.tablespRepHumAnnualInfectiousDisease;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InfectiousDiseaseDataSet cln = ((InfectiousDiseaseDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRepHumAnnualInfectiousDisease"] != null)) {
                    base.Tables.Add(new spRepHumAnnualInfectiousDiseaseDataTable(ds.Tables["spRepHumAnnualInfectiousDisease"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRepHumAnnualInfectiousDisease = ((spRepHumAnnualInfectiousDiseaseDataTable)(base.Tables["spRepHumAnnualInfectiousDisease"]));
            if ((initTable == true)) {
                if ((this.tablespRepHumAnnualInfectiousDisease != null)) {
                    this.tablespRepHumAnnualInfectiousDisease.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InfectiousDiseaseDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InfectiousDiseaseDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRepHumAnnualInfectiousDisease = new spRepHumAnnualInfectiousDiseaseDataTable();
            base.Tables.Add(this.tablespRepHumAnnualInfectiousDisease);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRepHumAnnualInfectiousDisease() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InfectiousDiseaseDataSet ds = new InfectiousDiseaseDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRepHumAnnualInfectiousDiseaseRowChangeEventHandler(object sender, spRepHumAnnualInfectiousDiseaseRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRepHumAnnualInfectiousDiseaseDataTable : global::System.Data.TypedTableBase<spRepHumAnnualInfectiousDiseaseRow> {
            
            private global::System.Data.DataColumn columnidfsBaseReference;
            
            private global::System.Data.DataColumn columnstrDiseaseName;
            
            private global::System.Data.DataColumn columnstrICD10;
            
            private global::System.Data.DataColumn columnintAge_0_1;
            
            private global::System.Data.DataColumn columnintAge_1_4;
            
            private global::System.Data.DataColumn columnintAge_5_14;
            
            private global::System.Data.DataColumn columnintAge_15_19;
            
            private global::System.Data.DataColumn columnintAge_20_29;
            
            private global::System.Data.DataColumn columnintAge_30_59;
            
            private global::System.Data.DataColumn columnintAge_60_more;
            
            private global::System.Data.DataColumn columnintTotal;
            
            private global::System.Data.DataColumn columnintLabTested;
            
            private global::System.Data.DataColumn columnintLabConfirmed;
            
            private global::System.Data.DataColumn columnintTotalConfirmed;
            
            private global::System.Data.DataColumn columnstrNameOfRespondent;
            
            private global::System.Data.DataColumn columnstrActualAddress;
            
            private global::System.Data.DataColumn columnstrTelephone;
            
            private global::System.Data.DataColumn columnintOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepHumAnnualInfectiousDiseaseDataTable() {
                this.TableName = "spRepHumAnnualInfectiousDisease";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepHumAnnualInfectiousDiseaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRepHumAnnualInfectiousDiseaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsBaseReferenceColumn {
                get {
                    return this.columnidfsBaseReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDiseaseNameColumn {
                get {
                    return this.columnstrDiseaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strICD10Column {
                get {
                    return this.columnstrICD10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intAge_0_1Column {
                get {
                    return this.columnintAge_0_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intAge_1_4Column {
                get {
                    return this.columnintAge_1_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intAge_5_14Column {
                get {
                    return this.columnintAge_5_14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intAge_15_19Column {
                get {
                    return this.columnintAge_15_19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intAge_20_29Column {
                get {
                    return this.columnintAge_20_29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intAge_30_59Column {
                get {
                    return this.columnintAge_30_59;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intAge_60_moreColumn {
                get {
                    return this.columnintAge_60_more;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intTotalColumn {
                get {
                    return this.columnintTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLabTestedColumn {
                get {
                    return this.columnintLabTested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLabConfirmedColumn {
                get {
                    return this.columnintLabConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intTotalConfirmedColumn {
                get {
                    return this.columnintTotalConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNameOfRespondentColumn {
                get {
                    return this.columnstrNameOfRespondent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strActualAddressColumn {
                get {
                    return this.columnstrActualAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strTelephoneColumn {
                get {
                    return this.columnstrTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intOrderColumn {
                get {
                    return this.columnintOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepHumAnnualInfectiousDiseaseRow this[int index] {
                get {
                    return ((spRepHumAnnualInfectiousDiseaseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepHumAnnualInfectiousDiseaseRowChangeEventHandler spRepHumAnnualInfectiousDiseaseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepHumAnnualInfectiousDiseaseRowChangeEventHandler spRepHumAnnualInfectiousDiseaseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepHumAnnualInfectiousDiseaseRowChangeEventHandler spRepHumAnnualInfectiousDiseaseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepHumAnnualInfectiousDiseaseRowChangeEventHandler spRepHumAnnualInfectiousDiseaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRepHumAnnualInfectiousDiseaseRow(spRepHumAnnualInfectiousDiseaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepHumAnnualInfectiousDiseaseRow AddspRepHumAnnualInfectiousDiseaseRow(
                        long idfsBaseReference, 
                        string strDiseaseName, 
                        string strICD10, 
                        double intAge_0_1, 
                        double intAge_1_4, 
                        double intAge_5_14, 
                        double intAge_15_19, 
                        double intAge_20_29, 
                        double intAge_30_59, 
                        double intAge_60_more, 
                        double intTotal, 
                        double intLabTested, 
                        double intLabConfirmed, 
                        double intTotalConfirmed, 
                        string strNameOfRespondent, 
                        string strActualAddress, 
                        string strTelephone, 
                        int intOrder) {
                spRepHumAnnualInfectiousDiseaseRow rowspRepHumAnnualInfectiousDiseaseRow = ((spRepHumAnnualInfectiousDiseaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idfsBaseReference,
                        strDiseaseName,
                        strICD10,
                        intAge_0_1,
                        intAge_1_4,
                        intAge_5_14,
                        intAge_15_19,
                        intAge_20_29,
                        intAge_30_59,
                        intAge_60_more,
                        intTotal,
                        intLabTested,
                        intLabConfirmed,
                        intTotalConfirmed,
                        strNameOfRespondent,
                        strActualAddress,
                        strTelephone,
                        intOrder};
                rowspRepHumAnnualInfectiousDiseaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRepHumAnnualInfectiousDiseaseRow);
                return rowspRepHumAnnualInfectiousDiseaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepHumAnnualInfectiousDiseaseRow FindByidfsBaseReference(long idfsBaseReference) {
                return ((spRepHumAnnualInfectiousDiseaseRow)(this.Rows.Find(new object[] {
                            idfsBaseReference})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRepHumAnnualInfectiousDiseaseDataTable cln = ((spRepHumAnnualInfectiousDiseaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRepHumAnnualInfectiousDiseaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnidfsBaseReference = base.Columns["idfsBaseReference"];
                this.columnstrDiseaseName = base.Columns["strDiseaseName"];
                this.columnstrICD10 = base.Columns["strICD10"];
                this.columnintAge_0_1 = base.Columns["intAge_0_1"];
                this.columnintAge_1_4 = base.Columns["intAge_1_4"];
                this.columnintAge_5_14 = base.Columns["intAge_5_14"];
                this.columnintAge_15_19 = base.Columns["intAge_15_19"];
                this.columnintAge_20_29 = base.Columns["intAge_20_29"];
                this.columnintAge_30_59 = base.Columns["intAge_30_59"];
                this.columnintAge_60_more = base.Columns["intAge_60_more"];
                this.columnintTotal = base.Columns["intTotal"];
                this.columnintLabTested = base.Columns["intLabTested"];
                this.columnintLabConfirmed = base.Columns["intLabConfirmed"];
                this.columnintTotalConfirmed = base.Columns["intTotalConfirmed"];
                this.columnstrNameOfRespondent = base.Columns["strNameOfRespondent"];
                this.columnstrActualAddress = base.Columns["strActualAddress"];
                this.columnstrTelephone = base.Columns["strTelephone"];
                this.columnintOrder = base.Columns["intOrder"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnidfsBaseReference = new global::System.Data.DataColumn("idfsBaseReference", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsBaseReference);
                this.columnstrDiseaseName = new global::System.Data.DataColumn("strDiseaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDiseaseName);
                this.columnstrICD10 = new global::System.Data.DataColumn("strICD10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrICD10);
                this.columnintAge_0_1 = new global::System.Data.DataColumn("intAge_0_1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintAge_0_1);
                this.columnintAge_1_4 = new global::System.Data.DataColumn("intAge_1_4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintAge_1_4);
                this.columnintAge_5_14 = new global::System.Data.DataColumn("intAge_5_14", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintAge_5_14);
                this.columnintAge_15_19 = new global::System.Data.DataColumn("intAge_15_19", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintAge_15_19);
                this.columnintAge_20_29 = new global::System.Data.DataColumn("intAge_20_29", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintAge_20_29);
                this.columnintAge_30_59 = new global::System.Data.DataColumn("intAge_30_59", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintAge_30_59);
                this.columnintAge_60_more = new global::System.Data.DataColumn("intAge_60_more", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintAge_60_more);
                this.columnintTotal = new global::System.Data.DataColumn("intTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintTotal);
                this.columnintLabTested = new global::System.Data.DataColumn("intLabTested", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLabTested);
                this.columnintLabConfirmed = new global::System.Data.DataColumn("intLabConfirmed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLabConfirmed);
                this.columnintTotalConfirmed = new global::System.Data.DataColumn("intTotalConfirmed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintTotalConfirmed);
                this.columnstrNameOfRespondent = new global::System.Data.DataColumn("strNameOfRespondent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNameOfRespondent);
                this.columnstrActualAddress = new global::System.Data.DataColumn("strActualAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrActualAddress);
                this.columnstrTelephone = new global::System.Data.DataColumn("strTelephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrTelephone);
                this.columnintOrder = new global::System.Data.DataColumn("intOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintOrder);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidfsBaseReference}, true));
                this.columnidfsBaseReference.AllowDBNull = false;
                this.columnidfsBaseReference.Unique = true;
                this.columnstrDiseaseName.AllowDBNull = false;
                this.columnintAge_0_1.AllowDBNull = false;
                this.columnintAge_1_4.AllowDBNull = false;
                this.columnintAge_5_14.AllowDBNull = false;
                this.columnintAge_15_19.AllowDBNull = false;
                this.columnintAge_20_29.AllowDBNull = false;
                this.columnintAge_30_59.AllowDBNull = false;
                this.columnintAge_60_more.AllowDBNull = false;
                this.columnintTotal.AllowDBNull = false;
                this.columnintOrder.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepHumAnnualInfectiousDiseaseRow NewspRepHumAnnualInfectiousDiseaseRow() {
                return ((spRepHumAnnualInfectiousDiseaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRepHumAnnualInfectiousDiseaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRepHumAnnualInfectiousDiseaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRepHumAnnualInfectiousDiseaseRowChanged != null)) {
                    this.spRepHumAnnualInfectiousDiseaseRowChanged(this, new spRepHumAnnualInfectiousDiseaseRowChangeEvent(((spRepHumAnnualInfectiousDiseaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRepHumAnnualInfectiousDiseaseRowChanging != null)) {
                    this.spRepHumAnnualInfectiousDiseaseRowChanging(this, new spRepHumAnnualInfectiousDiseaseRowChangeEvent(((spRepHumAnnualInfectiousDiseaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRepHumAnnualInfectiousDiseaseRowDeleted != null)) {
                    this.spRepHumAnnualInfectiousDiseaseRowDeleted(this, new spRepHumAnnualInfectiousDiseaseRowChangeEvent(((spRepHumAnnualInfectiousDiseaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRepHumAnnualInfectiousDiseaseRowDeleting != null)) {
                    this.spRepHumAnnualInfectiousDiseaseRowDeleting(this, new spRepHumAnnualInfectiousDiseaseRowChangeEvent(((spRepHumAnnualInfectiousDiseaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRepHumAnnualInfectiousDiseaseRow(spRepHumAnnualInfectiousDiseaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InfectiousDiseaseDataSet ds = new InfectiousDiseaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRepHumAnnualInfectiousDiseaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRepHumAnnualInfectiousDiseaseRow : global::System.Data.DataRow {
            
            private spRepHumAnnualInfectiousDiseaseDataTable tablespRepHumAnnualInfectiousDisease;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepHumAnnualInfectiousDiseaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRepHumAnnualInfectiousDisease = ((spRepHumAnnualInfectiousDiseaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsBaseReference {
                get {
                    return ((long)(this[this.tablespRepHumAnnualInfectiousDisease.idfsBaseReferenceColumn]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.idfsBaseReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDiseaseName {
                get {
                    return ((string)(this[this.tablespRepHumAnnualInfectiousDisease.strDiseaseNameColumn]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.strDiseaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strICD10 {
                get {
                    try {
                        return ((string)(this[this.tablespRepHumAnnualInfectiousDisease.strICD10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strICD10\' in table \'spRepHumAnnualInfectiousDisease\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.strICD10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intAge_0_1 {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intAge_0_1Column]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intAge_0_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intAge_1_4 {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intAge_1_4Column]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intAge_1_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intAge_5_14 {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intAge_5_14Column]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intAge_5_14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intAge_15_19 {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intAge_15_19Column]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intAge_15_19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intAge_20_29 {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intAge_20_29Column]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intAge_20_29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intAge_30_59 {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intAge_30_59Column]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intAge_30_59Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intAge_60_more {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intAge_60_moreColumn]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intAge_60_moreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intTotal {
                get {
                    return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intTotalColumn]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intLabTested {
                get {
                    try {
                        return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intLabTestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intLabTested\' in table \'spRepHumAnnualInfectiousDisease\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intLabTestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intLabConfirmed {
                get {
                    try {
                        return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intLabConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intLabConfirmed\' in table \'spRepHumAnnualInfectiousDisease\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intLabConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intTotalConfirmed {
                get {
                    try {
                        return ((double)(this[this.tablespRepHumAnnualInfectiousDisease.intTotalConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intTotalConfirmed\' in table \'spRepHumAnnualInfectiousDiseas" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intTotalConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNameOfRespondent {
                get {
                    try {
                        return ((string)(this[this.tablespRepHumAnnualInfectiousDisease.strNameOfRespondentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNameOfRespondent\' in table \'spRepHumAnnualInfectiousDise" +
                                "ase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.strNameOfRespondentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strActualAddress {
                get {
                    try {
                        return ((string)(this[this.tablespRepHumAnnualInfectiousDisease.strActualAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strActualAddress\' in table \'spRepHumAnnualInfectiousDisease" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.strActualAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strTelephone {
                get {
                    try {
                        return ((string)(this[this.tablespRepHumAnnualInfectiousDisease.strTelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strTelephone\' in table \'spRepHumAnnualInfectiousDisease\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.strTelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intOrder {
                get {
                    return ((int)(this[this.tablespRepHumAnnualInfectiousDisease.intOrderColumn]));
                }
                set {
                    this[this.tablespRepHumAnnualInfectiousDisease.intOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrICD10Null() {
                return this.IsNull(this.tablespRepHumAnnualInfectiousDisease.strICD10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrICD10Null() {
                this[this.tablespRepHumAnnualInfectiousDisease.strICD10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintLabTestedNull() {
                return this.IsNull(this.tablespRepHumAnnualInfectiousDisease.intLabTestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintLabTestedNull() {
                this[this.tablespRepHumAnnualInfectiousDisease.intLabTestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintLabConfirmedNull() {
                return this.IsNull(this.tablespRepHumAnnualInfectiousDisease.intLabConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintLabConfirmedNull() {
                this[this.tablespRepHumAnnualInfectiousDisease.intLabConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintTotalConfirmedNull() {
                return this.IsNull(this.tablespRepHumAnnualInfectiousDisease.intTotalConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintTotalConfirmedNull() {
                this[this.tablespRepHumAnnualInfectiousDisease.intTotalConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNameOfRespondentNull() {
                return this.IsNull(this.tablespRepHumAnnualInfectiousDisease.strNameOfRespondentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNameOfRespondentNull() {
                this[this.tablespRepHumAnnualInfectiousDisease.strNameOfRespondentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrActualAddressNull() {
                return this.IsNull(this.tablespRepHumAnnualInfectiousDisease.strActualAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrActualAddressNull() {
                this[this.tablespRepHumAnnualInfectiousDisease.strActualAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrTelephoneNull() {
                return this.IsNull(this.tablespRepHumAnnualInfectiousDisease.strTelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrTelephoneNull() {
                this[this.tablespRepHumAnnualInfectiousDisease.strTelephoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRepHumAnnualInfectiousDiseaseRowChangeEvent : global::System.EventArgs {
            
            private spRepHumAnnualInfectiousDiseaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepHumAnnualInfectiousDiseaseRowChangeEvent(spRepHumAnnualInfectiousDiseaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepHumAnnualInfectiousDiseaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EIDSS.Reports.Parameterized.Human.GG.DataSet.InfectiousDiseaseDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRepHumAnnualInfectiousDiseaseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spRepHumAnnualInfectiousDiseaseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRepHumAnnualInfectiousDisease";
            tableMapping.ColumnMappings.Add("idfsBaseReference", "idfsBaseReference");
            tableMapping.ColumnMappings.Add("strDiseaseName", "strDiseaseName");
            tableMapping.ColumnMappings.Add("strICD10", "strICD10");
            tableMapping.ColumnMappings.Add("intAge_0_1", "intAge_0_1");
            tableMapping.ColumnMappings.Add("intAge_1_4", "intAge_1_4");
            tableMapping.ColumnMappings.Add("intAge_5_14", "intAge_5_14");
            tableMapping.ColumnMappings.Add("intAge_15_19", "intAge_15_19");
            tableMapping.ColumnMappings.Add("intAge_20_29", "intAge_20_29");
            tableMapping.ColumnMappings.Add("intAge_30_59", "intAge_30_59");
            tableMapping.ColumnMappings.Add("intAge_60_more", "intAge_60_more");
            tableMapping.ColumnMappings.Add("intTotal", "intTotal");
            tableMapping.ColumnMappings.Add("intLabTested", "intLabTested");
            tableMapping.ColumnMappings.Add("intLabConfirmed", "intLabConfirmed");
            tableMapping.ColumnMappings.Add("intTotalConfirmed", "intTotalConfirmed");
            tableMapping.ColumnMappings.Add("strNameOfRespondent", "strNameOfRespondent");
            tableMapping.ColumnMappings.Add("strActualAddress", "strActualAddress");
            tableMapping.ColumnMappings.Add("strTelephone", "strTelephone");
            tableMapping.ColumnMappings.Add("intOrder", "intOrder");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=(local);Initial Catalog=EIDSSv3_old;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRepHumAnnualInfectiousDisease";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RayonID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiteID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InfectiousDiseaseDataSet.spRepHumAnnualInfectiousDiseaseDataTable dataTable, string LangID, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> FinishDate, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> SiteID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FinishDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(FinishDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SiteID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(SiteID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InfectiousDiseaseDataSet.spRepHumAnnualInfectiousDiseaseDataTable GetData(string LangID, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> FinishDate, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> SiteID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FinishDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(FinishDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SiteID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(SiteID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            InfectiousDiseaseDataSet.spRepHumAnnualInfectiousDiseaseDataTable dataTable = new InfectiousDiseaseDataSet.spRepHumAnnualInfectiousDiseaseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591