//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EIDSS.Reports.Parameterized.Human.AJ.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VetForm1ADataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VetForm1ADataSet : global::System.Data.DataSet {
        
        private spRepVetForm1ADiagnosticInvestigationsAZDataTable tablespRepVetForm1ADiagnosticInvestigationsAZ;
        
        private spRepVetForm1AVaccinationMeasuresAZDataTable tablespRepVetForm1AVaccinationMeasuresAZ;
        
        private spRepVetForm1ASanitaryMeasuresAZDataTable tablespRepVetForm1ASanitaryMeasuresAZ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VetForm1ADataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected VetForm1ADataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRepVetForm1ADiagnosticInvestigationsAZ"] != null)) {
                    base.Tables.Add(new spRepVetForm1ADiagnosticInvestigationsAZDataTable(ds.Tables["spRepVetForm1ADiagnosticInvestigationsAZ"]));
                }
                if ((ds.Tables["spRepVetForm1AVaccinationMeasuresAZ"] != null)) {
                    base.Tables.Add(new spRepVetForm1AVaccinationMeasuresAZDataTable(ds.Tables["spRepVetForm1AVaccinationMeasuresAZ"]));
                }
                if ((ds.Tables["spRepVetForm1ASanitaryMeasuresAZ"] != null)) {
                    base.Tables.Add(new spRepVetForm1ASanitaryMeasuresAZDataTable(ds.Tables["spRepVetForm1ASanitaryMeasuresAZ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRepVetForm1ADiagnosticInvestigationsAZDataTable spRepVetForm1ADiagnosticInvestigationsAZ {
            get {
                return this.tablespRepVetForm1ADiagnosticInvestigationsAZ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRepVetForm1AVaccinationMeasuresAZDataTable spRepVetForm1AVaccinationMeasuresAZ {
            get {
                return this.tablespRepVetForm1AVaccinationMeasuresAZ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRepVetForm1ASanitaryMeasuresAZDataTable spRepVetForm1ASanitaryMeasuresAZ {
            get {
                return this.tablespRepVetForm1ASanitaryMeasuresAZ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            VetForm1ADataSet cln = ((VetForm1ADataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRepVetForm1ADiagnosticInvestigationsAZ"] != null)) {
                    base.Tables.Add(new spRepVetForm1ADiagnosticInvestigationsAZDataTable(ds.Tables["spRepVetForm1ADiagnosticInvestigationsAZ"]));
                }
                if ((ds.Tables["spRepVetForm1AVaccinationMeasuresAZ"] != null)) {
                    base.Tables.Add(new spRepVetForm1AVaccinationMeasuresAZDataTable(ds.Tables["spRepVetForm1AVaccinationMeasuresAZ"]));
                }
                if ((ds.Tables["spRepVetForm1ASanitaryMeasuresAZ"] != null)) {
                    base.Tables.Add(new spRepVetForm1ASanitaryMeasuresAZDataTable(ds.Tables["spRepVetForm1ASanitaryMeasuresAZ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRepVetForm1ADiagnosticInvestigationsAZ = ((spRepVetForm1ADiagnosticInvestigationsAZDataTable)(base.Tables["spRepVetForm1ADiagnosticInvestigationsAZ"]));
            if ((initTable == true)) {
                if ((this.tablespRepVetForm1ADiagnosticInvestigationsAZ != null)) {
                    this.tablespRepVetForm1ADiagnosticInvestigationsAZ.InitVars();
                }
            }
            this.tablespRepVetForm1AVaccinationMeasuresAZ = ((spRepVetForm1AVaccinationMeasuresAZDataTable)(base.Tables["spRepVetForm1AVaccinationMeasuresAZ"]));
            if ((initTable == true)) {
                if ((this.tablespRepVetForm1AVaccinationMeasuresAZ != null)) {
                    this.tablespRepVetForm1AVaccinationMeasuresAZ.InitVars();
                }
            }
            this.tablespRepVetForm1ASanitaryMeasuresAZ = ((spRepVetForm1ASanitaryMeasuresAZDataTable)(base.Tables["spRepVetForm1ASanitaryMeasuresAZ"]));
            if ((initTable == true)) {
                if ((this.tablespRepVetForm1ASanitaryMeasuresAZ != null)) {
                    this.tablespRepVetForm1ASanitaryMeasuresAZ.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "VetForm1ADataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VetForm1ADataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRepVetForm1ADiagnosticInvestigationsAZ = new spRepVetForm1ADiagnosticInvestigationsAZDataTable();
            base.Tables.Add(this.tablespRepVetForm1ADiagnosticInvestigationsAZ);
            this.tablespRepVetForm1AVaccinationMeasuresAZ = new spRepVetForm1AVaccinationMeasuresAZDataTable();
            base.Tables.Add(this.tablespRepVetForm1AVaccinationMeasuresAZ);
            this.tablespRepVetForm1ASanitaryMeasuresAZ = new spRepVetForm1ASanitaryMeasuresAZDataTable();
            base.Tables.Add(this.tablespRepVetForm1ASanitaryMeasuresAZ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRepVetForm1ADiagnosticInvestigationsAZ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRepVetForm1AVaccinationMeasuresAZ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRepVetForm1ASanitaryMeasuresAZ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VetForm1ADataSet ds = new VetForm1ADataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRepVetForm1ADiagnosticInvestigationsAZRowChangeEventHandler(object sender, spRepVetForm1ADiagnosticInvestigationsAZRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRepVetForm1AVaccinationMeasuresAZRowChangeEventHandler(object sender, spRepVetForm1AVaccinationMeasuresAZRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRepVetForm1ASanitaryMeasuresAZRowChangeEventHandler(object sender, spRepVetForm1ASanitaryMeasuresAZRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRepVetForm1ADiagnosticInvestigationsAZDataTable : global::System.Data.TypedTableBase<spRepVetForm1ADiagnosticInvestigationsAZRow> {
            
            private global::System.Data.DataColumn columnstrDiagnosisSpeciesKey;
            
            private global::System.Data.DataColumn columnstrInvestigationName;
            
            private global::System.Data.DataColumn columnidfsDiagnosis;
            
            private global::System.Data.DataColumn columnidfsDiagnosticAction;
            
            private global::System.Data.DataColumn columnidfsSpeciesType;
            
            private global::System.Data.DataColumn columnstrDiagnosisName;
            
            private global::System.Data.DataColumn columnstrOIECode;
            
            private global::System.Data.DataColumn columnstrSpecies;
            
            private global::System.Data.DataColumn columnstrHeaderSentBy;
            
            private global::System.Data.DataColumn columnstrFooterPerformer;
            
            private global::System.Data.DataColumn columnintTested;
            
            private global::System.Data.DataColumn columnintPositivaReaction;
            
            private global::System.Data.DataColumn columnstrNote;
            
            private global::System.Data.DataColumn columnInvestigationOrderColumn;
            
            private global::System.Data.DataColumn columnSpeciesOrderColumn;
            
            private global::System.Data.DataColumn columnDiagnosisOrderColumn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ADiagnosticInvestigationsAZDataTable() {
                this.TableName = "spRepVetForm1ADiagnosticInvestigationsAZ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepVetForm1ADiagnosticInvestigationsAZDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRepVetForm1ADiagnosticInvestigationsAZDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDiagnosisSpeciesKeyColumn {
                get {
                    return this.columnstrDiagnosisSpeciesKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strInvestigationNameColumn {
                get {
                    return this.columnstrInvestigationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsDiagnosisColumn {
                get {
                    return this.columnidfsDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsDiagnosticActionColumn {
                get {
                    return this.columnidfsDiagnosticAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsSpeciesTypeColumn {
                get {
                    return this.columnidfsSpeciesType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDiagnosisNameColumn {
                get {
                    return this.columnstrDiagnosisName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOIECodeColumn {
                get {
                    return this.columnstrOIECode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strSpeciesColumn {
                get {
                    return this.columnstrSpecies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strHeaderSentByColumn {
                get {
                    return this.columnstrHeaderSentBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strFooterPerformerColumn {
                get {
                    return this.columnstrFooterPerformer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intTestedColumn {
                get {
                    return this.columnintTested;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intPositivaReactionColumn {
                get {
                    return this.columnintPositivaReaction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNoteColumn {
                get {
                    return this.columnstrNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvestigationOrderColumnColumn {
                get {
                    return this.columnInvestigationOrderColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpeciesOrderColumnColumn {
                get {
                    return this.columnSpeciesOrderColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisOrderColumnColumn {
                get {
                    return this.columnDiagnosisOrderColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ADiagnosticInvestigationsAZRow this[int index] {
                get {
                    return ((spRepVetForm1ADiagnosticInvestigationsAZRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ADiagnosticInvestigationsAZRowChangeEventHandler spRepVetForm1ADiagnosticInvestigationsAZRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ADiagnosticInvestigationsAZRowChangeEventHandler spRepVetForm1ADiagnosticInvestigationsAZRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ADiagnosticInvestigationsAZRowChangeEventHandler spRepVetForm1ADiagnosticInvestigationsAZRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ADiagnosticInvestigationsAZRowChangeEventHandler spRepVetForm1ADiagnosticInvestigationsAZRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRepVetForm1ADiagnosticInvestigationsAZRow(spRepVetForm1ADiagnosticInvestigationsAZRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ADiagnosticInvestigationsAZRow AddspRepVetForm1ADiagnosticInvestigationsAZRow(
                        string strDiagnosisSpeciesKey, 
                        string strInvestigationName, 
                        long idfsDiagnosis, 
                        long idfsDiagnosticAction, 
                        long idfsSpeciesType, 
                        string strDiagnosisName, 
                        string strOIECode, 
                        string strSpecies, 
                        string strHeaderSentBy, 
                        string strFooterPerformer, 
                        int intTested, 
                        int intPositivaReaction, 
                        string strNote, 
                        int InvestigationOrderColumn, 
                        int SpeciesOrderColumn, 
                        int DiagnosisOrderColumn) {
                spRepVetForm1ADiagnosticInvestigationsAZRow rowspRepVetForm1ADiagnosticInvestigationsAZRow = ((spRepVetForm1ADiagnosticInvestigationsAZRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strDiagnosisSpeciesKey,
                        strInvestigationName,
                        idfsDiagnosis,
                        idfsDiagnosticAction,
                        idfsSpeciesType,
                        strDiagnosisName,
                        strOIECode,
                        strSpecies,
                        strHeaderSentBy,
                        strFooterPerformer,
                        intTested,
                        intPositivaReaction,
                        strNote,
                        InvestigationOrderColumn,
                        SpeciesOrderColumn,
                        DiagnosisOrderColumn};
                rowspRepVetForm1ADiagnosticInvestigationsAZRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRepVetForm1ADiagnosticInvestigationsAZRow);
                return rowspRepVetForm1ADiagnosticInvestigationsAZRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ADiagnosticInvestigationsAZRow FindBystrDiagnosisSpeciesKey(string strDiagnosisSpeciesKey) {
                return ((spRepVetForm1ADiagnosticInvestigationsAZRow)(this.Rows.Find(new object[] {
                            strDiagnosisSpeciesKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRepVetForm1ADiagnosticInvestigationsAZDataTable cln = ((spRepVetForm1ADiagnosticInvestigationsAZDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRepVetForm1ADiagnosticInvestigationsAZDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrDiagnosisSpeciesKey = base.Columns["strDiagnosisSpeciesKey"];
                this.columnstrInvestigationName = base.Columns["strInvestigationName"];
                this.columnidfsDiagnosis = base.Columns["idfsDiagnosis"];
                this.columnidfsDiagnosticAction = base.Columns["idfsDiagnosticAction"];
                this.columnidfsSpeciesType = base.Columns["idfsSpeciesType"];
                this.columnstrDiagnosisName = base.Columns["strDiagnosisName"];
                this.columnstrOIECode = base.Columns["strOIECode"];
                this.columnstrSpecies = base.Columns["strSpecies"];
                this.columnstrHeaderSentBy = base.Columns["strHeaderSentBy"];
                this.columnstrFooterPerformer = base.Columns["strFooterPerformer"];
                this.columnintTested = base.Columns["intTested"];
                this.columnintPositivaReaction = base.Columns["intPositivaReaction"];
                this.columnstrNote = base.Columns["strNote"];
                this.columnInvestigationOrderColumn = base.Columns["InvestigationOrderColumn"];
                this.columnSpeciesOrderColumn = base.Columns["SpeciesOrderColumn"];
                this.columnDiagnosisOrderColumn = base.Columns["DiagnosisOrderColumn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrDiagnosisSpeciesKey = new global::System.Data.DataColumn("strDiagnosisSpeciesKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDiagnosisSpeciesKey);
                this.columnstrInvestigationName = new global::System.Data.DataColumn("strInvestigationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrInvestigationName);
                this.columnidfsDiagnosis = new global::System.Data.DataColumn("idfsDiagnosis", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsDiagnosis);
                this.columnidfsDiagnosticAction = new global::System.Data.DataColumn("idfsDiagnosticAction", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsDiagnosticAction);
                this.columnidfsSpeciesType = new global::System.Data.DataColumn("idfsSpeciesType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsSpeciesType);
                this.columnstrDiagnosisName = new global::System.Data.DataColumn("strDiagnosisName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDiagnosisName);
                this.columnstrOIECode = new global::System.Data.DataColumn("strOIECode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOIECode);
                this.columnstrSpecies = new global::System.Data.DataColumn("strSpecies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrSpecies);
                this.columnstrHeaderSentBy = new global::System.Data.DataColumn("strHeaderSentBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHeaderSentBy);
                this.columnstrFooterPerformer = new global::System.Data.DataColumn("strFooterPerformer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrFooterPerformer);
                this.columnintTested = new global::System.Data.DataColumn("intTested", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintTested);
                this.columnintPositivaReaction = new global::System.Data.DataColumn("intPositivaReaction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintPositivaReaction);
                this.columnstrNote = new global::System.Data.DataColumn("strNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNote);
                this.columnInvestigationOrderColumn = new global::System.Data.DataColumn("InvestigationOrderColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestigationOrderColumn);
                this.columnSpeciesOrderColumn = new global::System.Data.DataColumn("SpeciesOrderColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeciesOrderColumn);
                this.columnDiagnosisOrderColumn = new global::System.Data.DataColumn("DiagnosisOrderColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisOrderColumn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstrDiagnosisSpeciesKey}, true));
                this.columnstrDiagnosisSpeciesKey.AllowDBNull = false;
                this.columnstrDiagnosisSpeciesKey.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ADiagnosticInvestigationsAZRow NewspRepVetForm1ADiagnosticInvestigationsAZRow() {
                return ((spRepVetForm1ADiagnosticInvestigationsAZRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRepVetForm1ADiagnosticInvestigationsAZRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRepVetForm1ADiagnosticInvestigationsAZRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRepVetForm1ADiagnosticInvestigationsAZRowChanged != null)) {
                    this.spRepVetForm1ADiagnosticInvestigationsAZRowChanged(this, new spRepVetForm1ADiagnosticInvestigationsAZRowChangeEvent(((spRepVetForm1ADiagnosticInvestigationsAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRepVetForm1ADiagnosticInvestigationsAZRowChanging != null)) {
                    this.spRepVetForm1ADiagnosticInvestigationsAZRowChanging(this, new spRepVetForm1ADiagnosticInvestigationsAZRowChangeEvent(((spRepVetForm1ADiagnosticInvestigationsAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRepVetForm1ADiagnosticInvestigationsAZRowDeleted != null)) {
                    this.spRepVetForm1ADiagnosticInvestigationsAZRowDeleted(this, new spRepVetForm1ADiagnosticInvestigationsAZRowChangeEvent(((spRepVetForm1ADiagnosticInvestigationsAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRepVetForm1ADiagnosticInvestigationsAZRowDeleting != null)) {
                    this.spRepVetForm1ADiagnosticInvestigationsAZRowDeleting(this, new spRepVetForm1ADiagnosticInvestigationsAZRowChangeEvent(((spRepVetForm1ADiagnosticInvestigationsAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRepVetForm1ADiagnosticInvestigationsAZRow(spRepVetForm1ADiagnosticInvestigationsAZRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VetForm1ADataSet ds = new VetForm1ADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRepVetForm1ADiagnosticInvestigationsAZDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRepVetForm1AVaccinationMeasuresAZDataTable : global::System.Data.TypedTableBase<spRepVetForm1AVaccinationMeasuresAZRow> {
            
            private global::System.Data.DataColumn columnstrDiagnosisSpeciesKey;
            
            private global::System.Data.DataColumn columnstrMeasureName;
            
            private global::System.Data.DataColumn columnidfsDiagnosis;
            
            private global::System.Data.DataColumn columnidfsProphylacticAction;
            
            private global::System.Data.DataColumn columnidfsSpeciesType;
            
            private global::System.Data.DataColumn columnstrDiagnosisName;
            
            private global::System.Data.DataColumn columnstrOIECode;
            
            private global::System.Data.DataColumn columnstrSpecies;
            
            private global::System.Data.DataColumn columnintActionTaken;
            
            private global::System.Data.DataColumn columnstrNote;
            
            private global::System.Data.DataColumn columnInvestigationOrderColumn;
            
            private global::System.Data.DataColumn columnSpeciesOrderColumn;
            
            private global::System.Data.DataColumn columnDiagnosisOrderColumn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1AVaccinationMeasuresAZDataTable() {
                this.TableName = "spRepVetForm1AVaccinationMeasuresAZ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepVetForm1AVaccinationMeasuresAZDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRepVetForm1AVaccinationMeasuresAZDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDiagnosisSpeciesKeyColumn {
                get {
                    return this.columnstrDiagnosisSpeciesKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strMeasureNameColumn {
                get {
                    return this.columnstrMeasureName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsDiagnosisColumn {
                get {
                    return this.columnidfsDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsProphylacticActionColumn {
                get {
                    return this.columnidfsProphylacticAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsSpeciesTypeColumn {
                get {
                    return this.columnidfsSpeciesType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDiagnosisNameColumn {
                get {
                    return this.columnstrDiagnosisName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOIECodeColumn {
                get {
                    return this.columnstrOIECode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strSpeciesColumn {
                get {
                    return this.columnstrSpecies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intActionTakenColumn {
                get {
                    return this.columnintActionTaken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNoteColumn {
                get {
                    return this.columnstrNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvestigationOrderColumnColumn {
                get {
                    return this.columnInvestigationOrderColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpeciesOrderColumnColumn {
                get {
                    return this.columnSpeciesOrderColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisOrderColumnColumn {
                get {
                    return this.columnDiagnosisOrderColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1AVaccinationMeasuresAZRow this[int index] {
                get {
                    return ((spRepVetForm1AVaccinationMeasuresAZRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1AVaccinationMeasuresAZRowChangeEventHandler spRepVetForm1AVaccinationMeasuresAZRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1AVaccinationMeasuresAZRowChangeEventHandler spRepVetForm1AVaccinationMeasuresAZRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1AVaccinationMeasuresAZRowChangeEventHandler spRepVetForm1AVaccinationMeasuresAZRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1AVaccinationMeasuresAZRowChangeEventHandler spRepVetForm1AVaccinationMeasuresAZRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRepVetForm1AVaccinationMeasuresAZRow(spRepVetForm1AVaccinationMeasuresAZRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1AVaccinationMeasuresAZRow AddspRepVetForm1AVaccinationMeasuresAZRow(string strDiagnosisSpeciesKey, string strMeasureName, long idfsDiagnosis, long idfsProphylacticAction, long idfsSpeciesType, string strDiagnosisName, string strOIECode, string strSpecies, int intActionTaken, string strNote, int InvestigationOrderColumn, int SpeciesOrderColumn, int DiagnosisOrderColumn) {
                spRepVetForm1AVaccinationMeasuresAZRow rowspRepVetForm1AVaccinationMeasuresAZRow = ((spRepVetForm1AVaccinationMeasuresAZRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strDiagnosisSpeciesKey,
                        strMeasureName,
                        idfsDiagnosis,
                        idfsProphylacticAction,
                        idfsSpeciesType,
                        strDiagnosisName,
                        strOIECode,
                        strSpecies,
                        intActionTaken,
                        strNote,
                        InvestigationOrderColumn,
                        SpeciesOrderColumn,
                        DiagnosisOrderColumn};
                rowspRepVetForm1AVaccinationMeasuresAZRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRepVetForm1AVaccinationMeasuresAZRow);
                return rowspRepVetForm1AVaccinationMeasuresAZRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1AVaccinationMeasuresAZRow FindBystrDiagnosisSpeciesKey(string strDiagnosisSpeciesKey) {
                return ((spRepVetForm1AVaccinationMeasuresAZRow)(this.Rows.Find(new object[] {
                            strDiagnosisSpeciesKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRepVetForm1AVaccinationMeasuresAZDataTable cln = ((spRepVetForm1AVaccinationMeasuresAZDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRepVetForm1AVaccinationMeasuresAZDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrDiagnosisSpeciesKey = base.Columns["strDiagnosisSpeciesKey"];
                this.columnstrMeasureName = base.Columns["strMeasureName"];
                this.columnidfsDiagnosis = base.Columns["idfsDiagnosis"];
                this.columnidfsProphylacticAction = base.Columns["idfsProphylacticAction"];
                this.columnidfsSpeciesType = base.Columns["idfsSpeciesType"];
                this.columnstrDiagnosisName = base.Columns["strDiagnosisName"];
                this.columnstrOIECode = base.Columns["strOIECode"];
                this.columnstrSpecies = base.Columns["strSpecies"];
                this.columnintActionTaken = base.Columns["intActionTaken"];
                this.columnstrNote = base.Columns["strNote"];
                this.columnInvestigationOrderColumn = base.Columns["InvestigationOrderColumn"];
                this.columnSpeciesOrderColumn = base.Columns["SpeciesOrderColumn"];
                this.columnDiagnosisOrderColumn = base.Columns["DiagnosisOrderColumn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrDiagnosisSpeciesKey = new global::System.Data.DataColumn("strDiagnosisSpeciesKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDiagnosisSpeciesKey);
                this.columnstrMeasureName = new global::System.Data.DataColumn("strMeasureName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrMeasureName);
                this.columnidfsDiagnosis = new global::System.Data.DataColumn("idfsDiagnosis", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsDiagnosis);
                this.columnidfsProphylacticAction = new global::System.Data.DataColumn("idfsProphylacticAction", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsProphylacticAction);
                this.columnidfsSpeciesType = new global::System.Data.DataColumn("idfsSpeciesType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsSpeciesType);
                this.columnstrDiagnosisName = new global::System.Data.DataColumn("strDiagnosisName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDiagnosisName);
                this.columnstrOIECode = new global::System.Data.DataColumn("strOIECode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOIECode);
                this.columnstrSpecies = new global::System.Data.DataColumn("strSpecies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrSpecies);
                this.columnintActionTaken = new global::System.Data.DataColumn("intActionTaken", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintActionTaken);
                this.columnstrNote = new global::System.Data.DataColumn("strNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNote);
                this.columnInvestigationOrderColumn = new global::System.Data.DataColumn("InvestigationOrderColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestigationOrderColumn);
                this.columnSpeciesOrderColumn = new global::System.Data.DataColumn("SpeciesOrderColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeciesOrderColumn);
                this.columnDiagnosisOrderColumn = new global::System.Data.DataColumn("DiagnosisOrderColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisOrderColumn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstrDiagnosisSpeciesKey}, true));
                this.columnstrDiagnosisSpeciesKey.AllowDBNull = false;
                this.columnstrDiagnosisSpeciesKey.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1AVaccinationMeasuresAZRow NewspRepVetForm1AVaccinationMeasuresAZRow() {
                return ((spRepVetForm1AVaccinationMeasuresAZRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRepVetForm1AVaccinationMeasuresAZRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRepVetForm1AVaccinationMeasuresAZRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRepVetForm1AVaccinationMeasuresAZRowChanged != null)) {
                    this.spRepVetForm1AVaccinationMeasuresAZRowChanged(this, new spRepVetForm1AVaccinationMeasuresAZRowChangeEvent(((spRepVetForm1AVaccinationMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRepVetForm1AVaccinationMeasuresAZRowChanging != null)) {
                    this.spRepVetForm1AVaccinationMeasuresAZRowChanging(this, new spRepVetForm1AVaccinationMeasuresAZRowChangeEvent(((spRepVetForm1AVaccinationMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRepVetForm1AVaccinationMeasuresAZRowDeleted != null)) {
                    this.spRepVetForm1AVaccinationMeasuresAZRowDeleted(this, new spRepVetForm1AVaccinationMeasuresAZRowChangeEvent(((spRepVetForm1AVaccinationMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRepVetForm1AVaccinationMeasuresAZRowDeleting != null)) {
                    this.spRepVetForm1AVaccinationMeasuresAZRowDeleting(this, new spRepVetForm1AVaccinationMeasuresAZRowChangeEvent(((spRepVetForm1AVaccinationMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRepVetForm1AVaccinationMeasuresAZRow(spRepVetForm1AVaccinationMeasuresAZRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VetForm1ADataSet ds = new VetForm1ADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRepVetForm1AVaccinationMeasuresAZDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRepVetForm1ASanitaryMeasuresAZDataTable : global::System.Data.TypedTableBase<spRepVetForm1ASanitaryMeasuresAZRow> {
            
            private global::System.Data.DataColumn columnstrKey;
            
            private global::System.Data.DataColumn columnstrMeasureName;
            
            private global::System.Data.DataColumn columnSanitaryMeasureOrderColumn;
            
            private global::System.Data.DataColumn columnintNumberFacilities;
            
            private global::System.Data.DataColumn columnintSquare;
            
            private global::System.Data.DataColumn columnstrNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ASanitaryMeasuresAZDataTable() {
                this.TableName = "spRepVetForm1ASanitaryMeasuresAZ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepVetForm1ASanitaryMeasuresAZDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRepVetForm1ASanitaryMeasuresAZDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strKeyColumn {
                get {
                    return this.columnstrKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strMeasureNameColumn {
                get {
                    return this.columnstrMeasureName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SanitaryMeasureOrderColumnColumn {
                get {
                    return this.columnSanitaryMeasureOrderColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intNumberFacilitiesColumn {
                get {
                    return this.columnintNumberFacilities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intSquareColumn {
                get {
                    return this.columnintSquare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNoteColumn {
                get {
                    return this.columnstrNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ASanitaryMeasuresAZRow this[int index] {
                get {
                    return ((spRepVetForm1ASanitaryMeasuresAZRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ASanitaryMeasuresAZRowChangeEventHandler spRepVetForm1ASanitaryMeasuresAZRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ASanitaryMeasuresAZRowChangeEventHandler spRepVetForm1ASanitaryMeasuresAZRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ASanitaryMeasuresAZRowChangeEventHandler spRepVetForm1ASanitaryMeasuresAZRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRepVetForm1ASanitaryMeasuresAZRowChangeEventHandler spRepVetForm1ASanitaryMeasuresAZRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRepVetForm1ASanitaryMeasuresAZRow(spRepVetForm1ASanitaryMeasuresAZRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ASanitaryMeasuresAZRow AddspRepVetForm1ASanitaryMeasuresAZRow(string strKey, string strMeasureName, int SanitaryMeasureOrderColumn, int intNumberFacilities, double intSquare, string strNote) {
                spRepVetForm1ASanitaryMeasuresAZRow rowspRepVetForm1ASanitaryMeasuresAZRow = ((spRepVetForm1ASanitaryMeasuresAZRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strKey,
                        strMeasureName,
                        SanitaryMeasureOrderColumn,
                        intNumberFacilities,
                        intSquare,
                        strNote};
                rowspRepVetForm1ASanitaryMeasuresAZRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRepVetForm1ASanitaryMeasuresAZRow);
                return rowspRepVetForm1ASanitaryMeasuresAZRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ASanitaryMeasuresAZRow FindBystrKey(string strKey) {
                return ((spRepVetForm1ASanitaryMeasuresAZRow)(this.Rows.Find(new object[] {
                            strKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRepVetForm1ASanitaryMeasuresAZDataTable cln = ((spRepVetForm1ASanitaryMeasuresAZDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRepVetForm1ASanitaryMeasuresAZDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrKey = base.Columns["strKey"];
                this.columnstrMeasureName = base.Columns["strMeasureName"];
                this.columnSanitaryMeasureOrderColumn = base.Columns["SanitaryMeasureOrderColumn"];
                this.columnintNumberFacilities = base.Columns["intNumberFacilities"];
                this.columnintSquare = base.Columns["intSquare"];
                this.columnstrNote = base.Columns["strNote"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrKey = new global::System.Data.DataColumn("strKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrKey);
                this.columnstrMeasureName = new global::System.Data.DataColumn("strMeasureName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrMeasureName);
                this.columnSanitaryMeasureOrderColumn = new global::System.Data.DataColumn("SanitaryMeasureOrderColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSanitaryMeasureOrderColumn);
                this.columnintNumberFacilities = new global::System.Data.DataColumn("intNumberFacilities", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintNumberFacilities);
                this.columnintSquare = new global::System.Data.DataColumn("intSquare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintSquare);
                this.columnstrNote = new global::System.Data.DataColumn("strNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNote);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstrKey}, true));
                this.columnstrKey.AllowDBNull = false;
                this.columnstrKey.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ASanitaryMeasuresAZRow NewspRepVetForm1ASanitaryMeasuresAZRow() {
                return ((spRepVetForm1ASanitaryMeasuresAZRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRepVetForm1ASanitaryMeasuresAZRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRepVetForm1ASanitaryMeasuresAZRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRepVetForm1ASanitaryMeasuresAZRowChanged != null)) {
                    this.spRepVetForm1ASanitaryMeasuresAZRowChanged(this, new spRepVetForm1ASanitaryMeasuresAZRowChangeEvent(((spRepVetForm1ASanitaryMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRepVetForm1ASanitaryMeasuresAZRowChanging != null)) {
                    this.spRepVetForm1ASanitaryMeasuresAZRowChanging(this, new spRepVetForm1ASanitaryMeasuresAZRowChangeEvent(((spRepVetForm1ASanitaryMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRepVetForm1ASanitaryMeasuresAZRowDeleted != null)) {
                    this.spRepVetForm1ASanitaryMeasuresAZRowDeleted(this, new spRepVetForm1ASanitaryMeasuresAZRowChangeEvent(((spRepVetForm1ASanitaryMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRepVetForm1ASanitaryMeasuresAZRowDeleting != null)) {
                    this.spRepVetForm1ASanitaryMeasuresAZRowDeleting(this, new spRepVetForm1ASanitaryMeasuresAZRowChangeEvent(((spRepVetForm1ASanitaryMeasuresAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRepVetForm1ASanitaryMeasuresAZRow(spRepVetForm1ASanitaryMeasuresAZRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VetForm1ADataSet ds = new VetForm1ADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRepVetForm1ASanitaryMeasuresAZDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRepVetForm1ADiagnosticInvestigationsAZRow : global::System.Data.DataRow {
            
            private spRepVetForm1ADiagnosticInvestigationsAZDataTable tablespRepVetForm1ADiagnosticInvestigationsAZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepVetForm1ADiagnosticInvestigationsAZRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRepVetForm1ADiagnosticInvestigationsAZ = ((spRepVetForm1ADiagnosticInvestigationsAZDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDiagnosisSpeciesKey {
                get {
                    return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strDiagnosisSpeciesKeyColumn]));
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strDiagnosisSpeciesKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strInvestigationName {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strInvestigationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strInvestigationName\' in table \'spRepVetForm1ADiagnosticInv" +
                                "estigationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strInvestigationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsDiagnosis {
                get {
                    try {
                        return ((long)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsDiagnosis\' in table \'spRepVetForm1ADiagnosticInvestigat" +
                                "ionsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsDiagnosticAction {
                get {
                    try {
                        return ((long)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosticActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsDiagnosticAction\' in table \'spRepVetForm1ADiagnosticInv" +
                                "estigationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosticActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsSpeciesType {
                get {
                    try {
                        return ((long)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsSpeciesTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsSpeciesType\' in table \'spRepVetForm1ADiagnosticInvestig" +
                                "ationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsSpeciesTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDiagnosisName {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strDiagnosisNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strDiagnosisName\' in table \'spRepVetForm1ADiagnosticInvesti" +
                                "gationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strDiagnosisNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOIECode {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strOIECodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strOIECode\' in table \'spRepVetForm1ADiagnosticInvestigation" +
                                "sAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strOIECodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strSpecies {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strSpeciesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strSpecies\' in table \'spRepVetForm1ADiagnosticInvestigation" +
                                "sAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strSpeciesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strHeaderSentBy {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strHeaderSentByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strHeaderSentBy\' in table \'spRepVetForm1ADiagnosticInvestig" +
                                "ationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strHeaderSentByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strFooterPerformer {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strFooterPerformerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strFooterPerformer\' in table \'spRepVetForm1ADiagnosticInves" +
                                "tigationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strFooterPerformerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intTested {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intTestedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intTested\' in table \'spRepVetForm1ADiagnosticInvestigations" +
                                "AZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intTestedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intPositivaReaction {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intPositivaReactionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intPositivaReaction\' in table \'spRepVetForm1ADiagnosticInve" +
                                "stigationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intPositivaReactionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNote {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNote\' in table \'spRepVetForm1ADiagnosticInvestigationsAZ" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvestigationOrderColumn {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.InvestigationOrderColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestigationOrderColumn\' in table \'spRepVetForm1ADiagnosti" +
                                "cInvestigationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.InvestigationOrderColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpeciesOrderColumn {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.SpeciesOrderColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpeciesOrderColumn\' in table \'spRepVetForm1ADiagnosticInves" +
                                "tigationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.SpeciesOrderColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DiagnosisOrderColumn {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.DiagnosisOrderColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisOrderColumn\' in table \'spRepVetForm1ADiagnosticInv" +
                                "estigationsAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.DiagnosisOrderColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrInvestigationNameNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strInvestigationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrInvestigationNameNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strInvestigationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsDiagnosisNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsDiagnosisNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsDiagnosticActionNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosticActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsDiagnosticActionNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsDiagnosticActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsSpeciesTypeNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsSpeciesTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsSpeciesTypeNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.idfsSpeciesTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDiagnosisNameNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strDiagnosisNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDiagnosisNameNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strDiagnosisNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOIECodeNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strOIECodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOIECodeNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strOIECodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrSpeciesNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strSpeciesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrSpeciesNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strSpeciesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrHeaderSentByNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strHeaderSentByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrHeaderSentByNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strHeaderSentByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrFooterPerformerNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strFooterPerformerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrFooterPerformerNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strFooterPerformerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintTestedNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intTestedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintTestedNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intTestedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintPositivaReactionNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intPositivaReactionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintPositivaReactionNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.intPositivaReactionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNoteNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNoteNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.strNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvestigationOrderColumnNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.InvestigationOrderColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvestigationOrderColumnNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.InvestigationOrderColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeciesOrderColumnNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.SpeciesOrderColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeciesOrderColumnNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.SpeciesOrderColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosisOrderColumnNull() {
                return this.IsNull(this.tablespRepVetForm1ADiagnosticInvestigationsAZ.DiagnosisOrderColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosisOrderColumnNull() {
                this[this.tablespRepVetForm1ADiagnosticInvestigationsAZ.DiagnosisOrderColumnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRepVetForm1AVaccinationMeasuresAZRow : global::System.Data.DataRow {
            
            private spRepVetForm1AVaccinationMeasuresAZDataTable tablespRepVetForm1AVaccinationMeasuresAZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepVetForm1AVaccinationMeasuresAZRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRepVetForm1AVaccinationMeasuresAZ = ((spRepVetForm1AVaccinationMeasuresAZDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDiagnosisSpeciesKey {
                get {
                    return ((string)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strDiagnosisSpeciesKeyColumn]));
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strDiagnosisSpeciesKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strMeasureName {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strMeasureNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strMeasureName\' in table \'spRepVetForm1AVaccinationMeasures" +
                                "AZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strMeasureNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsDiagnosis {
                get {
                    try {
                        return ((long)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsDiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsDiagnosis\' in table \'spRepVetForm1AVaccinationMeasuresA" +
                                "Z\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsDiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsProphylacticAction {
                get {
                    try {
                        return ((long)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsProphylacticActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsProphylacticAction\' in table \'spRepVetForm1AVaccination" +
                                "MeasuresAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsProphylacticActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsSpeciesType {
                get {
                    try {
                        return ((long)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsSpeciesTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsSpeciesType\' in table \'spRepVetForm1AVaccinationMeasure" +
                                "sAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsSpeciesTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDiagnosisName {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strDiagnosisNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strDiagnosisName\' in table \'spRepVetForm1AVaccinationMeasur" +
                                "esAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strDiagnosisNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOIECode {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strOIECodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strOIECode\' in table \'spRepVetForm1AVaccinationMeasuresAZ\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strOIECodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strSpecies {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strSpeciesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strSpecies\' in table \'spRepVetForm1AVaccinationMeasuresAZ\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strSpeciesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intActionTaken {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.intActionTakenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intActionTaken\' in table \'spRepVetForm1AVaccinationMeasures" +
                                "AZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.intActionTakenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNote {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNote\' in table \'spRepVetForm1AVaccinationMeasuresAZ\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvestigationOrderColumn {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.InvestigationOrderColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvestigationOrderColumn\' in table \'spRepVetForm1AVaccinati" +
                                "onMeasuresAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.InvestigationOrderColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpeciesOrderColumn {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.SpeciesOrderColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpeciesOrderColumn\' in table \'spRepVetForm1AVaccinationMeas" +
                                "uresAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.SpeciesOrderColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DiagnosisOrderColumn {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1AVaccinationMeasuresAZ.DiagnosisOrderColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisOrderColumn\' in table \'spRepVetForm1AVaccinationMe" +
                                "asuresAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1AVaccinationMeasuresAZ.DiagnosisOrderColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrMeasureNameNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.strMeasureNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrMeasureNameNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strMeasureNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsDiagnosisNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsDiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsDiagnosisNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsDiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsProphylacticActionNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsProphylacticActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsProphylacticActionNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsProphylacticActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsSpeciesTypeNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsSpeciesTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsSpeciesTypeNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.idfsSpeciesTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDiagnosisNameNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.strDiagnosisNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDiagnosisNameNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strDiagnosisNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOIECodeNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.strOIECodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOIECodeNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strOIECodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrSpeciesNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.strSpeciesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrSpeciesNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strSpeciesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintActionTakenNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.intActionTakenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintActionTakenNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.intActionTakenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNoteNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.strNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNoteNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.strNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvestigationOrderColumnNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.InvestigationOrderColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvestigationOrderColumnNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.InvestigationOrderColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpeciesOrderColumnNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.SpeciesOrderColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpeciesOrderColumnNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.SpeciesOrderColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosisOrderColumnNull() {
                return this.IsNull(this.tablespRepVetForm1AVaccinationMeasuresAZ.DiagnosisOrderColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosisOrderColumnNull() {
                this[this.tablespRepVetForm1AVaccinationMeasuresAZ.DiagnosisOrderColumnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRepVetForm1ASanitaryMeasuresAZRow : global::System.Data.DataRow {
            
            private spRepVetForm1ASanitaryMeasuresAZDataTable tablespRepVetForm1ASanitaryMeasuresAZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRepVetForm1ASanitaryMeasuresAZRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRepVetForm1ASanitaryMeasuresAZ = ((spRepVetForm1ASanitaryMeasuresAZDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strKey {
                get {
                    return ((string)(this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strKeyColumn]));
                }
                set {
                    this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strMeasureName {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strMeasureNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strMeasureName\' in table \'spRepVetForm1ASanitaryMeasuresAZ\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strMeasureNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SanitaryMeasureOrderColumn {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1ASanitaryMeasuresAZ.SanitaryMeasureOrderColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SanitaryMeasureOrderColumn\' in table \'spRepVetForm1ASanitar" +
                                "yMeasuresAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ASanitaryMeasuresAZ.SanitaryMeasureOrderColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intNumberFacilities {
                get {
                    try {
                        return ((int)(this[this.tablespRepVetForm1ASanitaryMeasuresAZ.intNumberFacilitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intNumberFacilities\' in table \'spRepVetForm1ASanitaryMeasur" +
                                "esAZ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ASanitaryMeasuresAZ.intNumberFacilitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double intSquare {
                get {
                    try {
                        return ((double)(this[this.tablespRepVetForm1ASanitaryMeasuresAZ.intSquareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intSquare\' in table \'spRepVetForm1ASanitaryMeasuresAZ\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ASanitaryMeasuresAZ.intSquareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNote {
                get {
                    try {
                        return ((string)(this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNote\' in table \'spRepVetForm1ASanitaryMeasuresAZ\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrMeasureNameNull() {
                return this.IsNull(this.tablespRepVetForm1ASanitaryMeasuresAZ.strMeasureNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrMeasureNameNull() {
                this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strMeasureNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSanitaryMeasureOrderColumnNull() {
                return this.IsNull(this.tablespRepVetForm1ASanitaryMeasuresAZ.SanitaryMeasureOrderColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSanitaryMeasureOrderColumnNull() {
                this[this.tablespRepVetForm1ASanitaryMeasuresAZ.SanitaryMeasureOrderColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintNumberFacilitiesNull() {
                return this.IsNull(this.tablespRepVetForm1ASanitaryMeasuresAZ.intNumberFacilitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintNumberFacilitiesNull() {
                this[this.tablespRepVetForm1ASanitaryMeasuresAZ.intNumberFacilitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintSquareNull() {
                return this.IsNull(this.tablespRepVetForm1ASanitaryMeasuresAZ.intSquareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintSquareNull() {
                this[this.tablespRepVetForm1ASanitaryMeasuresAZ.intSquareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNoteNull() {
                return this.IsNull(this.tablespRepVetForm1ASanitaryMeasuresAZ.strNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNoteNull() {
                this[this.tablespRepVetForm1ASanitaryMeasuresAZ.strNoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRepVetForm1ADiagnosticInvestigationsAZRowChangeEvent : global::System.EventArgs {
            
            private spRepVetForm1ADiagnosticInvestigationsAZRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ADiagnosticInvestigationsAZRowChangeEvent(spRepVetForm1ADiagnosticInvestigationsAZRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ADiagnosticInvestigationsAZRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRepVetForm1AVaccinationMeasuresAZRowChangeEvent : global::System.EventArgs {
            
            private spRepVetForm1AVaccinationMeasuresAZRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1AVaccinationMeasuresAZRowChangeEvent(spRepVetForm1AVaccinationMeasuresAZRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1AVaccinationMeasuresAZRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRepVetForm1ASanitaryMeasuresAZRowChangeEvent : global::System.EventArgs {
            
            private spRepVetForm1ASanitaryMeasuresAZRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ASanitaryMeasuresAZRowChangeEvent(spRepVetForm1ASanitaryMeasuresAZRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRepVetForm1ASanitaryMeasuresAZRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EIDSS.Reports.Parameterized.Human.AJ.DataSets.VetForm1ADataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRepVetForm1ADiagnosticInvestigationsAZTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spRepVetForm1ADiagnosticInvestigationsAZTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRepVetForm1ADiagnosticInvestigationsAZ";
            tableMapping.ColumnMappings.Add("strDiagnosisSpeciesKey", "strDiagnosisSpeciesKey");
            tableMapping.ColumnMappings.Add("strInvestigationName", "strInvestigationName");
            tableMapping.ColumnMappings.Add("idfsDiagnosis", "idfsDiagnosis");
            tableMapping.ColumnMappings.Add("idfsDiagnosticAction", "idfsDiagnosticAction");
            tableMapping.ColumnMappings.Add("idfsSpeciesType", "idfsSpeciesType");
            tableMapping.ColumnMappings.Add("strDiagnosisName", "strDiagnosisName");
            tableMapping.ColumnMappings.Add("strOIECode", "strOIECode");
            tableMapping.ColumnMappings.Add("strSpecies", "strSpecies");
            tableMapping.ColumnMappings.Add("strHeaderSentBy", "strHeaderSentBy");
            tableMapping.ColumnMappings.Add("strFooterPerformer", "strFooterPerformer");
            tableMapping.ColumnMappings.Add("intTested", "intTested");
            tableMapping.ColumnMappings.Add("intPositivaReaction", "intPositivaReaction");
            tableMapping.ColumnMappings.Add("strNote", "strNote");
            tableMapping.ColumnMappings.Add("InvestigationOrderColumn", "InvestigationOrderColumn");
            tableMapping.ColumnMappings.Add("SpeciesOrderColumn", "SpeciesOrderColumn");
            tableMapping.ColumnMappings.Add("DiagnosisOrderColumn", "DiagnosisOrderColumn");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EIDSS.Reports.Properties.Settings.Default.eidss_v6ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRepVetForm1ADiagnosticInvestigationsAZ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromMonth", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToMonth", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RayonID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationEntered", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@idfUserID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VetForm1ADataSet.spRepVetForm1ADiagnosticInvestigationsAZDataTable dataTable, string LangID, global::System.Nullable<int> FromYear, global::System.Nullable<int> ToYear, global::System.Nullable<int> FromMonth, global::System.Nullable<int> ToMonth, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> OrganizationEntered, global::System.Nullable<long> OrganizationID, global::System.Nullable<long> idfUserID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((FromYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ToYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(FromMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ToMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OrganizationEntered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((long)(OrganizationEntered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OrganizationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((long)(OrganizationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((idfUserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((long)(idfUserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VetForm1ADataSet.spRepVetForm1ADiagnosticInvestigationsAZDataTable GetData(string LangID, global::System.Nullable<int> FromYear, global::System.Nullable<int> ToYear, global::System.Nullable<int> FromMonth, global::System.Nullable<int> ToMonth, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> OrganizationEntered, global::System.Nullable<long> OrganizationID, global::System.Nullable<long> idfUserID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((FromYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ToYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(FromMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ToMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OrganizationEntered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((long)(OrganizationEntered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OrganizationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((long)(OrganizationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((idfUserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((long)(idfUserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            VetForm1ADataSet.spRepVetForm1ADiagnosticInvestigationsAZDataTable dataTable = new VetForm1ADataSet.spRepVetForm1ADiagnosticInvestigationsAZDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRepVetForm1AVaccinationMeasuresAZTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spRepVetForm1AVaccinationMeasuresAZTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRepVetForm1AVaccinationMeasuresAZ";
            tableMapping.ColumnMappings.Add("strDiagnosisSpeciesKey", "strDiagnosisSpeciesKey");
            tableMapping.ColumnMappings.Add("strMeasureName", "strMeasureName");
            tableMapping.ColumnMappings.Add("idfsDiagnosis", "idfsDiagnosis");
            tableMapping.ColumnMappings.Add("idfsProphylacticAction", "idfsProphylacticAction");
            tableMapping.ColumnMappings.Add("idfsSpeciesType", "idfsSpeciesType");
            tableMapping.ColumnMappings.Add("strDiagnosisName", "strDiagnosisName");
            tableMapping.ColumnMappings.Add("strOIECode", "strOIECode");
            tableMapping.ColumnMappings.Add("strSpecies", "strSpecies");
            tableMapping.ColumnMappings.Add("intActionTaken", "intActionTaken");
            tableMapping.ColumnMappings.Add("strNote", "strNote");
            tableMapping.ColumnMappings.Add("InvestigationOrderColumn", "InvestigationOrderColumn");
            tableMapping.ColumnMappings.Add("SpeciesOrderColumn", "SpeciesOrderColumn");
            tableMapping.ColumnMappings.Add("DiagnosisOrderColumn", "DiagnosisOrderColumn");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EIDSS.Reports.Properties.Settings.Default.eidss_v6ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRepVetForm1AVaccinationMeasuresAZ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromMonth", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToMonth", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RayonID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationEntered", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VetForm1ADataSet.spRepVetForm1AVaccinationMeasuresAZDataTable dataTable, string LangID, global::System.Nullable<int> FromYear, global::System.Nullable<int> ToYear, global::System.Nullable<int> FromMonth, global::System.Nullable<int> ToMonth, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> OrganizationEntered, global::System.Nullable<long> OrganizationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((FromYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ToYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(FromMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ToMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OrganizationEntered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((long)(OrganizationEntered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OrganizationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((long)(OrganizationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VetForm1ADataSet.spRepVetForm1AVaccinationMeasuresAZDataTable GetData(string LangID, global::System.Nullable<int> FromYear, global::System.Nullable<int> ToYear, global::System.Nullable<int> FromMonth, global::System.Nullable<int> ToMonth, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> OrganizationEntered, global::System.Nullable<long> OrganizationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((FromYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ToYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(FromMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ToMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OrganizationEntered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((long)(OrganizationEntered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OrganizationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((long)(OrganizationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            VetForm1ADataSet.spRepVetForm1AVaccinationMeasuresAZDataTable dataTable = new VetForm1ADataSet.spRepVetForm1AVaccinationMeasuresAZDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRepVetForm1ASanitaryMeasuresAZTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spRepVetForm1ASanitaryMeasuresAZTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRepVetForm1ASanitaryMeasuresAZ";
            tableMapping.ColumnMappings.Add("strKey", "strKey");
            tableMapping.ColumnMappings.Add("strMeasureName", "strMeasureName");
            tableMapping.ColumnMappings.Add("SanitaryMeasureOrderColumn", "SanitaryMeasureOrderColumn");
            tableMapping.ColumnMappings.Add("intNumberFacilities", "intNumberFacilities");
            tableMapping.ColumnMappings.Add("intSquare", "intSquare");
            tableMapping.ColumnMappings.Add("strNote", "strNote");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EIDSS.Reports.Properties.Settings.Default.eidss_v6ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRepVetForm1ASanitaryMeasuresAZ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromMonth", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToMonth", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RayonID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationEntered", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VetForm1ADataSet.spRepVetForm1ASanitaryMeasuresAZDataTable dataTable, string LangID, global::System.Nullable<int> FromYear, global::System.Nullable<int> ToYear, global::System.Nullable<int> FromMonth, global::System.Nullable<int> ToMonth, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> OrganizationEntered, global::System.Nullable<long> OrganizationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((FromYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ToYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(FromMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ToMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OrganizationEntered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((long)(OrganizationEntered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OrganizationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((long)(OrganizationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VetForm1ADataSet.spRepVetForm1ASanitaryMeasuresAZDataTable GetData(string LangID, global::System.Nullable<int> FromYear, global::System.Nullable<int> ToYear, global::System.Nullable<int> FromMonth, global::System.Nullable<int> ToMonth, global::System.Nullable<long> RegionID, global::System.Nullable<long> RayonID, global::System.Nullable<long> OrganizationEntered, global::System.Nullable<long> OrganizationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((FromYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ToYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(FromMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToMonth.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ToMonth.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RegionID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(RegionID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RayonID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((long)(RayonID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OrganizationEntered.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((long)(OrganizationEntered.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OrganizationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((long)(OrganizationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            VetForm1ADataSet.spRepVetForm1ASanitaryMeasuresAZDataTable dataTable = new VetForm1ADataSet.spRepVetForm1ASanitaryMeasuresAZDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(VetForm1ADataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(VetForm1ADataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(VetForm1ADataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(VetForm1ADataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591