//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EIDSS.Reports.Parameterized.Veterinary.TestType {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VetTestTypeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VetTestTypeDataSet : global::System.Data.DataSet {
        
        private sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VetTestTypeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected VetTestTypeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRepVetSamplesReportbySampleTypesWithinRegions"] != null)) {
                    base.Tables.Add(new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable(ds.Tables["spRepVetSamplesReportbySampleTypesWithinRegions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable spRepVetSamplesReportbySampleTypesWithinRegions {
            get {
                return this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            VetTestTypeDataSet cln = ((VetTestTypeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRepVetSamplesReportbySampleTypesWithinRegions"] != null)) {
                    base.Tables.Add(new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable(ds.Tables["spRepVetSamplesReportbySampleTypesWithinRegions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions = ((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable)(base.Tables["spRepVetSamplesReportbySampleTypesWithinRegions"]));
            if ((initTable == true)) {
                if ((this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions != null)) {
                    this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "VetTestTypeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VetTestTypeDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions = new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable();
            base.Tables.Add(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRepVetSamplesReportbySampleTypesWithinRegions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VetTestTypeDataSet ds = new VetTestTypeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEventHandler(object sender, sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable : global::System.Data.TypedTableBase<sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow> {
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnDisease;
            
            private global::System.Data.DataColumn columnSampleType;
            
            private global::System.Data.DataColumn columnTestType;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnTotalPR;
            
            private global::System.Data.DataColumn columnJan;
            
            private global::System.Data.DataColumn columnJanPR;
            
            private global::System.Data.DataColumn columnFeb;
            
            private global::System.Data.DataColumn columnFebPR;
            
            private global::System.Data.DataColumn columnMar;
            
            private global::System.Data.DataColumn columnMarPR;
            
            private global::System.Data.DataColumn columnApr;
            
            private global::System.Data.DataColumn columnAprPR;
            
            private global::System.Data.DataColumn columnMay;
            
            private global::System.Data.DataColumn columnMayPR;
            
            private global::System.Data.DataColumn columnJun;
            
            private global::System.Data.DataColumn columnJunPR;
            
            private global::System.Data.DataColumn columnJul;
            
            private global::System.Data.DataColumn columnJulPR;
            
            private global::System.Data.DataColumn columnAugPR;
            
            private global::System.Data.DataColumn columnAug;
            
            private global::System.Data.DataColumn columnSep;
            
            private global::System.Data.DataColumn columnSepPR;
            
            private global::System.Data.DataColumn columnOct;
            
            private global::System.Data.DataColumn columnOctPR;
            
            private global::System.Data.DataColumn columnNov;
            
            private global::System.Data.DataColumn columnNovPR;
            
            private global::System.Data.DataColumn columnDec;
            
            private global::System.Data.DataColumn columnDecPR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable() {
                this.TableName = "spRepVetSamplesReportbySampleTypesWithinRegions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiseaseColumn {
                get {
                    return this.columnDisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleTypeColumn {
                get {
                    return this.columnSampleType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestTypeColumn {
                get {
                    return this.columnTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPRColumn {
                get {
                    return this.columnTotalPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JanColumn {
                get {
                    return this.columnJan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JanPRColumn {
                get {
                    return this.columnJanPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FebColumn {
                get {
                    return this.columnFeb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FebPRColumn {
                get {
                    return this.columnFebPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarColumn {
                get {
                    return this.columnMar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarPRColumn {
                get {
                    return this.columnMarPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AprColumn {
                get {
                    return this.columnApr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AprPRColumn {
                get {
                    return this.columnAprPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MayColumn {
                get {
                    return this.columnMay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MayPRColumn {
                get {
                    return this.columnMayPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JunColumn {
                get {
                    return this.columnJun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JunPRColumn {
                get {
                    return this.columnJunPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JulColumn {
                get {
                    return this.columnJul;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JulPRColumn {
                get {
                    return this.columnJulPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AugPRColumn {
                get {
                    return this.columnAugPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AugColumn {
                get {
                    return this.columnAug;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SepColumn {
                get {
                    return this.columnSep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SepPRColumn {
                get {
                    return this.columnSepPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OctColumn {
                get {
                    return this.columnOct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OctPRColumn {
                get {
                    return this.columnOctPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NovColumn {
                get {
                    return this.columnNov;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NovPRColumn {
                get {
                    return this.columnNovPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DecColumn {
                get {
                    return this.columnDec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DecPRColumn {
                get {
                    return this.columnDecPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow this[int index] {
                get {
                    return ((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEventHandler sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEventHandler sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEventHandler sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEventHandler sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addsp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow(sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow Addsp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow(
                        string Region, 
                        string Disease, 
                        string SampleType, 
                        string TestType, 
                        int Total, 
                        int TotalPR, 
                        int Jan, 
                        int JanPR, 
                        int Feb, 
                        int FebPR, 
                        int Mar, 
                        int MarPR, 
                        int Apr, 
                        int AprPR, 
                        int May, 
                        int MayPR, 
                        int Jun, 
                        int JunPR, 
                        int Jul, 
                        int JulPR, 
                        int AugPR, 
                        int Aug, 
                        int Sep, 
                        int SepPR, 
                        int Oct, 
                        int OctPR, 
                        int Nov, 
                        int NovPR, 
                        int Dec, 
                        int DecPR) {
                sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow rowsp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow = ((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Region,
                        Disease,
                        SampleType,
                        TestType,
                        Total,
                        TotalPR,
                        Jan,
                        JanPR,
                        Feb,
                        FebPR,
                        Mar,
                        MarPR,
                        Apr,
                        AprPR,
                        May,
                        MayPR,
                        Jun,
                        JunPR,
                        Jul,
                        JulPR,
                        AugPR,
                        Aug,
                        Sep,
                        SepPR,
                        Oct,
                        OctPR,
                        Nov,
                        NovPR,
                        Dec,
                        DecPR};
                rowsp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow);
                return rowsp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable cln = ((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRegion = base.Columns["Region"];
                this.columnDisease = base.Columns["Disease"];
                this.columnSampleType = base.Columns["SampleType"];
                this.columnTestType = base.Columns["TestType"];
                this.columnTotal = base.Columns["Total"];
                this.columnTotalPR = base.Columns["TotalPR"];
                this.columnJan = base.Columns["Jan"];
                this.columnJanPR = base.Columns["JanPR"];
                this.columnFeb = base.Columns["Feb"];
                this.columnFebPR = base.Columns["FebPR"];
                this.columnMar = base.Columns["Mar"];
                this.columnMarPR = base.Columns["MarPR"];
                this.columnApr = base.Columns["Apr"];
                this.columnAprPR = base.Columns["AprPR"];
                this.columnMay = base.Columns["May"];
                this.columnMayPR = base.Columns["MayPR"];
                this.columnJun = base.Columns["Jun"];
                this.columnJunPR = base.Columns["JunPR"];
                this.columnJul = base.Columns["Jul"];
                this.columnJulPR = base.Columns["JulPR"];
                this.columnAugPR = base.Columns["AugPR"];
                this.columnAug = base.Columns["Aug"];
                this.columnSep = base.Columns["Sep"];
                this.columnSepPR = base.Columns["SepPR"];
                this.columnOct = base.Columns["Oct"];
                this.columnOctPR = base.Columns["OctPR"];
                this.columnNov = base.Columns["Nov"];
                this.columnNovPR = base.Columns["NovPR"];
                this.columnDec = base.Columns["Dec"];
                this.columnDecPR = base.Columns["DecPR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnDisease = new global::System.Data.DataColumn("Disease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisease);
                this.columnSampleType = new global::System.Data.DataColumn("SampleType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleType);
                this.columnTestType = new global::System.Data.DataColumn("TestType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestType);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnTotalPR = new global::System.Data.DataColumn("TotalPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPR);
                this.columnJan = new global::System.Data.DataColumn("Jan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJan);
                this.columnJanPR = new global::System.Data.DataColumn("JanPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJanPR);
                this.columnFeb = new global::System.Data.DataColumn("Feb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeb);
                this.columnFebPR = new global::System.Data.DataColumn("FebPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFebPR);
                this.columnMar = new global::System.Data.DataColumn("Mar", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMar);
                this.columnMarPR = new global::System.Data.DataColumn("MarPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarPR);
                this.columnApr = new global::System.Data.DataColumn("Apr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApr);
                this.columnAprPR = new global::System.Data.DataColumn("AprPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAprPR);
                this.columnMay = new global::System.Data.DataColumn("May", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMay);
                this.columnMayPR = new global::System.Data.DataColumn("MayPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMayPR);
                this.columnJun = new global::System.Data.DataColumn("Jun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJun);
                this.columnJunPR = new global::System.Data.DataColumn("JunPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJunPR);
                this.columnJul = new global::System.Data.DataColumn("Jul", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJul);
                this.columnJulPR = new global::System.Data.DataColumn("JulPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJulPR);
                this.columnAugPR = new global::System.Data.DataColumn("AugPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAugPR);
                this.columnAug = new global::System.Data.DataColumn("Aug", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAug);
                this.columnSep = new global::System.Data.DataColumn("Sep", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSep);
                this.columnSepPR = new global::System.Data.DataColumn("SepPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSepPR);
                this.columnOct = new global::System.Data.DataColumn("Oct", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOct);
                this.columnOctPR = new global::System.Data.DataColumn("OctPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOctPR);
                this.columnNov = new global::System.Data.DataColumn("Nov", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNov);
                this.columnNovPR = new global::System.Data.DataColumn("NovPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNovPR);
                this.columnDec = new global::System.Data.DataColumn("Dec", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDec);
                this.columnDecPR = new global::System.Data.DataColumn("DecPR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecPR);
                this.columnRegion.MaxLength = 300;
                this.columnDisease.MaxLength = 300;
                this.columnSampleType.MaxLength = 300;
                this.columnTestType.MaxLength = 300;
                this.columnTotal.ReadOnly = true;
                this.columnTotalPR.ReadOnly = true;
                this.columnJan.ReadOnly = true;
                this.columnJanPR.ReadOnly = true;
                this.columnFeb.ReadOnly = true;
                this.columnFebPR.ReadOnly = true;
                this.columnMar.ReadOnly = true;
                this.columnMarPR.ReadOnly = true;
                this.columnApr.ReadOnly = true;
                this.columnAprPR.ReadOnly = true;
                this.columnMay.ReadOnly = true;
                this.columnMayPR.ReadOnly = true;
                this.columnJun.ReadOnly = true;
                this.columnJunPR.ReadOnly = true;
                this.columnJul.ReadOnly = true;
                this.columnJulPR.ReadOnly = true;
                this.columnAugPR.ReadOnly = true;
                this.columnAug.ReadOnly = true;
                this.columnSep.ReadOnly = true;
                this.columnSepPR.ReadOnly = true;
                this.columnOct.ReadOnly = true;
                this.columnOctPR.ReadOnly = true;
                this.columnNov.ReadOnly = true;
                this.columnNovPR.ReadOnly = true;
                this.columnDec.ReadOnly = true;
                this.columnDecPR.ReadOnly = true;
                this.ExtendedProperties.Add("Generator_RowClassName", "sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable");
                this.ExtendedProperties.Add("Generator_TableVarName", "tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions");
                this.ExtendedProperties.Add("Generator_UserTableName", "spRepVetSamplesReportbySampleTypesWithinRegions");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow Newsp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow() {
                return ((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChanged != null)) {
                    this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChanged(this, new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent(((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChanging != null)) {
                    this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChanging(this, new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent(((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowDeleted != null)) {
                    this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowDeleted(this, new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent(((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowDeleting != null)) {
                    this.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowDeleting(this, new sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent(((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removesp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow(sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VetTestTypeDataSet ds = new VetTestTypeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow : global::System.Data.DataRow {
            
            private sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions = ((sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region\' in table \'spRepVetSamplesReportbySampleTypesWithinR" +
                                "egions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Disease {
                get {
                    try {
                        return ((string)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DiseaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disease\' in table \'spRepVetSamplesReportbySampleTypesWithin" +
                                "Regions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampleType {
                get {
                    try {
                        return ((string)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SampleTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleType\' in table \'spRepVetSamplesReportbySampleTypesWit" +
                                "hinRegions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SampleTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TestType {
                get {
                    try {
                        return ((string)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TestTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestType\' in table \'spRepVetSamplesReportbySampleTypesWithi" +
                                "nRegions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPR\' in table \'spRepVetSamplesReportbySampleTypesWithin" +
                                "Regions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Jan {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jan\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JanPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JanPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Feb {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Feb\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FebPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FebPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mar {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mar\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MarPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Apr {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Apr\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AprPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AprPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int May {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'May\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MayPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MayPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Jun {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jun\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JunPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JunPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Jul {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jul\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JulPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JulPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AugPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AugPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Aug {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aug\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Sep {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sep\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SepPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SepPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Oct {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oct\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OctPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OctPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Nov {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nov\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NovPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NovPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Dec {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dec\' in table \'spRepVetSamplesReportbySampleTypesWithinRegi" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DecPR {
                get {
                    try {
                        return ((int)(this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DecPR\' in table \'spRepVetSamplesReportbySampleTypesWithinRe" +
                                "gions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegionNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegionNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiseaseNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DiseaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiseaseNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DiseaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleTypeNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SampleTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleTypeNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SampleTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTestTypeNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TestTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTestTypeNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TestTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.TotalPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJanNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJanNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJanPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJanPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JanPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFebNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFebNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFebPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFebPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.FebPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MarPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAprNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAprNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAprPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAprPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AprPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMayNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMayNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMayPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMayPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.MayPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJunNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJunNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJunPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJunPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JunPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJulNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJulNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJulPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJulPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.JulPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAugPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAugPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAugNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAugNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.AugColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSepNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSepNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSepPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSepPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.SepPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOctNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOctNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOctPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOctPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.OctPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNovNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNovNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNovPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNovPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.NovPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDecNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDecNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDecPRNull() {
                return this.IsNull(this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDecPRNull() {
                this[this.tablesp_rep_VET_SamplesReportbySampleTypesWithinRegions.DecPRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent : global::System.EventArgs {
            
            private sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRowChangeEvent(sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EIDSS.Reports.Parameterized.Veterinary.TestType.VetTestTypeDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sp_rep_VET_SamplesReportbySampleTypesWithinRegionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public sp_rep_VET_SamplesReportbySampleTypesWithinRegionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRepVetSamplesReportbySampleTypesWithinRegions";
            tableMapping.ColumnMappings.Add("Region", "Region");
            tableMapping.ColumnMappings.Add("Disease", "Disease");
            tableMapping.ColumnMappings.Add("SampleType", "SampleType");
            tableMapping.ColumnMappings.Add("TestType", "TestType");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("TotalPR", "TotalPR");
            tableMapping.ColumnMappings.Add("Jan", "Jan");
            tableMapping.ColumnMappings.Add("JanPR", "JanPR");
            tableMapping.ColumnMappings.Add("Feb", "Feb");
            tableMapping.ColumnMappings.Add("FebPR", "FebPR");
            tableMapping.ColumnMappings.Add("Mar", "Mar");
            tableMapping.ColumnMappings.Add("MarPR", "MarPR");
            tableMapping.ColumnMappings.Add("Apr", "Apr");
            tableMapping.ColumnMappings.Add("AprPR", "AprPR");
            tableMapping.ColumnMappings.Add("May", "May");
            tableMapping.ColumnMappings.Add("MayPR", "MayPR");
            tableMapping.ColumnMappings.Add("Jun", "Jun");
            tableMapping.ColumnMappings.Add("JunPR", "JunPR");
            tableMapping.ColumnMappings.Add("Jul", "Jul");
            tableMapping.ColumnMappings.Add("JulPR", "JulPR");
            tableMapping.ColumnMappings.Add("AugPR", "AugPR");
            tableMapping.ColumnMappings.Add("Aug", "Aug");
            tableMapping.ColumnMappings.Add("Sep", "Sep");
            tableMapping.ColumnMappings.Add("SepPR", "SepPR");
            tableMapping.ColumnMappings.Add("Oct", "Oct");
            tableMapping.ColumnMappings.Add("OctPR", "OctPR");
            tableMapping.ColumnMappings.Add("Nov", "Nov");
            tableMapping.ColumnMappings.Add("NovPR", "NovPR");
            tableMapping.ColumnMappings.Add("Dec", "Dec");
            tableMapping.ColumnMappings.Add("DecPR", "DecPR");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRepVetSamplesReportbySampleTypesWithinRegions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Year", global::System.Data.SqlDbType.Int, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VetTestTypeDataSet.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable dataTable, string LANGID, global::System.Nullable<int> Year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LANGID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LANGID));
            }
            if ((Year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VetTestTypeDataSet.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable GetData(string LANGID, global::System.Nullable<int> Year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LANGID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LANGID));
            }
            if ((Year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            VetTestTypeDataSet.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable dataTable = new VetTestTypeDataSet.sp_rep_VET_SamplesReportbySampleTypesWithinRegionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591