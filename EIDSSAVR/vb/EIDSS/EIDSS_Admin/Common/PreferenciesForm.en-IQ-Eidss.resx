<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SerializableAppearanceObject2.Font" type="System.Drawing.Font, System.Drawing">
    <value>Tahoma, 7.8pt</value>
  </data>
  <data name="chkDefaultRegionInSearch.Properties.Caption" xml:space="preserve">
    <value>Default Province in Search Panels</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8A/h//4/8////w==
</value>
  </data>
</root>