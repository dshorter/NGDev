<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cbChangedDiagnosis.Properties.Buttons19" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAo5JREFUOE+NkltI
        k2EYx6PATJyEetFdF5VCUi4kKoMIb7pohoTCEJVAFElmUlbrKISKW+apSFeWU9E85LFlNj7nPGQ2zDw1
        KOcUtSRdUphdCb++7zOYQ6Q++MH78j7/3/s+D98WwAO1Ws2/WF/vEZaQCpxO5waEV61y2GAweEg2CMKi
        NVwtriGr3CRu3d/CwgIajUZer5d4hNP0Rmyjdt59nMRg6uWkJg/z21GpkNXVVdLT0xkaGpL3kkSpVLrD
        T5rM2Bxz6Ew22oedhNysQXmtguBEHa2WATmk0+lkSWpqKhEREW5BjLYQ69gkScZO1KVmuTinsR/fuHx2
        xufjr7oszmGK3ysrzEyvzaNAl7UmCE+8Q2mbhdy2AfZqqwhIKUWRUCSGC1CI+IlrReR10nIMuFwL/Prh
        Yn76E5b25r+CpGz0DQJRBS0EnDdQ1rnWc16bTQwXyvieyiD2YjZjw4Msf59lad6B0FSyJjiiiiOlqI6j
        typRnCsWby+UBVILfvGiQGzD50QKsalaBgesLC86cM2MuwXSCw6cTebghYcoYvPwj78nC+42vkERnYPf
        mRtsD40iS6fH1mfm59dxXFM2hIZC9xB3BYcSqMoQi29j/TCBY26Rlu4RorUleCtjCD+tptpYiv29haVp
        G66JHoRavVsgEbA7BO/D8XiFJ7PjeDJeYQl4BavYf+gYlWUPsLysZX6iH5ejm292M0JNtqdAIigoiK0+
        /mwL3Ceyh8hIFcbH9xFMNczae3B9torh18yPtCBUZW4USEi/aFVFOU11lbTUGxmwNDMnh7vEcIcc/jL4
        DKFCu7mgv7tdpq/zOb0dVfS8eIS1uYiu+lws1Zl0Gq8gPL20uUA6+D+U/AEjVqsp3pWqTAAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="txtFirstName.Location" type="System.Drawing.Point, System.Drawing">
    <value>104, 25</value>
  </data>
  <data name="lblFirstName.Location" type="System.Drawing.Point, System.Drawing">
    <value>56, 22</value>
  </data>
  <data name="lblFirstName.Size" type="System.Drawing.Size, System.Drawing">
    <value>48, 26</value>
  </data>
  <data name="txtLastName.Location" type="System.Drawing.Point, System.Drawing">
    <value>398, 25</value>
  </data>
  <data name="lblLastName.Location" type="System.Drawing.Point, System.Drawing">
    <value>292, 22</value>
  </data>
  <data name="lblLastName.Size" type="System.Drawing.Size, System.Drawing">
    <value>100, 26</value>
  </data>
</root>