@model eidss.model.Schema.HumanCaseSample
@{
    Layout = "~/Views/Shared/_DetailsWindowLayout.cshtml";
}
@using eidss.model.Core
@using bv.common.Configuration
@using eidss.web.common.Utils
@using eidss.webclient.Utils;

<script type="text/javascript">
    $(".popupContent").ready(function () {
        ChangeMessageWindowHeigth();
    });  
</script>

<input id='@Model.ObjectName' name='@Model.ObjectName' type='hidden' value='@Model.Key' />

@if (BaseSettings.TranslationMode){
    <input type='hidden' id='aspclassnamePopup' value='@GetType().FullName' />
}
<div class="popupContent">
    @using (Html.BeginForm())
    {
        <div class="windowButtonsPn">
            <input id="idButtonOk" type="button" class="windowButton" onclick="sample.saveAndCloseHumanCaseSampleGridEditWindow('@(Model.CaseObjectIdent)');" value="@Translator.GetMessageString("Ok")"/>                        
            <input id="idButtonCancel" type="button" class="windowButton" onclick="bvPopup.closeDefaultPopup()" value="@Translator.GetMessageString("Cancel")"/>        
        </div>   
        <div class="windowSeparator"></div>  
        @Html.Hidden("idfMaterial", Model.idfMaterial)                                               
        <table class="level1"> 
            <tr>
                <td class="firstLabel" colspan="2">
                    @Html.BvCheckBox(Model, m => m.FilterByDiagnosis, true /*false, "sample.onFilterByDiagnosisClick"*/)
                    @*Html.Hidden("fieldForFilterByDiagnosis", "SampleType")*@
                </td>
            </tr>
            <tr>
                <td class="xlarge firstLabel">
                    @Html.BvLabel(Model, m => m.strSampleName)
                </td>
                <td>
                    @Html.BvCombobox(Model, m => m.SampleType, false, "sample.onSampleTypeChange", keyName:"idfsReference")
                </td>                            
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.strFieldBarcode)
                </td>
                <td>
                    @Html.BvEditbox(Model, m => m.strFieldBarcode)
                </td>                            
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.datFieldCollectionDate)
                </td>
                <td>
                    @Html.BvDatebox(Model, m => m.datFieldCollectionDate)
                </td>                            
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.idfSendToOffice)
                </td>
                <td>           
                    @Html.Action("InlineOrganizationPicker", "Organization", new { obj = Model, objectId = Model.idfMaterial, idfsOrganizationPropertyName = "idfSendToOffice",
                        strOrganizationPropertyName = "strSendToOffice", idfsEmployeePropertyName = "",
                        strEmployeePropertyName = "", showInInternalWindow = true, HACode = (int)eidss.model.Enums.HACode.Human  })     
                </td>                            
            </tr>
            <tr>
                <td colspan="2">
                    <div class="collapseEditWindowPanel" id="idfSendToOffice_InternalPicker">
                    </div>
                </td>
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.datFieldSentDate)
                </td>
                <td>
                    @Html.BvDatebox(Model, m => m.datFieldSentDate)
                </td>                            
            </tr>
            @if (Customization.Instance.VisibilityFeatures.IsHumanCaseSampleMainTestVisible)
            {
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.idfMainTest)
                </td>
                <td>
                    @Html.BvCombobox(Model, m => m.Testing)
                </td>                            
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.strTestResult)
                </td>
                <td>
                    @Html.BvEditbox(Model, m => m.strTestResult)
                </td>                            
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.datTestPerformedDate)
                </td>
                <td>
                    @Html.BvDatebox(Model, m => m.datTestPerformedDate)
                </td>                            
            </tr>
            }
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.strFieldCollectedByOffice, m => m.idfFieldCollectedByOffice)
                </td>
                <td>                     
                    @Html.Action("InlineOrganizationPicker", "Organization", new { obj = Model, objectId = Model.idfMaterial, idfsOrganizationPropertyName = "idfFieldCollectedByOffice",
                        strOrganizationPropertyName = "strFieldCollectedByOffice", idfsEmployeePropertyName = "idfFieldCollectedByPerson",
                        strEmployeePropertyName = "strFieldCollectedByPerson", showInInternalWindow = true, HACode = (int)eidss.model.Enums.HACode.Human })     
                </td>                            
            </tr>
            <tr>
                <td colspan="2">
                    <div class="collapseEditWindowPanel" id="idfFieldCollectedByOffice_InternalPicker">
                    </div>
                </td>
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.BvLabel(Model, m => m.strFieldCollectedByPerson, m => m.idfFieldCollectedByPerson)
                </td>
                <td>
                    @Html.Action("InlineEmployeePicker", "Employee", new { obj = Model, objectId = Model.idfMaterial, idfsEmployeePropertyName = "idfFieldCollectedByPerson", 
                        strEmployeePropertyName = "strFieldCollectedByPerson", idfsOrganizationPropertyName = "idfFieldCollectedByOffice",
                        strOrganizationPropertyName = "strFieldCollectedByOffice", showInInternalWindow = true  })                     
                </td>                            
            </tr>
            <tr>
                <td colspan="2">
                    <div class="collapseEditWindowPanel" id="idfFieldCollectedByPerson_InternalPicker">
                    </div>
                    <div class="collapseEditWindowPanel secondButton" id="idfFieldCollectedByPerson_InternalCreator">
                    </div>
                </td>
            </tr>
        </table>            
    }           
</div>
