@model ActionPanelModel

@{
    Layout = null;
}

@using bv.common.Enums
@using bv.model.Model.Core
@using eidss.model.Schema
@using eidss.webclient.Utils
@using eidss.webclient.Models

@{
    var permissions = (Model.Obj == null) ? Model.Accessor as IObjectPermissions : Model.Obj.GetPermissions();
    var bList = Model.Accessor is IObjectSelectList;

    var avaliableActionsSource = Model.Actions.Where(c => c.PanelType.Equals(Model.PanelType) && c.IsVisible(Model.Obj, permissions) &&
                                                          (c.ActionType != ActionTypes.Select && c.ActionType != ActionTypes.SelectAll && c.ActionType != ActionTypes.Container)
                                                          && (!bList || (c.ActionType != ActionTypes.Delete && c.ActionType != ActionTypes.Edit))
                                                          && (c.AppType == ActionsAppType.All || c.AppType == ActionsAppType.Web));

    var avaliableActions = avaliableActionsSource.Reverse().ToList();
    
    //определяем те действия, которые должны отображаться слева
    var actionsLeft = avaliableActions.Where(c => c.Alignment.Equals(ActionsAlignment.Left));
    //определяем те действия, которые должны отображаться справа
    var actionsRight = avaliableActions.Where(c => c.Alignment.Equals(ActionsAlignment.Right));
   
}

<table class="actionPanel">
    <tr>
        <td class="reportButtons">
            @Html.Partial("ActionsCollection", new ActionsCollectionModel(actionsLeft, Model.PanelType, Model.Accessor, Model.Obj))
        </td>
        <td class="actionButtons">
            @Html.Partial("ActionsCollection", new ActionsCollectionModel(actionsRight, Model.PanelType, Model.Accessor, Model.Obj))
        </td> 
    </tr>
</table>