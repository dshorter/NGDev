@model eidss.model.Schema.AsSession
@using Kendo.Mvc.UI
@using eidss.web.common.Utils
@using bv.common.Configuration
@using eidss.webclient.Utils
@using eidss.model.Schema

@(Html.Kendo().TabStrip()
    .Name("SummaryInfo")
    .Animation(animation => animation.Enable(false))
    .HtmlAttributes(new { @class = "innerTabs oneLineHeightInnerTab" })
    .Items(items =>
    {
        items.Add()
            .Text(Translator.GetMessageString("tabTitleFarmsHerdsSpecies"))
            .HtmlAttributes(Config.GetBoolSetting("AutoTestingVersion") ? (object)new { bvid = "tabTitleFarmsHerdsSpecies" } : new { })
            .Content(
                @<text>
                     <div class="tabPanelContent">
                            @Html.Action("AsSessionFarmsGrid", "Grids",
                                new
                                {
                                    root = Model.idfMonitoringSession,
                                    name = Model.ObjectIdent + "ASFarmsSummary",
                                    itemslist = Model.ASFarmsSummary,
                                    isReadOnly = Model.IsReadOnly("ASFarmsSummary") || (Model.GetPermissions() == null ? false : Model.GetPermissions().IsReadOnlyForEdit),
                                    blnIsDetailsFarm = false,
                                    blnIsSummaryFarm = true
                                })
                     </div>
                 </text>);
        items.Add()
            .Text(Translator.GetMessageString("tabTitleAnimalsSamples"))
            .HtmlAttributes(Config.GetBoolSetting("AutoTestingVersion") ? (object)new { bvid = "tabTitleAnimalsSamples" } : new { })
            .Content(
                    @<text>
                     <div class="tabPanelContent">
                         @Html.Action("AsSessionSummaryGrid", "Grids",
                                      new
                                          {
                                              root = Model.idfMonitoringSession,
                                              name = Model.ObjectIdent + "SummaryItems",
                                              summaryitemslist = Model.SummaryItems,
                                              isReadOnly = Model.IsReadOnly("SummaryItems") || (Model.GetPermissions() == null ? false : Model.GetPermissions().IsReadOnlyForEdit)
                                          })
                         <table class="level1">
                             <tr>
                                 <td class="xlarge firstLabel">@Html.BvLabel(Model, m => m.intTotalSampledAnimals)
                                 </td>
                                 <td class="number">@Html.BvReadOnlyEditbox(Model, m => m.intTotalSampledAnimals)
                                 </td>
                                 <td class="xxlarge label">@Html.BvLabel(Model, m => m.intTotalPositiveAnimals)
                                 </td>
                                 <td class="number">@Html.BvReadOnlyEditbox(Model, m => m.intTotalPositiveAnimals)
                                 </td>
                                 <td class="medium label">@Html.BvLabel(Model, m => m.intTotalSamples)
                                 </td>
                                 <td class="number">@Html.BvReadOnlyEditbox(Model, m => m.intTotalSamples)
                                 </td>
                             </tr>
                         </table>
                     </div>
                    </text>);
    })
    .SelectedIndex(0))

